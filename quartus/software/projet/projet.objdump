
projet.elf:     file format elf32-littlenios2
projet.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040244

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x0000fc7c memsz 0x0000fc7c flags r-x
    LOAD off    0x00010c9c vaddr 0x0004fc9c paddr 0x00051788 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00013274 vaddr 0x00053274 paddr 0x00053274 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f714  00040244  00040244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000344  0004f958  0004f958  00010958  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0004fc9c  00051788  00010c9c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00053274  00053274  00013274  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2 00000000  000533d4  000533d4  00012788  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012788  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000f48  00000000  00000000  000127b0  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000249a9  00000000  00000000  000136f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009549  00000000  00000000  000380a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b9fa  00000000  00000000  000415ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000021c0  00000000  00000000  0004cfe4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000038f5  00000000  00000000  0004f1a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017b0d  00000000  00000000  00052a99  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000060  00000000  00000000  0006a5a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001920  00000000  00000000  0006a608  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006f13e  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000a  00000000  00000000  0006f141  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006f14b  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006f14c  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0006f14d  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0006f151  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0006f155  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0006f159  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0006f162  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0006f16b  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000c  00000000  00000000  0006f174  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000003a  00000000  00000000  0006f180  2**0
                  CONTENTS, READONLY
 29 .jdi          000058cf  00000000  00000000  0006f1ba  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     00072d18  00000000  00000000  00074a89  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040244 l    d  .text	00000000 .text
0004f958 l    d  .rodata	00000000 .rodata
0004fc9c l    d  .rwdata	00000000 .rwdata
00053274 l    d  .bss	00000000 .bss
000533d4 l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../projet_bsp//obj/HAL/src/crt0.o
0004028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0004f9ea l     O .rodata	00000010 zeroes.4404
00042b38 l     F .text	000000bc __sbprintf
0004f9fa l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00042d48 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00044878 l     F .text	00000008 __fp_unlock
0004488c l     F .text	0000019c __sinit.part.1
00044a28 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0004fc9c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
000500e0 l     O .rwdata	00000020 lc_ctype_charset
000500c0 l     O .rwdata	00000020 lc_message_charset
00050100 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0004fa2c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00047f8c l     F .text	000000fc __sprint_r.part.0
0004fb60 l     O .rodata	00000010 blanks.4348
0004fb50 l     O .rodata	00000010 zeroes.4349
00049518 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0004d020 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004d12c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004d158 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0004d244 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004d324 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004d410 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0004d5e4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00051778 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0004d860 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0004d994 l     F .text	00000034 alt_dev_reg
000506e8 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004dc88 l     F .text	0000020c altera_avalon_jtag_uart_irq
0004de94 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0004e4cc l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0004e88c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0004ed00 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0004ee40 l     F .text	0000003c alt_get_errno
0004ee7c l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
000532a8 g     O .bss	00000004 alt_instruction_exception_handler
000407a0 g     F .text	00000018 putchar
00047468 g     F .text	00000074 _mprec_log10
00047554 g     F .text	0000008c __any_on
00049c0c g     F .text	00000054 _isatty_r
0004fa38 g     O .rodata	00000028 __mprec_tinytens
0004d520 g     F .text	0000007c alt_main
000407b8 g     F .text	000000c0 _puts_r
000532d4 g     O .bss	00000100 alt_irq
00049c60 g     F .text	00000060 _lseek_r
00051788 g       *ABS*	00000000 __flash_rwdata_start
0004bb4c g     F .text	00000088 .hidden __eqdf2
000533d4 g       *ABS*	00000000 __alt_heap_start
0004075c g     F .text	0000003c printf
00049d20 g     F .text	0000009c _wcrtomb_r
00047e4c g     F .text	0000005c __sseek
00044bc8 g     F .text	00000010 __sinit
000495d4 g     F .text	00000140 __swbuf_r
00045690 g     F .text	0000007c _setlocale_r
00044a30 g     F .text	00000068 __sfmoreglue
0004d5c0 g     F .text	00000024 __malloc_unlock
00046360 g     F .text	0000015c memmove
00044bb0 g     F .text	00000018 _cleanup
000465e4 g     F .text	000000a8 _Balloc
0004bbd4 g     F .text	000000dc .hidden __gtdf2
0004f238 g     F .text	00000024 altera_nios2_gen2_irq_init
00040000 g     F .entry	0000001c __reset
00040020 g       *ABS*	00000000 __flash_exceptions_start
00049bb0 g     F .text	0000005c _fstat_r
0005328c g     O .bss	00000004 errno
00047dc8 g     F .text	00000008 __seofread
00053294 g     O .bss	00000004 alt_argv
00059748 g       *ABS*	00000000 _gp
0004d830 g     F .text	00000030 usleep
00050568 g     O .rwdata	00000180 alt_fd_list
00040798 g     F .text	00000008 _putchar_r
0004f25c g     F .text	00000090 alt_find_dev
00046218 g     F .text	00000148 memcpy
00044880 g     F .text	0000000c _cleanup_r
0004ce38 g     F .text	000000dc .hidden __floatsidf
0004edc4 g     F .text	0000007c alt_io_redirect
0004bcb0 g     F .text	000000f4 .hidden __ltdf2
0004f958 g       *ABS*	00000000 __DTOR_END__
00040878 g     F .text	00000014 puts
0004f528 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00047cac g     F .text	00000074 __fpclassifyd
000473c4 g     F .text	000000a4 __ratio
000494fc g     F .text	0000001c __vfiprintf_internal
0004e08c g     F .text	0000021c altera_avalon_jtag_uart_read
0004072c g     F .text	00000030 _printf_r
00040670 g     F .text	00000064 .hidden __udivsi3
0004d280 g     F .text	000000a4 isatty
0004fa88 g     O .rodata	000000c8 __mprec_tens
0004570c g     F .text	0000000c __locale_charset
0004f498 g     F .text	00000090 alt_icache_flush
00053288 g     O .bss	00000004 __malloc_top_pad
00051750 g     O .rwdata	00000004 __mb_cur_max
0004573c g     F .text	0000000c _localeconv_r
000469f0 g     F .text	0000003c __i2b
0004504c g     F .text	000004bc __sfvwrite_r
00047d20 g     F .text	00000054 _sbrk_r
00049cc0 g     F .text	00000060 _read_r
00051770 g     O .rwdata	00000004 alt_max_fd
000498a4 g     F .text	000000f0 _fclose_r
00044848 g     F .text	00000030 fflush
00053284 g     O .bss	00000004 __malloc_max_sbrked_mem
0004a9b8 g     F .text	000008ac .hidden __adddf3
0004716c g     F .text	0000010c __b2d
0004a480 g     F .text	00000538 .hidden __umoddi3
0004d44c g     F .text	000000d4 lseek
00051748 g     O .rwdata	00000004 _global_impure_ptr
00047748 g     F .text	00000564 _realloc_r
000533d4 g       *ABS*	00000000 __bss_end
0004ec10 g     F .text	000000f0 alt_iic_isr_register
0004f130 g     F .text	00000108 alt_tick
00049f08 g     F .text	00000578 .hidden __udivdi3
00049b0c g     F .text	00000024 _fputwc_r
0004fa60 g     O .rodata	00000028 __mprec_bigtens
000467d4 g     F .text	00000104 __s2b
0004cf14 g     F .text	000000a8 .hidden __floatunsidf
00046eac g     F .text	00000060 __mcmp
00044be8 g     F .text	00000018 __fp_lock_all
0004ebc4 g     F .text	0000004c alt_ic_irq_enabled
0004f094 g     F .text	0000009c alt_alarm_stop
0005329c g     O .bss	00000004 alt_irq_active
000400fc g     F .exceptions	000000d4 alt_irq_handler
00050540 g     O .rwdata	00000028 alt_dev_null
0004e844 g     F .text	00000048 alt_dcache_flush_all
000468d8 g     F .text	00000068 __hi0bits
0004cdb8 g     F .text	00000080 .hidden __fixdfsi
00051788 g       *ABS*	00000000 __ram_rwdata_end
00051768 g     O .rwdata	00000008 alt_dev_list
0004d89c g     F .text	000000f8 write
000475e0 g     F .text	000000a0 _putc_r
0004fc9c g       *ABS*	00000000 __ram_rodata_end
0004d194 g     F .text	000000b0 fstat
0004bcb0 g     F .text	000000f4 .hidden __ledf2
00046c24 g     F .text	00000140 __pow5mult
000480a0 g     F .text	0000145c ___vfiprintf_internal_r
0005327c g     O .bss	00000004 __nlocale_changed
000406d4 g     F .text	00000058 .hidden __umodsi3
000533d4 g       *ABS*	00000000 end
0004dbc8 g     F .text	000000c0 altera_avalon_jtag_uart_init
000401d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0004f958 g       *ABS*	00000000 __CTOR_LIST__
00067100 g       *ABS*	00000000 __alt_stack_pointer
0004e544 g     F .text	0000007c alt_avalon_timer_sc_init
0004cfbc g     F .text	00000064 .hidden __clzsi2
0004e2a8 g     F .text	00000224 altera_avalon_jtag_uart_write
00044bd8 g     F .text	00000004 __sfp_lock_acquire
00046134 g     F .text	000000e4 memchr
00040924 g     F .text	000021f8 ___vfprintf_internal_r
00044d3c g     F .text	00000310 _free_r
00045718 g     F .text	00000010 __locale_mb_cur_max
0004f7a4 g     F .text	00000180 __call_exitprocs
00053278 g     O .bss	00000004 __mlocale_changed
00051754 g     O .rwdata	00000004 __malloc_sbrk_base
00040244 g     F .text	0000004c _start
000532a0 g     O .bss	00000004 _alt_tick_rate
00046d64 g     F .text	00000148 __lshift
000532a4 g     O .bss	00000004 _alt_nticks
0004d620 g     F .text	000000fc read
0004da00 g     F .text	00000064 alt_sys_init
0004f68c g     F .text	00000118 __register_exitproc
00046a2c g     F .text	000001f8 __multiply
0004df34 g     F .text	00000068 altera_avalon_jtag_uart_close
0004fc9c g       *ABS*	00000000 __ram_rwdata_start
0004f958 g       *ABS*	00000000 __ram_rodata_start
000532ac g     O .bss	00000028 __malloc_current_mallinfo
00047278 g     F .text	0000014c __d2b
0004da64 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0004f3f4 g     F .text	000000a4 alt_get_fd
0004e6ec g     F .text	00000158 alt_busy_sleep
0004978c g     F .text	00000054 _close_r
0004f610 g     F .text	0000007c memcmp
0004db24 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
000533d4 g       *ABS*	00000000 __alt_stack_base
0004db74 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00042bf4 g     F .text	00000154 __swsetup_r
0004b264 g     F .text	000008e8 .hidden __divdf3
00044a98 g     F .text	00000118 __sfp
000474dc g     F .text	00000078 __copybits
00050138 g     O .rwdata	00000408 __malloc_av_
00044be4 g     F .text	00000004 __sinit_lock_release
0004bda4 g     F .text	00000718 .hidden __muldf3
00047d74 g     F .text	00000054 __sread
0004f2ec g     F .text	00000108 alt_find_file
0004e8c8 g     F .text	000000a4 alt_dev_llist_insert
0004d59c g     F .text	00000024 __malloc_lock
0004d780 g     F .text	000000b0 sbrk
000447ec g     F .text	0000005c _fflush_r
000497e0 g     F .text	000000c4 _calloc_r
00053274 g       *ABS*	00000000 __bss_start
000464bc g     F .text	00000128 memset
000404a4 g     F .text	000000d4 main
00053298 g     O .bss	00000004 alt_envp
00053280 g     O .bss	00000004 __malloc_max_total_mem
0004dac4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00049714 g     F .text	00000018 __swbuf
00047ea8 g     F .text	00000008 __sclose
00067100 g       *ABS*	00000000 __alt_heap_limit
00049994 g     F .text	00000014 fclose
00042f48 g     F .text	00001688 _dtoa_r
00045928 g     F .text	0000080c _malloc_r
00049e7c g     F .text	00000030 __ascii_wctomb
00051774 g     O .rwdata	00000004 alt_errno
00045508 g     F .text	000000c4 _fwalk
00047680 g     F .text	000000c8 putc
00040578 g     F .text	00000084 .hidden __divsi3
00044c18 g     F .text	00000124 _malloc_trim_r
0004f958 g       *ABS*	00000000 __CTOR_END__
00047eb0 g     F .text	000000dc strcmp
0004f958 g       *ABS*	00000000 __flash_rodata_start
0004f958 g       *ABS*	00000000 __DTOR_LIST__
0004bb4c g     F .text	00000088 .hidden __nedf2
0004d9c8 g     F .text	00000038 alt_irq_init
0004d71c g     F .text	00000064 alt_release_fd
0004fb70 g     O .rodata	00000100 .hidden __clz_tab
00053274 g     O .bss	00000004 _PathLocale
0004f5c4 g     F .text	00000014 atexit
0004972c g     F .text	00000060 _write_r
00045748 g     F .text	00000018 setlocale
0005174c g     O .rwdata	00000004 _impure_ptr
00053290 g     O .bss	00000004 alt_argc
000445d0 g     F .text	0000021c __sflush_r
0004e9cc g     F .text	00000060 _do_dtors
00045734 g     F .text	00000008 __locale_cjk_lang
00040020 g       .exceptions	00000000 alt_irq_entry
00047108 g     F .text	00000064 __ulp
00044c00 g     F .text	00000018 __fp_unlock_all
00051760 g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
00045760 g     F .text	0000000c localeconv
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory2
0004ea60 g     F .text	00000050 alt_ic_isr_register
00051788 g       *ABS*	00000000 _edata
000533d4 g       *ABS*	00000000 _end
000499a8 g     F .text	00000164 __fputwc
00040244 g       *ABS*	00000000 __ram_exceptions_end
0004df9c g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0004eb38 g     F .text	0000008c alt_ic_irq_disable
00047dd0 g     F .text	0000007c __swrite
00051758 g     O .rwdata	00000004 __malloc_trim_threshold
00045728 g     F .text	0000000c __locale_msgcharset
0004f5d8 g     F .text	00000038 exit
000455cc g     F .text	000000c4 _fwalk_reent
00046f0c g     F .text	000001fc __mdiff
000405fc g     F .text	00000074 .hidden __modsi3
00067100 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
00044bdc g     F .text	00000004 __sfp_lock_release
0004f924 g     F .text	00000034 _exit
0004e5c0 g     F .text	0000012c alt_alarm_start
0004576c g     F .text	000001bc __smakebuf_r
0004088c g     F .text	00000098 strlen
0004ef40 g     F .text	00000154 open
0004bbd4 g     F .text	000000dc .hidden __gedf2
0005175c g     O .rwdata	00000004 __wctomb
00048088 g     F .text	00000018 __sprint_r
0004ea2c g     F .text	00000034 alt_icache_flush_all
00040290 g     F .text	0000011c printNumHex
0005177c g     O .rwdata	00000004 alt_priority_mask
0004eab0 g     F .text	00000088 alt_ic_irq_enable
00042b1c g     F .text	0000001c __vfprintf_internal
00049eac g     F .text	0000005c _wctomb_r
0004c4bc g     F .text	000008fc .hidden __subdf3
00046940 g     F .text	000000b0 __lo0bits
00051780 g     O .rwdata	00000008 alt_alarm_list
0004e96c g     F .text	00000060 _do_ctors
00049dbc g     F .text	000000c0 wcrtomb
0004d05c g     F .text	000000d0 close
0004d38c g     F .text	00000084 alt_load
00049b30 g     F .text	00000080 fputwc
000403ac g     F .text	000000f8 sweeploop
00044be0 g     F .text	00000004 __sinit_lock_acquire
000466b4 g     F .text	00000120 __multadd
0004668c g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__alt_data_end+0xfffd8f04>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08409114 	ori	at,at,580
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__alt_mem_onchip_memory2-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   40094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   40098:	00401d00 	call	401d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   40118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0fffb17 	ldw	r3,-20(fp)
   40130:	e0bffc17 	ldw	r2,-16(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001426 	beq	r2,zero,4018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4013c:	00800174 	movhi	r2,5
   40140:	108cb504 	addi	r2,r2,13012
   40144:	e0fffd17 	ldw	r3,-12(fp)
   40148:	180690fa 	slli	r3,r3,3
   4014c:	10c5883a 	add	r2,r2,r3
   40150:	10c00017 	ldw	r3,0(r2)
   40154:	00800174 	movhi	r2,5
   40158:	108cb504 	addi	r2,r2,13012
   4015c:	e13ffd17 	ldw	r4,-12(fp)
   40160:	200890fa 	slli	r4,r4,3
   40164:	1105883a 	add	r2,r2,r4
   40168:	10800104 	addi	r2,r2,4
   4016c:	10800017 	ldw	r2,0(r2)
   40170:	1009883a 	mov	r4,r2
   40174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   40178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   4017c:	0005313a 	rdctl	r2,ipending
   40180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   40184:	e0bfff17 	ldw	r2,-4(fp)
   40188:	00000706 	br	401a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   4018c:	e0bffc17 	ldw	r2,-16(fp)
   40190:	1085883a 	add	r2,r2,r2
   40194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   40198:	e0bffd17 	ldw	r2,-12(fp)
   4019c:	10800044 	addi	r2,r2,1
   401a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   401a4:	003fe106 	br	4012c <__alt_data_end+0xfffd902c>

    active = alt_irq_pending ();
   401a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   401ac:	e0bffb17 	ldw	r2,-20(fp)
   401b0:	103fdb1e 	bne	r2,zero,40120 <__alt_data_end+0xfffd9020>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401b4:	0001883a 	nop
}
   401b8:	0001883a 	nop
   401bc:	e037883a 	mov	sp,fp
   401c0:	dfc00117 	ldw	ra,4(sp)
   401c4:	df000017 	ldw	fp,0(sp)
   401c8:	dec00204 	addi	sp,sp,8
   401cc:	f800283a 	ret

000401d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401d0:	defffb04 	addi	sp,sp,-20
   401d4:	dfc00415 	stw	ra,16(sp)
   401d8:	df000315 	stw	fp,12(sp)
   401dc:	df000304 	addi	fp,sp,12
   401e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   401e4:	000531fa 	rdctl	r2,exception
   401e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   401ec:	e0bffd17 	ldw	r2,-12(fp)
   401f0:	10801f0c 	andi	r2,r2,124
   401f4:	1004d0ba 	srli	r2,r2,2
   401f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   401fc:	0005333a 	rdctl	r2,badaddr
   40200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   40204:	d0a6d817 	ldw	r2,-25760(gp)
   40208:	10000726 	beq	r2,zero,40228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   4020c:	d0a6d817 	ldw	r2,-25760(gp)
   40210:	e0fffd17 	ldw	r3,-12(fp)
   40214:	e1bffe17 	ldw	r6,-8(fp)
   40218:	e17fff17 	ldw	r5,-4(fp)
   4021c:	1809883a 	mov	r4,r3
   40220:	103ee83a 	callr	r2
   40224:	00000206 	br	40230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   40228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   4022c:	0005883a 	mov	r2,zero
}
   40230:	e037883a 	mov	sp,fp
   40234:	dfc00117 	ldw	ra,4(sp)
   40238:	df000017 	ldw	fp,0(sp)
   4023c:	dec00204 	addi	sp,sp,8
   40240:	f800283a 	ret

Disassembly of section .text:

00040244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   40244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   40248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   4024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   40250:	00bffd16 	blt	zero,r2,40248 <__alt_data_end+0xfffd9148>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40254:	06c001b4 	movhi	sp,6
    ori sp, sp, %lo(__alt_stack_pointer)
   40258:	dedc4014 	ori	sp,sp,28928
    movhi gp, %hi(_gp)
   4025c:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   40260:	d6a5d214 	ori	gp,gp,38728
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40264:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   40268:	108c9d14 	ori	r2,r2,12916

    movhi r3, %hi(__bss_end)
   4026c:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   40270:	18ccf514 	ori	r3,r3,13268

    beq r2, r3, 1f
   40274:	10c00326 	beq	r2,r3,40284 <_start+0x40>

0:
    stw zero, (r2)
   40278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   4027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   40280:	10fffd36 	bltu	r2,r3,40278 <__alt_data_end+0xfffd9178>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40284:	004d38c0 	call	4d38c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   40288:	004d5200 	call	4d520 <alt_main>

0004028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   4028c:	003fff06 	br	4028c <__alt_data_end+0xfffd918c>

00040290 <printNumHex>:
#include "stdio.h"
#include <io.h>


void printNumHex(int num)
{
   40290:	deffef04 	addi	sp,sp,-68
   40294:	dfc01015 	stw	ra,64(sp)
   40298:	df000f15 	stw	fp,60(sp)
   4029c:	dc000e15 	stw	r16,56(sp)
   402a0:	df000f04 	addi	fp,sp,60
   402a4:	e13ffe15 	stw	r4,-8(fp)
	unsigned int SevenSeg[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0xED, 0xFD, 0x07, 0xFF, 0xEF};
   402a8:	00800fc4 	movi	r2,63
   402ac:	e0bff415 	stw	r2,-48(fp)
   402b0:	00800184 	movi	r2,6
   402b4:	e0bff515 	stw	r2,-44(fp)
   402b8:	008016c4 	movi	r2,91
   402bc:	e0bff615 	stw	r2,-40(fp)
   402c0:	008013c4 	movi	r2,79
   402c4:	e0bff715 	stw	r2,-36(fp)
   402c8:	00801984 	movi	r2,102
   402cc:	e0bff815 	stw	r2,-32(fp)
   402d0:	00803b44 	movi	r2,237
   402d4:	e0bff915 	stw	r2,-28(fp)
   402d8:	00803f44 	movi	r2,253
   402dc:	e0bffa15 	stw	r2,-24(fp)
   402e0:	008001c4 	movi	r2,7
   402e4:	e0bffb15 	stw	r2,-20(fp)
   402e8:	00803fc4 	movi	r2,255
   402ec:	e0bffc15 	stw	r2,-16(fp)
   402f0:	00803bc4 	movi	r2,239
   402f4:	e0bffd15 	stw	r2,-12(fp)

	int offset = 4;
   402f8:	00800104 	movi	r2,4
   402fc:	e0bff215 	stw	r2,-56(fp)
	int digit_count = 6;
   40300:	00800184 	movi	r2,6
   40304:	e0bff315 	stw	r2,-52(fp)

	// split the count into individual digits
	for (int i = 0; i < digit_count; i++)
   40308:	e03ff115 	stw	zero,-60(fp)
   4030c:	00001b06 	br	4037c <printNumHex+0xec>
	{
		IOWR_ALTERA_AVALON_PIO_DATA(SEVEN_SEG_BASE + i*offset, ~SevenSeg[num % 10] );
   40310:	e0fff117 	ldw	r3,-60(fp)
   40314:	e0bff217 	ldw	r2,-56(fp)
   40318:	1887383a 	mul	r3,r3,r2
   4031c:	00800234 	movhi	r2,8
   40320:	10840004 	addi	r2,r2,4096
   40324:	1885883a 	add	r2,r3,r2
   40328:	1021883a 	mov	r16,r2
   4032c:	e0bffe17 	ldw	r2,-8(fp)
   40330:	01400284 	movi	r5,10
   40334:	1009883a 	mov	r4,r2
   40338:	00405fc0 	call	405fc <__modsi3>
   4033c:	1085883a 	add	r2,r2,r2
   40340:	1085883a 	add	r2,r2,r2
   40344:	e0fff104 	addi	r3,fp,-60
   40348:	1885883a 	add	r2,r3,r2
   4034c:	10800304 	addi	r2,r2,12
   40350:	10800017 	ldw	r2,0(r2)
   40354:	0084303a 	nor	r2,zero,r2
   40358:	80800035 	stwio	r2,0(r16)
		num /= 10;
   4035c:	e0bffe17 	ldw	r2,-8(fp)
   40360:	01400284 	movi	r5,10
   40364:	1009883a 	mov	r4,r2
   40368:	00405780 	call	40578 <__divsi3>
   4036c:	e0bffe15 	stw	r2,-8(fp)

	int offset = 4;
	int digit_count = 6;

	// split the count into individual digits
	for (int i = 0; i < digit_count; i++)
   40370:	e0bff117 	ldw	r2,-60(fp)
   40374:	10800044 	addi	r2,r2,1
   40378:	e0bff115 	stw	r2,-60(fp)
   4037c:	e0fff117 	ldw	r3,-60(fp)
   40380:	e0bff317 	ldw	r2,-52(fp)
   40384:	18bfe216 	blt	r3,r2,40310 <__alt_data_end+0xfffd9210>
	{
		IOWR_ALTERA_AVALON_PIO_DATA(SEVEN_SEG_BASE + i*offset, ~SevenSeg[num % 10] );
		num /= 10;
	}
	printf("\n");
   40388:	01000284 	movi	r4,10
   4038c:	00407a00 	call	407a0 <putchar>
}
   40390:	0001883a 	nop
   40394:	e6ffff04 	addi	sp,fp,-4
   40398:	dfc00217 	ldw	ra,8(sp)
   4039c:	df000117 	ldw	fp,4(sp)
   403a0:	dc000017 	ldw	r16,0(sp)
   403a4:	dec00304 	addi	sp,sp,12
   403a8:	f800283a 	ret

000403ac <sweeploop>:

void sweeploop(int delay, int increment)
{
   403ac:	defff904 	addi	sp,sp,-28
   403b0:	dfc00615 	stw	ra,24(sp)
   403b4:	df000515 	stw	fp,20(sp)
   403b8:	df000504 	addi	fp,sp,20
   403bc:	e13ffe15 	stw	r4,-8(fp)
   403c0:	e17fff15 	stw	r5,-4(fp)
	int distance = 0;
   403c4:	e03ffd15 	stw	zero,-12(fp)

	while(1)
	{
	    for (int i = 0; i <= 1023; i+=increment) {
   403c8:	e03ffb15 	stw	zero,-20(fp)
   403cc:	00001606 	br	40428 <sweeploop+0x7c>
	        distance = IORD(AVALON_TELEMETRE_US_INST_BASE, 0);
   403d0:	00800234 	movhi	r2,8
   403d4:	10842704 	addi	r2,r2,4252
   403d8:	10800037 	ldwio	r2,0(r2)
   403dc:	e0bffd15 	stw	r2,-12(fp)
	        printf("angle %d : %d\n",i , distance);
   403e0:	e1bffd17 	ldw	r6,-12(fp)
   403e4:	e17ffb17 	ldw	r5,-20(fp)
   403e8:	01000174 	movhi	r4,5
   403ec:	213e5604 	addi	r4,r4,-1704
   403f0:	004075c0 	call	4075c <printf>
	        printNumHex(distance);;
   403f4:	e13ffd17 	ldw	r4,-12(fp)
   403f8:	00402900 	call	40290 <printNumHex>
	        IOWR(AVALON_SERVOMOTEUR_0_BASE, 0, i);
   403fc:	00800234 	movhi	r2,8
   40400:	10842604 	addi	r2,r2,4248
   40404:	e0fffb17 	ldw	r3,-20(fp)
   40408:	10c00035 	stwio	r3,0(r2)
	        usleep(delay); // delay for 1 ms
   4040c:	e0bffe17 	ldw	r2,-8(fp)
   40410:	1009883a 	mov	r4,r2
   40414:	004d8300 	call	4d830 <usleep>
{
	int distance = 0;

	while(1)
	{
	    for (int i = 0; i <= 1023; i+=increment) {
   40418:	e0fffb17 	ldw	r3,-20(fp)
   4041c:	e0bfff17 	ldw	r2,-4(fp)
   40420:	1885883a 	add	r2,r3,r2
   40424:	e0bffb15 	stw	r2,-20(fp)
   40428:	e0bffb17 	ldw	r2,-20(fp)
   4042c:	10810010 	cmplti	r2,r2,1024
   40430:	103fe71e 	bne	r2,zero,403d0 <__alt_data_end+0xfffd92d0>
	        printNumHex(distance);;
	        IOWR(AVALON_SERVOMOTEUR_0_BASE, 0, i);
	        usleep(delay); // delay for 1 ms
	    }

	    for (int i = 1023; i >= 0; i-=increment) {
   40434:	0080ffc4 	movi	r2,1023
   40438:	e0bffc15 	stw	r2,-16(fp)
   4043c:	00001606 	br	40498 <sweeploop+0xec>
	        distance = IORD(AVALON_TELEMETRE_US_INST_BASE, 0);
   40440:	00800234 	movhi	r2,8
   40444:	10842704 	addi	r2,r2,4252
   40448:	10800037 	ldwio	r2,0(r2)
   4044c:	e0bffd15 	stw	r2,-12(fp)
	        printf("angle %d : %d\n",i , distance);
   40450:	e1bffd17 	ldw	r6,-12(fp)
   40454:	e17ffc17 	ldw	r5,-16(fp)
   40458:	01000174 	movhi	r4,5
   4045c:	213e5604 	addi	r4,r4,-1704
   40460:	004075c0 	call	4075c <printf>
	        printNumHex(distance);;
   40464:	e13ffd17 	ldw	r4,-12(fp)
   40468:	00402900 	call	40290 <printNumHex>
	        IOWR(AVALON_SERVOMOTEUR_0_BASE, 0, i);
   4046c:	00800234 	movhi	r2,8
   40470:	10842604 	addi	r2,r2,4248
   40474:	e0fffc17 	ldw	r3,-16(fp)
   40478:	10c00035 	stwio	r3,0(r2)
	        usleep(delay); // delay for 1 ms
   4047c:	e0bffe17 	ldw	r2,-8(fp)
   40480:	1009883a 	mov	r4,r2
   40484:	004d8300 	call	4d830 <usleep>
	        printNumHex(distance);;
	        IOWR(AVALON_SERVOMOTEUR_0_BASE, 0, i);
	        usleep(delay); // delay for 1 ms
	    }

	    for (int i = 1023; i >= 0; i-=increment) {
   40488:	e0fffc17 	ldw	r3,-16(fp)
   4048c:	e0bfff17 	ldw	r2,-4(fp)
   40490:	1885c83a 	sub	r2,r3,r2
   40494:	e0bffc15 	stw	r2,-16(fp)
   40498:	e0bffc17 	ldw	r2,-16(fp)
   4049c:	103fe80e 	bge	r2,zero,40440 <__alt_data_end+0xfffd9340>
	        printf("angle %d : %d\n",i , distance);
	        printNumHex(distance);;
	        IOWR(AVALON_SERVOMOTEUR_0_BASE, 0, i);
	        usleep(delay); // delay for 1 ms
	    }
	}
   404a0:	003fc906 	br	403c8 <__alt_data_end+0xfffd92c8>

000404a4 <main>:
}


int main()
{
   404a4:	defffd04 	addi	sp,sp,-12
   404a8:	dfc00215 	stw	ra,8(sp)
   404ac:	df000115 	stw	fp,4(sp)
   404b0:	df000104 	addi	fp,sp,4
	int distance = 0;
   404b4:	e03fff15 	stw	zero,-4(fp)
	printf("Hello from Nios II!\n");
   404b8:	01000174 	movhi	r4,5
   404bc:	213e5a04 	addi	r4,r4,-1688
   404c0:	00408780 	call	40878 <puts>

	sweeploop(200000, 40);
   404c4:	01400a04 	movi	r5,40
   404c8:	010000f4 	movhi	r4,3
   404cc:	21035004 	addi	r4,r4,3392
   404d0:	00403ac0 	call	403ac <sweeploop>

	while(1)
	{
		distance = IORD(AVALON_TELEMETRE_US_INST_BASE, 0);
   404d4:	00800234 	movhi	r2,8
   404d8:	10842704 	addi	r2,r2,4252
   404dc:	10800037 	ldwio	r2,0(r2)
   404e0:	e0bfff15 	stw	r2,-4(fp)
		printf("test = %d\n", distance);
   404e4:	e17fff17 	ldw	r5,-4(fp)
   404e8:	01000174 	movhi	r4,5
   404ec:	213e5f04 	addi	r4,r4,-1668
   404f0:	004075c0 	call	4075c <printf>
		printNumHex(distance);
   404f4:	e13fff17 	ldw	r4,-4(fp)
   404f8:	00402900 	call	40290 <printNumHex>
		printf("servo left!\n");
   404fc:	01000174 	movhi	r4,5
   40500:	213e6204 	addi	r4,r4,-1656
   40504:	00408780 	call	40878 <puts>
		IOWR(AVALON_SERVOMOTEUR_0_BASE, 0, 0);
   40508:	0007883a 	mov	r3,zero
   4050c:	00800234 	movhi	r2,8
   40510:	10842604 	addi	r2,r2,4248
   40514:	10c00035 	stwio	r3,0(r2)
		usleep(100000);
   40518:	010000b4 	movhi	r4,2
   4051c:	2121a804 	addi	r4,r4,-31072
   40520:	004d8300 	call	4d830 <usleep>

		distance = IORD(AVALON_TELEMETRE_US_INST_BASE, 0);
   40524:	00800234 	movhi	r2,8
   40528:	10842704 	addi	r2,r2,4252
   4052c:	10800037 	ldwio	r2,0(r2)
   40530:	e0bfff15 	stw	r2,-4(fp)
		printf("test = %d\n", distance);
   40534:	e17fff17 	ldw	r5,-4(fp)
   40538:	01000174 	movhi	r4,5
   4053c:	213e5f04 	addi	r4,r4,-1668
   40540:	004075c0 	call	4075c <printf>
		printNumHex(distance);
   40544:	e13fff17 	ldw	r4,-4(fp)
   40548:	00402900 	call	40290 <printNumHex>
		printf("servo right!\n");
   4054c:	01000174 	movhi	r4,5
   40550:	213e6504 	addi	r4,r4,-1644
   40554:	00408780 	call	40878 <puts>
		IOWR(AVALON_SERVOMOTEUR_0_BASE, 0, 1023);
   40558:	00c0ffc4 	movi	r3,1023
   4055c:	00800234 	movhi	r2,8
   40560:	10842604 	addi	r2,r2,4248
   40564:	10c00035 	stwio	r3,0(r2)
		usleep(100000);
   40568:	010000b4 	movhi	r4,2
   4056c:	2121a804 	addi	r4,r4,-31072
   40570:	004d8300 	call	4d830 <usleep>
	}
   40574:	003fd706 	br	404d4 <__alt_data_end+0xfffd93d4>

00040578 <__divsi3>:
   40578:	20001b16 	blt	r4,zero,405e8 <__divsi3+0x70>
   4057c:	000f883a 	mov	r7,zero
   40580:	28001616 	blt	r5,zero,405dc <__divsi3+0x64>
   40584:	200d883a 	mov	r6,r4
   40588:	29001a2e 	bgeu	r5,r4,405f4 <__divsi3+0x7c>
   4058c:	00800804 	movi	r2,32
   40590:	00c00044 	movi	r3,1
   40594:	00000106 	br	4059c <__divsi3+0x24>
   40598:	10000d26 	beq	r2,zero,405d0 <__divsi3+0x58>
   4059c:	294b883a 	add	r5,r5,r5
   405a0:	10bfffc4 	addi	r2,r2,-1
   405a4:	18c7883a 	add	r3,r3,r3
   405a8:	293ffb36 	bltu	r5,r4,40598 <__alt_data_end+0xfffd9498>
   405ac:	0005883a 	mov	r2,zero
   405b0:	18000726 	beq	r3,zero,405d0 <__divsi3+0x58>
   405b4:	0005883a 	mov	r2,zero
   405b8:	31400236 	bltu	r6,r5,405c4 <__divsi3+0x4c>
   405bc:	314dc83a 	sub	r6,r6,r5
   405c0:	10c4b03a 	or	r2,r2,r3
   405c4:	1806d07a 	srli	r3,r3,1
   405c8:	280ad07a 	srli	r5,r5,1
   405cc:	183ffa1e 	bne	r3,zero,405b8 <__alt_data_end+0xfffd94b8>
   405d0:	38000126 	beq	r7,zero,405d8 <__divsi3+0x60>
   405d4:	0085c83a 	sub	r2,zero,r2
   405d8:	f800283a 	ret
   405dc:	014bc83a 	sub	r5,zero,r5
   405e0:	39c0005c 	xori	r7,r7,1
   405e4:	003fe706 	br	40584 <__alt_data_end+0xfffd9484>
   405e8:	0109c83a 	sub	r4,zero,r4
   405ec:	01c00044 	movi	r7,1
   405f0:	003fe306 	br	40580 <__alt_data_end+0xfffd9480>
   405f4:	00c00044 	movi	r3,1
   405f8:	003fee06 	br	405b4 <__alt_data_end+0xfffd94b4>

000405fc <__modsi3>:
   405fc:	20001716 	blt	r4,zero,4065c <__modsi3+0x60>
   40600:	000f883a 	mov	r7,zero
   40604:	2005883a 	mov	r2,r4
   40608:	28001216 	blt	r5,zero,40654 <__modsi3+0x58>
   4060c:	2900162e 	bgeu	r5,r4,40668 <__modsi3+0x6c>
   40610:	01800804 	movi	r6,32
   40614:	00c00044 	movi	r3,1
   40618:	00000106 	br	40620 <__modsi3+0x24>
   4061c:	30000a26 	beq	r6,zero,40648 <__modsi3+0x4c>
   40620:	294b883a 	add	r5,r5,r5
   40624:	31bfffc4 	addi	r6,r6,-1
   40628:	18c7883a 	add	r3,r3,r3
   4062c:	293ffb36 	bltu	r5,r4,4061c <__alt_data_end+0xfffd951c>
   40630:	18000526 	beq	r3,zero,40648 <__modsi3+0x4c>
   40634:	1806d07a 	srli	r3,r3,1
   40638:	11400136 	bltu	r2,r5,40640 <__modsi3+0x44>
   4063c:	1145c83a 	sub	r2,r2,r5
   40640:	280ad07a 	srli	r5,r5,1
   40644:	183ffb1e 	bne	r3,zero,40634 <__alt_data_end+0xfffd9534>
   40648:	38000126 	beq	r7,zero,40650 <__modsi3+0x54>
   4064c:	0085c83a 	sub	r2,zero,r2
   40650:	f800283a 	ret
   40654:	014bc83a 	sub	r5,zero,r5
   40658:	003fec06 	br	4060c <__alt_data_end+0xfffd950c>
   4065c:	0109c83a 	sub	r4,zero,r4
   40660:	01c00044 	movi	r7,1
   40664:	003fe706 	br	40604 <__alt_data_end+0xfffd9504>
   40668:	00c00044 	movi	r3,1
   4066c:	003ff106 	br	40634 <__alt_data_end+0xfffd9534>

00040670 <__udivsi3>:
   40670:	200d883a 	mov	r6,r4
   40674:	2900152e 	bgeu	r5,r4,406cc <__udivsi3+0x5c>
   40678:	28001416 	blt	r5,zero,406cc <__udivsi3+0x5c>
   4067c:	00800804 	movi	r2,32
   40680:	00c00044 	movi	r3,1
   40684:	00000206 	br	40690 <__udivsi3+0x20>
   40688:	10000e26 	beq	r2,zero,406c4 <__udivsi3+0x54>
   4068c:	28000516 	blt	r5,zero,406a4 <__udivsi3+0x34>
   40690:	294b883a 	add	r5,r5,r5
   40694:	10bfffc4 	addi	r2,r2,-1
   40698:	18c7883a 	add	r3,r3,r3
   4069c:	293ffa36 	bltu	r5,r4,40688 <__alt_data_end+0xfffd9588>
   406a0:	18000826 	beq	r3,zero,406c4 <__udivsi3+0x54>
   406a4:	0005883a 	mov	r2,zero
   406a8:	31400236 	bltu	r6,r5,406b4 <__udivsi3+0x44>
   406ac:	314dc83a 	sub	r6,r6,r5
   406b0:	10c4b03a 	or	r2,r2,r3
   406b4:	1806d07a 	srli	r3,r3,1
   406b8:	280ad07a 	srli	r5,r5,1
   406bc:	183ffa1e 	bne	r3,zero,406a8 <__alt_data_end+0xfffd95a8>
   406c0:	f800283a 	ret
   406c4:	0005883a 	mov	r2,zero
   406c8:	f800283a 	ret
   406cc:	00c00044 	movi	r3,1
   406d0:	003ff406 	br	406a4 <__alt_data_end+0xfffd95a4>

000406d4 <__umodsi3>:
   406d4:	2005883a 	mov	r2,r4
   406d8:	2900122e 	bgeu	r5,r4,40724 <__umodsi3+0x50>
   406dc:	28001116 	blt	r5,zero,40724 <__umodsi3+0x50>
   406e0:	01800804 	movi	r6,32
   406e4:	00c00044 	movi	r3,1
   406e8:	00000206 	br	406f4 <__umodsi3+0x20>
   406ec:	30000c26 	beq	r6,zero,40720 <__umodsi3+0x4c>
   406f0:	28000516 	blt	r5,zero,40708 <__umodsi3+0x34>
   406f4:	294b883a 	add	r5,r5,r5
   406f8:	31bfffc4 	addi	r6,r6,-1
   406fc:	18c7883a 	add	r3,r3,r3
   40700:	293ffa36 	bltu	r5,r4,406ec <__alt_data_end+0xfffd95ec>
   40704:	18000626 	beq	r3,zero,40720 <__umodsi3+0x4c>
   40708:	1806d07a 	srli	r3,r3,1
   4070c:	11400136 	bltu	r2,r5,40714 <__umodsi3+0x40>
   40710:	1145c83a 	sub	r2,r2,r5
   40714:	280ad07a 	srli	r5,r5,1
   40718:	183ffb1e 	bne	r3,zero,40708 <__alt_data_end+0xfffd9608>
   4071c:	f800283a 	ret
   40720:	f800283a 	ret
   40724:	00c00044 	movi	r3,1
   40728:	003ff706 	br	40708 <__alt_data_end+0xfffd9608>

0004072c <_printf_r>:
   4072c:	defffd04 	addi	sp,sp,-12
   40730:	2805883a 	mov	r2,r5
   40734:	dfc00015 	stw	ra,0(sp)
   40738:	d9800115 	stw	r6,4(sp)
   4073c:	d9c00215 	stw	r7,8(sp)
   40740:	21400217 	ldw	r5,8(r4)
   40744:	d9c00104 	addi	r7,sp,4
   40748:	100d883a 	mov	r6,r2
   4074c:	00409240 	call	40924 <___vfprintf_internal_r>
   40750:	dfc00017 	ldw	ra,0(sp)
   40754:	dec00304 	addi	sp,sp,12
   40758:	f800283a 	ret

0004075c <printf>:
   4075c:	defffc04 	addi	sp,sp,-16
   40760:	dfc00015 	stw	ra,0(sp)
   40764:	d9400115 	stw	r5,4(sp)
   40768:	d9800215 	stw	r6,8(sp)
   4076c:	d9c00315 	stw	r7,12(sp)
   40770:	00800174 	movhi	r2,5
   40774:	1085d304 	addi	r2,r2,5964
   40778:	10800017 	ldw	r2,0(r2)
   4077c:	200b883a 	mov	r5,r4
   40780:	d9800104 	addi	r6,sp,4
   40784:	11000217 	ldw	r4,8(r2)
   40788:	0042b1c0 	call	42b1c <__vfprintf_internal>
   4078c:	dfc00017 	ldw	ra,0(sp)
   40790:	dec00404 	addi	sp,sp,16
   40794:	f800283a 	ret

00040798 <_putchar_r>:
   40798:	21800217 	ldw	r6,8(r4)
   4079c:	00475e01 	jmpi	475e0 <_putc_r>

000407a0 <putchar>:
   407a0:	00800174 	movhi	r2,5
   407a4:	1085d304 	addi	r2,r2,5964
   407a8:	200b883a 	mov	r5,r4
   407ac:	11000017 	ldw	r4,0(r2)
   407b0:	21800217 	ldw	r6,8(r4)
   407b4:	00475e01 	jmpi	475e0 <_putc_r>

000407b8 <_puts_r>:
   407b8:	defff604 	addi	sp,sp,-40
   407bc:	dc000715 	stw	r16,28(sp)
   407c0:	2021883a 	mov	r16,r4
   407c4:	2809883a 	mov	r4,r5
   407c8:	dc400815 	stw	r17,32(sp)
   407cc:	dfc00915 	stw	ra,36(sp)
   407d0:	2823883a 	mov	r17,r5
   407d4:	004088c0 	call	4088c <strlen>
   407d8:	10c00044 	addi	r3,r2,1
   407dc:	d8800115 	stw	r2,4(sp)
   407e0:	00800174 	movhi	r2,5
   407e4:	10be6904 	addi	r2,r2,-1628
   407e8:	d8800215 	stw	r2,8(sp)
   407ec:	00800044 	movi	r2,1
   407f0:	d8800315 	stw	r2,12(sp)
   407f4:	00800084 	movi	r2,2
   407f8:	dc400015 	stw	r17,0(sp)
   407fc:	d8c00615 	stw	r3,24(sp)
   40800:	dec00415 	stw	sp,16(sp)
   40804:	d8800515 	stw	r2,20(sp)
   40808:	80000226 	beq	r16,zero,40814 <_puts_r+0x5c>
   4080c:	80800e17 	ldw	r2,56(r16)
   40810:	10001426 	beq	r2,zero,40864 <_puts_r+0xac>
   40814:	81400217 	ldw	r5,8(r16)
   40818:	2880030b 	ldhu	r2,12(r5)
   4081c:	10c8000c 	andi	r3,r2,8192
   40820:	1800061e 	bne	r3,zero,4083c <_puts_r+0x84>
   40824:	29001917 	ldw	r4,100(r5)
   40828:	00f7ffc4 	movi	r3,-8193
   4082c:	10880014 	ori	r2,r2,8192
   40830:	20c6703a 	and	r3,r4,r3
   40834:	2880030d 	sth	r2,12(r5)
   40838:	28c01915 	stw	r3,100(r5)
   4083c:	d9800404 	addi	r6,sp,16
   40840:	8009883a 	mov	r4,r16
   40844:	004504c0 	call	4504c <__sfvwrite_r>
   40848:	1000091e 	bne	r2,zero,40870 <_puts_r+0xb8>
   4084c:	00800284 	movi	r2,10
   40850:	dfc00917 	ldw	ra,36(sp)
   40854:	dc400817 	ldw	r17,32(sp)
   40858:	dc000717 	ldw	r16,28(sp)
   4085c:	dec00a04 	addi	sp,sp,40
   40860:	f800283a 	ret
   40864:	8009883a 	mov	r4,r16
   40868:	0044bc80 	call	44bc8 <__sinit>
   4086c:	003fe906 	br	40814 <__alt_data_end+0xfffd9714>
   40870:	00bfffc4 	movi	r2,-1
   40874:	003ff606 	br	40850 <__alt_data_end+0xfffd9750>

00040878 <puts>:
   40878:	00800174 	movhi	r2,5
   4087c:	1085d304 	addi	r2,r2,5964
   40880:	200b883a 	mov	r5,r4
   40884:	11000017 	ldw	r4,0(r2)
   40888:	00407b81 	jmpi	407b8 <_puts_r>

0004088c <strlen>:
   4088c:	208000cc 	andi	r2,r4,3
   40890:	10002026 	beq	r2,zero,40914 <strlen+0x88>
   40894:	20800007 	ldb	r2,0(r4)
   40898:	10002026 	beq	r2,zero,4091c <strlen+0x90>
   4089c:	2005883a 	mov	r2,r4
   408a0:	00000206 	br	408ac <strlen+0x20>
   408a4:	10c00007 	ldb	r3,0(r2)
   408a8:	18001826 	beq	r3,zero,4090c <strlen+0x80>
   408ac:	10800044 	addi	r2,r2,1
   408b0:	10c000cc 	andi	r3,r2,3
   408b4:	183ffb1e 	bne	r3,zero,408a4 <__alt_data_end+0xfffd97a4>
   408b8:	10c00017 	ldw	r3,0(r2)
   408bc:	01ffbff4 	movhi	r7,65279
   408c0:	39ffbfc4 	addi	r7,r7,-257
   408c4:	00ca303a 	nor	r5,zero,r3
   408c8:	01a02074 	movhi	r6,32897
   408cc:	19c7883a 	add	r3,r3,r7
   408d0:	31a02004 	addi	r6,r6,-32640
   408d4:	1946703a 	and	r3,r3,r5
   408d8:	1986703a 	and	r3,r3,r6
   408dc:	1800091e 	bne	r3,zero,40904 <strlen+0x78>
   408e0:	10800104 	addi	r2,r2,4
   408e4:	10c00017 	ldw	r3,0(r2)
   408e8:	19cb883a 	add	r5,r3,r7
   408ec:	00c6303a 	nor	r3,zero,r3
   408f0:	28c6703a 	and	r3,r5,r3
   408f4:	1986703a 	and	r3,r3,r6
   408f8:	183ff926 	beq	r3,zero,408e0 <__alt_data_end+0xfffd97e0>
   408fc:	00000106 	br	40904 <strlen+0x78>
   40900:	10800044 	addi	r2,r2,1
   40904:	10c00007 	ldb	r3,0(r2)
   40908:	183ffd1e 	bne	r3,zero,40900 <__alt_data_end+0xfffd9800>
   4090c:	1105c83a 	sub	r2,r2,r4
   40910:	f800283a 	ret
   40914:	2005883a 	mov	r2,r4
   40918:	003fe706 	br	408b8 <__alt_data_end+0xfffd97b8>
   4091c:	0005883a 	mov	r2,zero
   40920:	f800283a 	ret

00040924 <___vfprintf_internal_r>:
   40924:	deffb804 	addi	sp,sp,-288
   40928:	dfc04715 	stw	ra,284(sp)
   4092c:	ddc04515 	stw	r23,276(sp)
   40930:	dd404315 	stw	r21,268(sp)
   40934:	d9002c15 	stw	r4,176(sp)
   40938:	282f883a 	mov	r23,r5
   4093c:	302b883a 	mov	r21,r6
   40940:	d9c02d15 	stw	r7,180(sp)
   40944:	df004615 	stw	fp,280(sp)
   40948:	dd804415 	stw	r22,272(sp)
   4094c:	dd004215 	stw	r20,264(sp)
   40950:	dcc04115 	stw	r19,260(sp)
   40954:	dc804015 	stw	r18,256(sp)
   40958:	dc403f15 	stw	r17,252(sp)
   4095c:	dc003e15 	stw	r16,248(sp)
   40960:	004573c0 	call	4573c <_localeconv_r>
   40964:	10800017 	ldw	r2,0(r2)
   40968:	1009883a 	mov	r4,r2
   4096c:	d8803415 	stw	r2,208(sp)
   40970:	004088c0 	call	4088c <strlen>
   40974:	d8803715 	stw	r2,220(sp)
   40978:	d8802c17 	ldw	r2,176(sp)
   4097c:	10000226 	beq	r2,zero,40988 <___vfprintf_internal_r+0x64>
   40980:	10800e17 	ldw	r2,56(r2)
   40984:	1000f926 	beq	r2,zero,40d6c <___vfprintf_internal_r+0x448>
   40988:	b880030b 	ldhu	r2,12(r23)
   4098c:	10c8000c 	andi	r3,r2,8192
   40990:	1800061e 	bne	r3,zero,409ac <___vfprintf_internal_r+0x88>
   40994:	b9001917 	ldw	r4,100(r23)
   40998:	00f7ffc4 	movi	r3,-8193
   4099c:	10880014 	ori	r2,r2,8192
   409a0:	20c6703a 	and	r3,r4,r3
   409a4:	b880030d 	sth	r2,12(r23)
   409a8:	b8c01915 	stw	r3,100(r23)
   409ac:	10c0020c 	andi	r3,r2,8
   409b0:	1800c126 	beq	r3,zero,40cb8 <___vfprintf_internal_r+0x394>
   409b4:	b8c00417 	ldw	r3,16(r23)
   409b8:	1800bf26 	beq	r3,zero,40cb8 <___vfprintf_internal_r+0x394>
   409bc:	1080068c 	andi	r2,r2,26
   409c0:	00c00284 	movi	r3,10
   409c4:	10c0c426 	beq	r2,r3,40cd8 <___vfprintf_internal_r+0x3b4>
   409c8:	d8c00404 	addi	r3,sp,16
   409cc:	05000174 	movhi	r20,5
   409d0:	d9001e04 	addi	r4,sp,120
   409d4:	a53e7a84 	addi	r20,r20,-1558
   409d8:	d8c01e15 	stw	r3,120(sp)
   409dc:	d8002015 	stw	zero,128(sp)
   409e0:	d8001f15 	stw	zero,124(sp)
   409e4:	d8003315 	stw	zero,204(sp)
   409e8:	d8003615 	stw	zero,216(sp)
   409ec:	d8003815 	stw	zero,224(sp)
   409f0:	1811883a 	mov	r8,r3
   409f4:	d8003915 	stw	zero,228(sp)
   409f8:	d8003a15 	stw	zero,232(sp)
   409fc:	d8002f15 	stw	zero,188(sp)
   40a00:	d9002815 	stw	r4,160(sp)
   40a04:	a8800007 	ldb	r2,0(r21)
   40a08:	10027b26 	beq	r2,zero,413f8 <___vfprintf_internal_r+0xad4>
   40a0c:	00c00944 	movi	r3,37
   40a10:	a821883a 	mov	r16,r21
   40a14:	10c0021e 	bne	r2,r3,40a20 <___vfprintf_internal_r+0xfc>
   40a18:	00001406 	br	40a6c <___vfprintf_internal_r+0x148>
   40a1c:	10c00326 	beq	r2,r3,40a2c <___vfprintf_internal_r+0x108>
   40a20:	84000044 	addi	r16,r16,1
   40a24:	80800007 	ldb	r2,0(r16)
   40a28:	103ffc1e 	bne	r2,zero,40a1c <__alt_data_end+0xfffd991c>
   40a2c:	8563c83a 	sub	r17,r16,r21
   40a30:	88000e26 	beq	r17,zero,40a6c <___vfprintf_internal_r+0x148>
   40a34:	d8c02017 	ldw	r3,128(sp)
   40a38:	d8801f17 	ldw	r2,124(sp)
   40a3c:	45400015 	stw	r21,0(r8)
   40a40:	1c47883a 	add	r3,r3,r17
   40a44:	10800044 	addi	r2,r2,1
   40a48:	d8c02015 	stw	r3,128(sp)
   40a4c:	44400115 	stw	r17,4(r8)
   40a50:	d8801f15 	stw	r2,124(sp)
   40a54:	00c001c4 	movi	r3,7
   40a58:	1880a716 	blt	r3,r2,40cf8 <___vfprintf_internal_r+0x3d4>
   40a5c:	42000204 	addi	r8,r8,8
   40a60:	d9402f17 	ldw	r5,188(sp)
   40a64:	2c4b883a 	add	r5,r5,r17
   40a68:	d9402f15 	stw	r5,188(sp)
   40a6c:	80800007 	ldb	r2,0(r16)
   40a70:	1000a826 	beq	r2,zero,40d14 <___vfprintf_internal_r+0x3f0>
   40a74:	84400047 	ldb	r17,1(r16)
   40a78:	00bfffc4 	movi	r2,-1
   40a7c:	85400044 	addi	r21,r16,1
   40a80:	d8002785 	stb	zero,158(sp)
   40a84:	0007883a 	mov	r3,zero
   40a88:	000f883a 	mov	r7,zero
   40a8c:	d8802915 	stw	r2,164(sp)
   40a90:	d8003115 	stw	zero,196(sp)
   40a94:	0025883a 	mov	r18,zero
   40a98:	01401604 	movi	r5,88
   40a9c:	01800244 	movi	r6,9
   40aa0:	02800a84 	movi	r10,42
   40aa4:	02401b04 	movi	r9,108
   40aa8:	ad400044 	addi	r21,r21,1
   40aac:	88bff804 	addi	r2,r17,-32
   40ab0:	28830436 	bltu	r5,r2,416c4 <___vfprintf_internal_r+0xda0>
   40ab4:	100490ba 	slli	r2,r2,2
   40ab8:	01000134 	movhi	r4,4
   40abc:	2102b304 	addi	r4,r4,2764
   40ac0:	1105883a 	add	r2,r2,r4
   40ac4:	10800017 	ldw	r2,0(r2)
   40ac8:	1000683a 	jmp	r2
   40acc:	000415e4 	muli	zero,zero,4183
   40ad0:	000416c4 	movi	zero,4187
   40ad4:	000416c4 	movi	zero,4187
   40ad8:	00041604 	movi	zero,4184
   40adc:	000416c4 	movi	zero,4187
   40ae0:	000416c4 	movi	zero,4187
   40ae4:	000416c4 	movi	zero,4187
   40ae8:	000416c4 	movi	zero,4187
   40aec:	000416c4 	movi	zero,4187
   40af0:	000416c4 	movi	zero,4187
   40af4:	00040d78 	rdprs	zero,zero,4149
   40af8:	00041520 	cmpeqi	zero,zero,4180
   40afc:	000416c4 	movi	zero,4187
   40b00:	00040c40 	call	40c4 <__alt_mem_onchip_memory2-0x3bf3c>
   40b04:	00040da0 	cmpeqi	zero,zero,4150
   40b08:	000416c4 	movi	zero,4187
   40b0c:	00040de0 	cmpeqi	zero,zero,4151
   40b10:	00040dec 	andhi	zero,zero,4151
   40b14:	00040dec 	andhi	zero,zero,4151
   40b18:	00040dec 	andhi	zero,zero,4151
   40b1c:	00040dec 	andhi	zero,zero,4151
   40b20:	00040dec 	andhi	zero,zero,4151
   40b24:	00040dec 	andhi	zero,zero,4151
   40b28:	00040dec 	andhi	zero,zero,4151
   40b2c:	00040dec 	andhi	zero,zero,4151
   40b30:	00040dec 	andhi	zero,zero,4151
   40b34:	000416c4 	movi	zero,4187
   40b38:	000416c4 	movi	zero,4187
   40b3c:	000416c4 	movi	zero,4187
   40b40:	000416c4 	movi	zero,4187
   40b44:	000416c4 	movi	zero,4187
   40b48:	000416c4 	movi	zero,4187
   40b4c:	000416c4 	movi	zero,4187
   40b50:	000416c4 	movi	zero,4187
   40b54:	000416c4 	movi	zero,4187
   40b58:	000416c4 	movi	zero,4187
   40b5c:	00040e20 	cmpeqi	zero,zero,4152
   40b60:	00040edc 	xori	zero,zero,4155
   40b64:	000416c4 	movi	zero,4187
   40b68:	00040edc 	xori	zero,zero,4155
   40b6c:	000416c4 	movi	zero,4187
   40b70:	000416c4 	movi	zero,4187
   40b74:	000416c4 	movi	zero,4187
   40b78:	000416c4 	movi	zero,4187
   40b7c:	00040f7c 	xorhi	zero,zero,4157
   40b80:	000416c4 	movi	zero,4187
   40b84:	000416c4 	movi	zero,4187
   40b88:	00040f88 	cmpgei	zero,zero,4158
   40b8c:	000416c4 	movi	zero,4187
   40b90:	000416c4 	movi	zero,4187
   40b94:	000416c4 	movi	zero,4187
   40b98:	000416c4 	movi	zero,4187
   40b9c:	000416c4 	movi	zero,4187
   40ba0:	00041400 	call	4140 <__alt_mem_onchip_memory2-0x3bec0>
   40ba4:	000416c4 	movi	zero,4187
   40ba8:	000416c4 	movi	zero,4187
   40bac:	00041460 	cmpeqi	zero,zero,4177
   40bb0:	000416c4 	movi	zero,4187
   40bb4:	000416c4 	movi	zero,4187
   40bb8:	000416c4 	movi	zero,4187
   40bbc:	000416c4 	movi	zero,4187
   40bc0:	000416c4 	movi	zero,4187
   40bc4:	000416c4 	movi	zero,4187
   40bc8:	000416c4 	movi	zero,4187
   40bcc:	000416c4 	movi	zero,4187
   40bd0:	000416c4 	movi	zero,4187
   40bd4:	000416c4 	movi	zero,4187
   40bd8:	00041670 	cmpltui	zero,zero,4185
   40bdc:	00041610 	cmplti	zero,zero,4184
   40be0:	00040edc 	xori	zero,zero,4155
   40be4:	00040edc 	xori	zero,zero,4155
   40be8:	00040edc 	xori	zero,zero,4155
   40bec:	00041620 	cmpeqi	zero,zero,4184
   40bf0:	00041610 	cmplti	zero,zero,4184
   40bf4:	000416c4 	movi	zero,4187
   40bf8:	000416c4 	movi	zero,4187
   40bfc:	0004162c 	andhi	zero,zero,4184
   40c00:	000416c4 	movi	zero,4187
   40c04:	0004163c 	xorhi	zero,zero,4184
   40c08:	00041510 	cmplti	zero,zero,4180
   40c0c:	00040c4c 	andi	zero,zero,4145
   40c10:	00041530 	cmpltui	zero,zero,4180
   40c14:	000416c4 	movi	zero,4187
   40c18:	0004153c 	xorhi	zero,zero,4180
   40c1c:	000416c4 	movi	zero,4187
   40c20:	00041598 	cmpnei	zero,zero,4182
   40c24:	000416c4 	movi	zero,4187
   40c28:	000416c4 	movi	zero,4187
   40c2c:	000415a8 	cmpgeui	zero,zero,4182
   40c30:	d9003117 	ldw	r4,196(sp)
   40c34:	d8802d15 	stw	r2,180(sp)
   40c38:	0109c83a 	sub	r4,zero,r4
   40c3c:	d9003115 	stw	r4,196(sp)
   40c40:	94800114 	ori	r18,r18,4
   40c44:	ac400007 	ldb	r17,0(r21)
   40c48:	003f9706 	br	40aa8 <__alt_data_end+0xfffd99a8>
   40c4c:	00800c04 	movi	r2,48
   40c50:	d9002d17 	ldw	r4,180(sp)
   40c54:	d9402917 	ldw	r5,164(sp)
   40c58:	d8802705 	stb	r2,156(sp)
   40c5c:	00801e04 	movi	r2,120
   40c60:	d8802745 	stb	r2,157(sp)
   40c64:	d8002785 	stb	zero,158(sp)
   40c68:	20c00104 	addi	r3,r4,4
   40c6c:	24c00017 	ldw	r19,0(r4)
   40c70:	002d883a 	mov	r22,zero
   40c74:	90800094 	ori	r2,r18,2
   40c78:	28029a16 	blt	r5,zero,416e4 <___vfprintf_internal_r+0xdc0>
   40c7c:	00bfdfc4 	movi	r2,-129
   40c80:	90a4703a 	and	r18,r18,r2
   40c84:	d8c02d15 	stw	r3,180(sp)
   40c88:	94800094 	ori	r18,r18,2
   40c8c:	9802871e 	bne	r19,zero,416ac <___vfprintf_internal_r+0xd88>
   40c90:	00800174 	movhi	r2,5
   40c94:	10be7304 	addi	r2,r2,-1588
   40c98:	d8803915 	stw	r2,228(sp)
   40c9c:	04401e04 	movi	r17,120
   40ca0:	d8802917 	ldw	r2,164(sp)
   40ca4:	0039883a 	mov	fp,zero
   40ca8:	1001e926 	beq	r2,zero,41450 <___vfprintf_internal_r+0xb2c>
   40cac:	0027883a 	mov	r19,zero
   40cb0:	002d883a 	mov	r22,zero
   40cb4:	00020506 	br	414cc <___vfprintf_internal_r+0xba8>
   40cb8:	d9002c17 	ldw	r4,176(sp)
   40cbc:	b80b883a 	mov	r5,r23
   40cc0:	0042bf40 	call	42bf4 <__swsetup_r>
   40cc4:	1005ac1e 	bne	r2,zero,42378 <___vfprintf_internal_r+0x1a54>
   40cc8:	b880030b 	ldhu	r2,12(r23)
   40ccc:	00c00284 	movi	r3,10
   40cd0:	1080068c 	andi	r2,r2,26
   40cd4:	10ff3c1e 	bne	r2,r3,409c8 <__alt_data_end+0xfffd98c8>
   40cd8:	b880038f 	ldh	r2,14(r23)
   40cdc:	103f3a16 	blt	r2,zero,409c8 <__alt_data_end+0xfffd98c8>
   40ce0:	d9c02d17 	ldw	r7,180(sp)
   40ce4:	d9002c17 	ldw	r4,176(sp)
   40ce8:	a80d883a 	mov	r6,r21
   40cec:	b80b883a 	mov	r5,r23
   40cf0:	0042b380 	call	42b38 <__sbprintf>
   40cf4:	00001106 	br	40d3c <___vfprintf_internal_r+0x418>
   40cf8:	d9002c17 	ldw	r4,176(sp)
   40cfc:	d9801e04 	addi	r6,sp,120
   40d00:	b80b883a 	mov	r5,r23
   40d04:	00480880 	call	48088 <__sprint_r>
   40d08:	1000081e 	bne	r2,zero,40d2c <___vfprintf_internal_r+0x408>
   40d0c:	da000404 	addi	r8,sp,16
   40d10:	003f5306 	br	40a60 <__alt_data_end+0xfffd9960>
   40d14:	d8802017 	ldw	r2,128(sp)
   40d18:	10000426 	beq	r2,zero,40d2c <___vfprintf_internal_r+0x408>
   40d1c:	d9002c17 	ldw	r4,176(sp)
   40d20:	d9801e04 	addi	r6,sp,120
   40d24:	b80b883a 	mov	r5,r23
   40d28:	00480880 	call	48088 <__sprint_r>
   40d2c:	b880030b 	ldhu	r2,12(r23)
   40d30:	1080100c 	andi	r2,r2,64
   40d34:	1005901e 	bne	r2,zero,42378 <___vfprintf_internal_r+0x1a54>
   40d38:	d8802f17 	ldw	r2,188(sp)
   40d3c:	dfc04717 	ldw	ra,284(sp)
   40d40:	df004617 	ldw	fp,280(sp)
   40d44:	ddc04517 	ldw	r23,276(sp)
   40d48:	dd804417 	ldw	r22,272(sp)
   40d4c:	dd404317 	ldw	r21,268(sp)
   40d50:	dd004217 	ldw	r20,264(sp)
   40d54:	dcc04117 	ldw	r19,260(sp)
   40d58:	dc804017 	ldw	r18,256(sp)
   40d5c:	dc403f17 	ldw	r17,252(sp)
   40d60:	dc003e17 	ldw	r16,248(sp)
   40d64:	dec04804 	addi	sp,sp,288
   40d68:	f800283a 	ret
   40d6c:	d9002c17 	ldw	r4,176(sp)
   40d70:	0044bc80 	call	44bc8 <__sinit>
   40d74:	003f0406 	br	40988 <__alt_data_end+0xfffd9888>
   40d78:	d8802d17 	ldw	r2,180(sp)
   40d7c:	d9002d17 	ldw	r4,180(sp)
   40d80:	10800017 	ldw	r2,0(r2)
   40d84:	d8803115 	stw	r2,196(sp)
   40d88:	20800104 	addi	r2,r4,4
   40d8c:	d9003117 	ldw	r4,196(sp)
   40d90:	203fa716 	blt	r4,zero,40c30 <__alt_data_end+0xfffd9b30>
   40d94:	d8802d15 	stw	r2,180(sp)
   40d98:	ac400007 	ldb	r17,0(r21)
   40d9c:	003f4206 	br	40aa8 <__alt_data_end+0xfffd99a8>
   40da0:	ac400007 	ldb	r17,0(r21)
   40da4:	aac00044 	addi	r11,r21,1
   40da8:	8a872826 	beq	r17,r10,42a4c <___vfprintf_internal_r+0x2128>
   40dac:	88bff404 	addi	r2,r17,-48
   40db0:	0009883a 	mov	r4,zero
   40db4:	30867d36 	bltu	r6,r2,427ac <___vfprintf_internal_r+0x1e88>
   40db8:	5c400007 	ldb	r17,0(r11)
   40dbc:	210002a4 	muli	r4,r4,10
   40dc0:	5d400044 	addi	r21,r11,1
   40dc4:	a817883a 	mov	r11,r21
   40dc8:	2089883a 	add	r4,r4,r2
   40dcc:	88bff404 	addi	r2,r17,-48
   40dd0:	30bff92e 	bgeu	r6,r2,40db8 <__alt_data_end+0xfffd9cb8>
   40dd4:	2005c916 	blt	r4,zero,424fc <___vfprintf_internal_r+0x1bd8>
   40dd8:	d9002915 	stw	r4,164(sp)
   40ddc:	003f3306 	br	40aac <__alt_data_end+0xfffd99ac>
   40de0:	94802014 	ori	r18,r18,128
   40de4:	ac400007 	ldb	r17,0(r21)
   40de8:	003f2f06 	br	40aa8 <__alt_data_end+0xfffd99a8>
   40dec:	a809883a 	mov	r4,r21
   40df0:	d8003115 	stw	zero,196(sp)
   40df4:	88bff404 	addi	r2,r17,-48
   40df8:	0017883a 	mov	r11,zero
   40dfc:	24400007 	ldb	r17,0(r4)
   40e00:	5ac002a4 	muli	r11,r11,10
   40e04:	ad400044 	addi	r21,r21,1
   40e08:	a809883a 	mov	r4,r21
   40e0c:	12d7883a 	add	r11,r2,r11
   40e10:	88bff404 	addi	r2,r17,-48
   40e14:	30bff92e 	bgeu	r6,r2,40dfc <__alt_data_end+0xfffd9cfc>
   40e18:	dac03115 	stw	r11,196(sp)
   40e1c:	003f2306 	br	40aac <__alt_data_end+0xfffd99ac>
   40e20:	18c03fcc 	andi	r3,r3,255
   40e24:	18072b1e 	bne	r3,zero,42ad4 <___vfprintf_internal_r+0x21b0>
   40e28:	94800414 	ori	r18,r18,16
   40e2c:	9080080c 	andi	r2,r18,32
   40e30:	10037b26 	beq	r2,zero,41c20 <___vfprintf_internal_r+0x12fc>
   40e34:	d9402d17 	ldw	r5,180(sp)
   40e38:	28800117 	ldw	r2,4(r5)
   40e3c:	2cc00017 	ldw	r19,0(r5)
   40e40:	29400204 	addi	r5,r5,8
   40e44:	d9402d15 	stw	r5,180(sp)
   40e48:	102d883a 	mov	r22,r2
   40e4c:	10044b16 	blt	r2,zero,41f7c <___vfprintf_internal_r+0x1658>
   40e50:	d9402917 	ldw	r5,164(sp)
   40e54:	df002783 	ldbu	fp,158(sp)
   40e58:	2803bc16 	blt	r5,zero,41d4c <___vfprintf_internal_r+0x1428>
   40e5c:	00ffdfc4 	movi	r3,-129
   40e60:	9d84b03a 	or	r2,r19,r22
   40e64:	90e4703a 	and	r18,r18,r3
   40e68:	10017726 	beq	r2,zero,41448 <___vfprintf_internal_r+0xb24>
   40e6c:	b0038326 	beq	r22,zero,41c7c <___vfprintf_internal_r+0x1358>
   40e70:	dc402a15 	stw	r17,168(sp)
   40e74:	dc001e04 	addi	r16,sp,120
   40e78:	b023883a 	mov	r17,r22
   40e7c:	402d883a 	mov	r22,r8
   40e80:	9809883a 	mov	r4,r19
   40e84:	880b883a 	mov	r5,r17
   40e88:	01800284 	movi	r6,10
   40e8c:	000f883a 	mov	r7,zero
   40e90:	004a4800 	call	4a480 <__umoddi3>
   40e94:	10800c04 	addi	r2,r2,48
   40e98:	843fffc4 	addi	r16,r16,-1
   40e9c:	9809883a 	mov	r4,r19
   40ea0:	880b883a 	mov	r5,r17
   40ea4:	80800005 	stb	r2,0(r16)
   40ea8:	01800284 	movi	r6,10
   40eac:	000f883a 	mov	r7,zero
   40eb0:	0049f080 	call	49f08 <__udivdi3>
   40eb4:	1027883a 	mov	r19,r2
   40eb8:	10c4b03a 	or	r2,r2,r3
   40ebc:	1823883a 	mov	r17,r3
   40ec0:	103fef1e 	bne	r2,zero,40e80 <__alt_data_end+0xfffd9d80>
   40ec4:	d8c02817 	ldw	r3,160(sp)
   40ec8:	dc402a17 	ldw	r17,168(sp)
   40ecc:	b011883a 	mov	r8,r22
   40ed0:	1c07c83a 	sub	r3,r3,r16
   40ed4:	d8c02e15 	stw	r3,184(sp)
   40ed8:	00005906 	br	41040 <___vfprintf_internal_r+0x71c>
   40edc:	18c03fcc 	andi	r3,r3,255
   40ee0:	1806fa1e 	bne	r3,zero,42acc <___vfprintf_internal_r+0x21a8>
   40ee4:	9080020c 	andi	r2,r18,8
   40ee8:	10048a26 	beq	r2,zero,42114 <___vfprintf_internal_r+0x17f0>
   40eec:	d8c02d17 	ldw	r3,180(sp)
   40ef0:	d9002d17 	ldw	r4,180(sp)
   40ef4:	d9402d17 	ldw	r5,180(sp)
   40ef8:	18c00017 	ldw	r3,0(r3)
   40efc:	21000117 	ldw	r4,4(r4)
   40f00:	29400204 	addi	r5,r5,8
   40f04:	d8c03615 	stw	r3,216(sp)
   40f08:	d9003815 	stw	r4,224(sp)
   40f0c:	d9402d15 	stw	r5,180(sp)
   40f10:	d9003617 	ldw	r4,216(sp)
   40f14:	d9403817 	ldw	r5,224(sp)
   40f18:	da003d15 	stw	r8,244(sp)
   40f1c:	04000044 	movi	r16,1
   40f20:	0047cac0 	call	47cac <__fpclassifyd>
   40f24:	da003d17 	ldw	r8,244(sp)
   40f28:	14041f1e 	bne	r2,r16,41fa8 <___vfprintf_internal_r+0x1684>
   40f2c:	d9003617 	ldw	r4,216(sp)
   40f30:	d9403817 	ldw	r5,224(sp)
   40f34:	000d883a 	mov	r6,zero
   40f38:	000f883a 	mov	r7,zero
   40f3c:	004bcb00 	call	4bcb0 <__ledf2>
   40f40:	da003d17 	ldw	r8,244(sp)
   40f44:	1005be16 	blt	r2,zero,42640 <___vfprintf_internal_r+0x1d1c>
   40f48:	df002783 	ldbu	fp,158(sp)
   40f4c:	008011c4 	movi	r2,71
   40f50:	1445330e 	bge	r2,r17,42420 <___vfprintf_internal_r+0x1afc>
   40f54:	04000174 	movhi	r16,5
   40f58:	843e6b04 	addi	r16,r16,-1620
   40f5c:	00c000c4 	movi	r3,3
   40f60:	00bfdfc4 	movi	r2,-129
   40f64:	d8c02a15 	stw	r3,168(sp)
   40f68:	90a4703a 	and	r18,r18,r2
   40f6c:	d8c02e15 	stw	r3,184(sp)
   40f70:	d8002915 	stw	zero,164(sp)
   40f74:	d8003215 	stw	zero,200(sp)
   40f78:	00003706 	br	41058 <___vfprintf_internal_r+0x734>
   40f7c:	94800214 	ori	r18,r18,8
   40f80:	ac400007 	ldb	r17,0(r21)
   40f84:	003ec806 	br	40aa8 <__alt_data_end+0xfffd99a8>
   40f88:	18c03fcc 	andi	r3,r3,255
   40f8c:	1806db1e 	bne	r3,zero,42afc <___vfprintf_internal_r+0x21d8>
   40f90:	94800414 	ori	r18,r18,16
   40f94:	9080080c 	andi	r2,r18,32
   40f98:	1002d826 	beq	r2,zero,41afc <___vfprintf_internal_r+0x11d8>
   40f9c:	d9402d17 	ldw	r5,180(sp)
   40fa0:	d8c02917 	ldw	r3,164(sp)
   40fa4:	d8002785 	stb	zero,158(sp)
   40fa8:	28800204 	addi	r2,r5,8
   40fac:	2cc00017 	ldw	r19,0(r5)
   40fb0:	2d800117 	ldw	r22,4(r5)
   40fb4:	18048f16 	blt	r3,zero,421f4 <___vfprintf_internal_r+0x18d0>
   40fb8:	013fdfc4 	movi	r4,-129
   40fbc:	9d86b03a 	or	r3,r19,r22
   40fc0:	d8802d15 	stw	r2,180(sp)
   40fc4:	9124703a 	and	r18,r18,r4
   40fc8:	1802d91e 	bne	r3,zero,41b30 <___vfprintf_internal_r+0x120c>
   40fcc:	d8c02917 	ldw	r3,164(sp)
   40fd0:	0039883a 	mov	fp,zero
   40fd4:	1805c326 	beq	r3,zero,426e4 <___vfprintf_internal_r+0x1dc0>
   40fd8:	0027883a 	mov	r19,zero
   40fdc:	002d883a 	mov	r22,zero
   40fe0:	dc001e04 	addi	r16,sp,120
   40fe4:	9806d0fa 	srli	r3,r19,3
   40fe8:	b008977a 	slli	r4,r22,29
   40fec:	b02cd0fa 	srli	r22,r22,3
   40ff0:	9cc001cc 	andi	r19,r19,7
   40ff4:	98800c04 	addi	r2,r19,48
   40ff8:	843fffc4 	addi	r16,r16,-1
   40ffc:	20e6b03a 	or	r19,r4,r3
   41000:	80800005 	stb	r2,0(r16)
   41004:	9d86b03a 	or	r3,r19,r22
   41008:	183ff61e 	bne	r3,zero,40fe4 <__alt_data_end+0xfffd9ee4>
   4100c:	90c0004c 	andi	r3,r18,1
   41010:	18013b26 	beq	r3,zero,41500 <___vfprintf_internal_r+0xbdc>
   41014:	10803fcc 	andi	r2,r2,255
   41018:	1080201c 	xori	r2,r2,128
   4101c:	10bfe004 	addi	r2,r2,-128
   41020:	00c00c04 	movi	r3,48
   41024:	10c13626 	beq	r2,r3,41500 <___vfprintf_internal_r+0xbdc>
   41028:	80ffffc5 	stb	r3,-1(r16)
   4102c:	d8c02817 	ldw	r3,160(sp)
   41030:	80bfffc4 	addi	r2,r16,-1
   41034:	1021883a 	mov	r16,r2
   41038:	1887c83a 	sub	r3,r3,r2
   4103c:	d8c02e15 	stw	r3,184(sp)
   41040:	d8802e17 	ldw	r2,184(sp)
   41044:	d9002917 	ldw	r4,164(sp)
   41048:	1100010e 	bge	r2,r4,41050 <___vfprintf_internal_r+0x72c>
   4104c:	2005883a 	mov	r2,r4
   41050:	d8802a15 	stw	r2,168(sp)
   41054:	d8003215 	stw	zero,200(sp)
   41058:	e7003fcc 	andi	fp,fp,255
   4105c:	e700201c 	xori	fp,fp,128
   41060:	e73fe004 	addi	fp,fp,-128
   41064:	e0000326 	beq	fp,zero,41074 <___vfprintf_internal_r+0x750>
   41068:	d8c02a17 	ldw	r3,168(sp)
   4106c:	18c00044 	addi	r3,r3,1
   41070:	d8c02a15 	stw	r3,168(sp)
   41074:	90c0008c 	andi	r3,r18,2
   41078:	d8c02b15 	stw	r3,172(sp)
   4107c:	18000326 	beq	r3,zero,4108c <___vfprintf_internal_r+0x768>
   41080:	d8c02a17 	ldw	r3,168(sp)
   41084:	18c00084 	addi	r3,r3,2
   41088:	d8c02a15 	stw	r3,168(sp)
   4108c:	90c0210c 	andi	r3,r18,132
   41090:	d8c03015 	stw	r3,192(sp)
   41094:	1801a31e 	bne	r3,zero,41724 <___vfprintf_internal_r+0xe00>
   41098:	d9003117 	ldw	r4,196(sp)
   4109c:	d8c02a17 	ldw	r3,168(sp)
   410a0:	20e7c83a 	sub	r19,r4,r3
   410a4:	04c19f0e 	bge	zero,r19,41724 <___vfprintf_internal_r+0xe00>
   410a8:	02400404 	movi	r9,16
   410ac:	d8c02017 	ldw	r3,128(sp)
   410b0:	d8801f17 	ldw	r2,124(sp)
   410b4:	4cc50d0e 	bge	r9,r19,424ec <___vfprintf_internal_r+0x1bc8>
   410b8:	01400174 	movhi	r5,5
   410bc:	297e7e84 	addi	r5,r5,-1542
   410c0:	dc403b15 	stw	r17,236(sp)
   410c4:	d9403515 	stw	r5,212(sp)
   410c8:	9823883a 	mov	r17,r19
   410cc:	482d883a 	mov	r22,r9
   410d0:	9027883a 	mov	r19,r18
   410d4:	070001c4 	movi	fp,7
   410d8:	8025883a 	mov	r18,r16
   410dc:	dc002c17 	ldw	r16,176(sp)
   410e0:	00000306 	br	410f0 <___vfprintf_internal_r+0x7cc>
   410e4:	8c7ffc04 	addi	r17,r17,-16
   410e8:	42000204 	addi	r8,r8,8
   410ec:	b440130e 	bge	r22,r17,4113c <___vfprintf_internal_r+0x818>
   410f0:	01000174 	movhi	r4,5
   410f4:	18c00404 	addi	r3,r3,16
   410f8:	10800044 	addi	r2,r2,1
   410fc:	213e7e84 	addi	r4,r4,-1542
   41100:	41000015 	stw	r4,0(r8)
   41104:	45800115 	stw	r22,4(r8)
   41108:	d8c02015 	stw	r3,128(sp)
   4110c:	d8801f15 	stw	r2,124(sp)
   41110:	e0bff40e 	bge	fp,r2,410e4 <__alt_data_end+0xfffd9fe4>
   41114:	d9801e04 	addi	r6,sp,120
   41118:	b80b883a 	mov	r5,r23
   4111c:	8009883a 	mov	r4,r16
   41120:	00480880 	call	48088 <__sprint_r>
   41124:	103f011e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41128:	8c7ffc04 	addi	r17,r17,-16
   4112c:	d8c02017 	ldw	r3,128(sp)
   41130:	d8801f17 	ldw	r2,124(sp)
   41134:	da000404 	addi	r8,sp,16
   41138:	b47fed16 	blt	r22,r17,410f0 <__alt_data_end+0xfffd9ff0>
   4113c:	9021883a 	mov	r16,r18
   41140:	9825883a 	mov	r18,r19
   41144:	8827883a 	mov	r19,r17
   41148:	dc403b17 	ldw	r17,236(sp)
   4114c:	d9403517 	ldw	r5,212(sp)
   41150:	98c7883a 	add	r3,r19,r3
   41154:	10800044 	addi	r2,r2,1
   41158:	41400015 	stw	r5,0(r8)
   4115c:	44c00115 	stw	r19,4(r8)
   41160:	d8c02015 	stw	r3,128(sp)
   41164:	d8801f15 	stw	r2,124(sp)
   41168:	010001c4 	movi	r4,7
   4116c:	2082a316 	blt	r4,r2,41bfc <___vfprintf_internal_r+0x12d8>
   41170:	df002787 	ldb	fp,158(sp)
   41174:	42000204 	addi	r8,r8,8
   41178:	e0000c26 	beq	fp,zero,411ac <___vfprintf_internal_r+0x888>
   4117c:	d8801f17 	ldw	r2,124(sp)
   41180:	d9002784 	addi	r4,sp,158
   41184:	18c00044 	addi	r3,r3,1
   41188:	10800044 	addi	r2,r2,1
   4118c:	41000015 	stw	r4,0(r8)
   41190:	01000044 	movi	r4,1
   41194:	41000115 	stw	r4,4(r8)
   41198:	d8c02015 	stw	r3,128(sp)
   4119c:	d8801f15 	stw	r2,124(sp)
   411a0:	010001c4 	movi	r4,7
   411a4:	20823c16 	blt	r4,r2,41a98 <___vfprintf_internal_r+0x1174>
   411a8:	42000204 	addi	r8,r8,8
   411ac:	d8802b17 	ldw	r2,172(sp)
   411b0:	10000c26 	beq	r2,zero,411e4 <___vfprintf_internal_r+0x8c0>
   411b4:	d8801f17 	ldw	r2,124(sp)
   411b8:	d9002704 	addi	r4,sp,156
   411bc:	18c00084 	addi	r3,r3,2
   411c0:	10800044 	addi	r2,r2,1
   411c4:	41000015 	stw	r4,0(r8)
   411c8:	01000084 	movi	r4,2
   411cc:	41000115 	stw	r4,4(r8)
   411d0:	d8c02015 	stw	r3,128(sp)
   411d4:	d8801f15 	stw	r2,124(sp)
   411d8:	010001c4 	movi	r4,7
   411dc:	20823616 	blt	r4,r2,41ab8 <___vfprintf_internal_r+0x1194>
   411e0:	42000204 	addi	r8,r8,8
   411e4:	d9003017 	ldw	r4,192(sp)
   411e8:	00802004 	movi	r2,128
   411ec:	20819926 	beq	r4,r2,41854 <___vfprintf_internal_r+0xf30>
   411f0:	d9402917 	ldw	r5,164(sp)
   411f4:	d8802e17 	ldw	r2,184(sp)
   411f8:	28adc83a 	sub	r22,r5,r2
   411fc:	0580310e 	bge	zero,r22,412c4 <___vfprintf_internal_r+0x9a0>
   41200:	07000404 	movi	fp,16
   41204:	d8801f17 	ldw	r2,124(sp)
   41208:	e584140e 	bge	fp,r22,4225c <___vfprintf_internal_r+0x1938>
   4120c:	01400174 	movhi	r5,5
   41210:	297e7a84 	addi	r5,r5,-1558
   41214:	dc402915 	stw	r17,164(sp)
   41218:	d9402b15 	stw	r5,172(sp)
   4121c:	b023883a 	mov	r17,r22
   41220:	04c001c4 	movi	r19,7
   41224:	a82d883a 	mov	r22,r21
   41228:	902b883a 	mov	r21,r18
   4122c:	8025883a 	mov	r18,r16
   41230:	dc002c17 	ldw	r16,176(sp)
   41234:	00000306 	br	41244 <___vfprintf_internal_r+0x920>
   41238:	8c7ffc04 	addi	r17,r17,-16
   4123c:	42000204 	addi	r8,r8,8
   41240:	e440110e 	bge	fp,r17,41288 <___vfprintf_internal_r+0x964>
   41244:	18c00404 	addi	r3,r3,16
   41248:	10800044 	addi	r2,r2,1
   4124c:	45000015 	stw	r20,0(r8)
   41250:	47000115 	stw	fp,4(r8)
   41254:	d8c02015 	stw	r3,128(sp)
   41258:	d8801f15 	stw	r2,124(sp)
   4125c:	98bff60e 	bge	r19,r2,41238 <__alt_data_end+0xfffda138>
   41260:	d9801e04 	addi	r6,sp,120
   41264:	b80b883a 	mov	r5,r23
   41268:	8009883a 	mov	r4,r16
   4126c:	00480880 	call	48088 <__sprint_r>
   41270:	103eae1e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41274:	8c7ffc04 	addi	r17,r17,-16
   41278:	d8c02017 	ldw	r3,128(sp)
   4127c:	d8801f17 	ldw	r2,124(sp)
   41280:	da000404 	addi	r8,sp,16
   41284:	e47fef16 	blt	fp,r17,41244 <__alt_data_end+0xfffda144>
   41288:	9021883a 	mov	r16,r18
   4128c:	a825883a 	mov	r18,r21
   41290:	b02b883a 	mov	r21,r22
   41294:	882d883a 	mov	r22,r17
   41298:	dc402917 	ldw	r17,164(sp)
   4129c:	d9002b17 	ldw	r4,172(sp)
   412a0:	1d87883a 	add	r3,r3,r22
   412a4:	10800044 	addi	r2,r2,1
   412a8:	41000015 	stw	r4,0(r8)
   412ac:	45800115 	stw	r22,4(r8)
   412b0:	d8c02015 	stw	r3,128(sp)
   412b4:	d8801f15 	stw	r2,124(sp)
   412b8:	010001c4 	movi	r4,7
   412bc:	2081ee16 	blt	r4,r2,41a78 <___vfprintf_internal_r+0x1154>
   412c0:	42000204 	addi	r8,r8,8
   412c4:	9080400c 	andi	r2,r18,256
   412c8:	1001181e 	bne	r2,zero,4172c <___vfprintf_internal_r+0xe08>
   412cc:	d9402e17 	ldw	r5,184(sp)
   412d0:	d8801f17 	ldw	r2,124(sp)
   412d4:	44000015 	stw	r16,0(r8)
   412d8:	1947883a 	add	r3,r3,r5
   412dc:	10800044 	addi	r2,r2,1
   412e0:	41400115 	stw	r5,4(r8)
   412e4:	d8c02015 	stw	r3,128(sp)
   412e8:	d8801f15 	stw	r2,124(sp)
   412ec:	010001c4 	movi	r4,7
   412f0:	2081d316 	blt	r4,r2,41a40 <___vfprintf_internal_r+0x111c>
   412f4:	42000204 	addi	r8,r8,8
   412f8:	9480010c 	andi	r18,r18,4
   412fc:	90003226 	beq	r18,zero,413c8 <___vfprintf_internal_r+0xaa4>
   41300:	d9403117 	ldw	r5,196(sp)
   41304:	d8802a17 	ldw	r2,168(sp)
   41308:	28a1c83a 	sub	r16,r5,r2
   4130c:	04002e0e 	bge	zero,r16,413c8 <___vfprintf_internal_r+0xaa4>
   41310:	04400404 	movi	r17,16
   41314:	d8801f17 	ldw	r2,124(sp)
   41318:	8c04a20e 	bge	r17,r16,425a4 <___vfprintf_internal_r+0x1c80>
   4131c:	01400174 	movhi	r5,5
   41320:	297e7e84 	addi	r5,r5,-1542
   41324:	d9403515 	stw	r5,212(sp)
   41328:	048001c4 	movi	r18,7
   4132c:	dcc02c17 	ldw	r19,176(sp)
   41330:	00000306 	br	41340 <___vfprintf_internal_r+0xa1c>
   41334:	843ffc04 	addi	r16,r16,-16
   41338:	42000204 	addi	r8,r8,8
   4133c:	8c00130e 	bge	r17,r16,4138c <___vfprintf_internal_r+0xa68>
   41340:	01000174 	movhi	r4,5
   41344:	18c00404 	addi	r3,r3,16
   41348:	10800044 	addi	r2,r2,1
   4134c:	213e7e84 	addi	r4,r4,-1542
   41350:	41000015 	stw	r4,0(r8)
   41354:	44400115 	stw	r17,4(r8)
   41358:	d8c02015 	stw	r3,128(sp)
   4135c:	d8801f15 	stw	r2,124(sp)
   41360:	90bff40e 	bge	r18,r2,41334 <__alt_data_end+0xfffda234>
   41364:	d9801e04 	addi	r6,sp,120
   41368:	b80b883a 	mov	r5,r23
   4136c:	9809883a 	mov	r4,r19
   41370:	00480880 	call	48088 <__sprint_r>
   41374:	103e6d1e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41378:	843ffc04 	addi	r16,r16,-16
   4137c:	d8c02017 	ldw	r3,128(sp)
   41380:	d8801f17 	ldw	r2,124(sp)
   41384:	da000404 	addi	r8,sp,16
   41388:	8c3fed16 	blt	r17,r16,41340 <__alt_data_end+0xfffda240>
   4138c:	d9403517 	ldw	r5,212(sp)
   41390:	1c07883a 	add	r3,r3,r16
   41394:	10800044 	addi	r2,r2,1
   41398:	41400015 	stw	r5,0(r8)
   4139c:	44000115 	stw	r16,4(r8)
   413a0:	d8c02015 	stw	r3,128(sp)
   413a4:	d8801f15 	stw	r2,124(sp)
   413a8:	010001c4 	movi	r4,7
   413ac:	2080060e 	bge	r4,r2,413c8 <___vfprintf_internal_r+0xaa4>
   413b0:	d9002c17 	ldw	r4,176(sp)
   413b4:	d9801e04 	addi	r6,sp,120
   413b8:	b80b883a 	mov	r5,r23
   413bc:	00480880 	call	48088 <__sprint_r>
   413c0:	103e5a1e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   413c4:	d8c02017 	ldw	r3,128(sp)
   413c8:	d8803117 	ldw	r2,196(sp)
   413cc:	d9002a17 	ldw	r4,168(sp)
   413d0:	1100010e 	bge	r2,r4,413d8 <___vfprintf_internal_r+0xab4>
   413d4:	2005883a 	mov	r2,r4
   413d8:	d9402f17 	ldw	r5,188(sp)
   413dc:	288b883a 	add	r5,r5,r2
   413e0:	d9402f15 	stw	r5,188(sp)
   413e4:	18019e1e 	bne	r3,zero,41a60 <___vfprintf_internal_r+0x113c>
   413e8:	a8800007 	ldb	r2,0(r21)
   413ec:	d8001f15 	stw	zero,124(sp)
   413f0:	da000404 	addi	r8,sp,16
   413f4:	103d851e 	bne	r2,zero,40a0c <__alt_data_end+0xfffd990c>
   413f8:	a821883a 	mov	r16,r21
   413fc:	003d9b06 	br	40a6c <__alt_data_end+0xfffd996c>
   41400:	18c03fcc 	andi	r3,r3,255
   41404:	1805c11e 	bne	r3,zero,42b0c <___vfprintf_internal_r+0x21e8>
   41408:	94800414 	ori	r18,r18,16
   4140c:	9080080c 	andi	r2,r18,32
   41410:	10020c26 	beq	r2,zero,41c44 <___vfprintf_internal_r+0x1320>
   41414:	d8802d17 	ldw	r2,180(sp)
   41418:	d9002917 	ldw	r4,164(sp)
   4141c:	d8002785 	stb	zero,158(sp)
   41420:	10c00204 	addi	r3,r2,8
   41424:	14c00017 	ldw	r19,0(r2)
   41428:	15800117 	ldw	r22,4(r2)
   4142c:	20040f16 	blt	r4,zero,4246c <___vfprintf_internal_r+0x1b48>
   41430:	013fdfc4 	movi	r4,-129
   41434:	9d84b03a 	or	r2,r19,r22
   41438:	d8c02d15 	stw	r3,180(sp)
   4143c:	9124703a 	and	r18,r18,r4
   41440:	0039883a 	mov	fp,zero
   41444:	103e891e 	bne	r2,zero,40e6c <__alt_data_end+0xfffd9d6c>
   41448:	d9002917 	ldw	r4,164(sp)
   4144c:	2002c11e 	bne	r4,zero,41f54 <___vfprintf_internal_r+0x1630>
   41450:	d8002915 	stw	zero,164(sp)
   41454:	d8002e15 	stw	zero,184(sp)
   41458:	dc001e04 	addi	r16,sp,120
   4145c:	003ef806 	br	41040 <__alt_data_end+0xfffd9f40>
   41460:	18c03fcc 	andi	r3,r3,255
   41464:	18059d1e 	bne	r3,zero,42adc <___vfprintf_internal_r+0x21b8>
   41468:	01400174 	movhi	r5,5
   4146c:	297e6e04 	addi	r5,r5,-1608
   41470:	d9403915 	stw	r5,228(sp)
   41474:	9080080c 	andi	r2,r18,32
   41478:	10005226 	beq	r2,zero,415c4 <___vfprintf_internal_r+0xca0>
   4147c:	d8802d17 	ldw	r2,180(sp)
   41480:	14c00017 	ldw	r19,0(r2)
   41484:	15800117 	ldw	r22,4(r2)
   41488:	10800204 	addi	r2,r2,8
   4148c:	d8802d15 	stw	r2,180(sp)
   41490:	9080004c 	andi	r2,r18,1
   41494:	10019026 	beq	r2,zero,41ad8 <___vfprintf_internal_r+0x11b4>
   41498:	9d84b03a 	or	r2,r19,r22
   4149c:	10036926 	beq	r2,zero,42244 <___vfprintf_internal_r+0x1920>
   414a0:	d8c02917 	ldw	r3,164(sp)
   414a4:	00800c04 	movi	r2,48
   414a8:	d8802705 	stb	r2,156(sp)
   414ac:	dc402745 	stb	r17,157(sp)
   414b0:	d8002785 	stb	zero,158(sp)
   414b4:	90800094 	ori	r2,r18,2
   414b8:	18045d16 	blt	r3,zero,42630 <___vfprintf_internal_r+0x1d0c>
   414bc:	00bfdfc4 	movi	r2,-129
   414c0:	90a4703a 	and	r18,r18,r2
   414c4:	94800094 	ori	r18,r18,2
   414c8:	0039883a 	mov	fp,zero
   414cc:	d9003917 	ldw	r4,228(sp)
   414d0:	dc001e04 	addi	r16,sp,120
   414d4:	988003cc 	andi	r2,r19,15
   414d8:	b006973a 	slli	r3,r22,28
   414dc:	2085883a 	add	r2,r4,r2
   414e0:	9826d13a 	srli	r19,r19,4
   414e4:	10800003 	ldbu	r2,0(r2)
   414e8:	b02cd13a 	srli	r22,r22,4
   414ec:	843fffc4 	addi	r16,r16,-1
   414f0:	1ce6b03a 	or	r19,r3,r19
   414f4:	80800005 	stb	r2,0(r16)
   414f8:	9d84b03a 	or	r2,r19,r22
   414fc:	103ff51e 	bne	r2,zero,414d4 <__alt_data_end+0xfffda3d4>
   41500:	d8c02817 	ldw	r3,160(sp)
   41504:	1c07c83a 	sub	r3,r3,r16
   41508:	d8c02e15 	stw	r3,184(sp)
   4150c:	003ecc06 	br	41040 <__alt_data_end+0xfffd9f40>
   41510:	18c03fcc 	andi	r3,r3,255
   41514:	183e9f26 	beq	r3,zero,40f94 <__alt_data_end+0xfffd9e94>
   41518:	d9c02785 	stb	r7,158(sp)
   4151c:	003e9d06 	br	40f94 <__alt_data_end+0xfffd9e94>
   41520:	00c00044 	movi	r3,1
   41524:	01c00ac4 	movi	r7,43
   41528:	ac400007 	ldb	r17,0(r21)
   4152c:	003d5e06 	br	40aa8 <__alt_data_end+0xfffd99a8>
   41530:	94800814 	ori	r18,r18,32
   41534:	ac400007 	ldb	r17,0(r21)
   41538:	003d5b06 	br	40aa8 <__alt_data_end+0xfffd99a8>
   4153c:	d8c02d17 	ldw	r3,180(sp)
   41540:	d8002785 	stb	zero,158(sp)
   41544:	1c000017 	ldw	r16,0(r3)
   41548:	1cc00104 	addi	r19,r3,4
   4154c:	80041926 	beq	r16,zero,425b4 <___vfprintf_internal_r+0x1c90>
   41550:	d9002917 	ldw	r4,164(sp)
   41554:	2003d016 	blt	r4,zero,42498 <___vfprintf_internal_r+0x1b74>
   41558:	200d883a 	mov	r6,r4
   4155c:	000b883a 	mov	r5,zero
   41560:	8009883a 	mov	r4,r16
   41564:	da003d15 	stw	r8,244(sp)
   41568:	00461340 	call	46134 <memchr>
   4156c:	da003d17 	ldw	r8,244(sp)
   41570:	10045426 	beq	r2,zero,426c4 <___vfprintf_internal_r+0x1da0>
   41574:	1405c83a 	sub	r2,r2,r16
   41578:	d8802e15 	stw	r2,184(sp)
   4157c:	1003cc16 	blt	r2,zero,424b0 <___vfprintf_internal_r+0x1b8c>
   41580:	df002783 	ldbu	fp,158(sp)
   41584:	d8802a15 	stw	r2,168(sp)
   41588:	dcc02d15 	stw	r19,180(sp)
   4158c:	d8002915 	stw	zero,164(sp)
   41590:	d8003215 	stw	zero,200(sp)
   41594:	003eb006 	br	41058 <__alt_data_end+0xfffd9f58>
   41598:	18c03fcc 	andi	r3,r3,255
   4159c:	183f9b26 	beq	r3,zero,4140c <__alt_data_end+0xfffda30c>
   415a0:	d9c02785 	stb	r7,158(sp)
   415a4:	003f9906 	br	4140c <__alt_data_end+0xfffda30c>
   415a8:	18c03fcc 	andi	r3,r3,255
   415ac:	1805551e 	bne	r3,zero,42b04 <___vfprintf_internal_r+0x21e0>
   415b0:	01400174 	movhi	r5,5
   415b4:	297e7304 	addi	r5,r5,-1588
   415b8:	d9403915 	stw	r5,228(sp)
   415bc:	9080080c 	andi	r2,r18,32
   415c0:	103fae1e 	bne	r2,zero,4147c <__alt_data_end+0xfffda37c>
   415c4:	9080040c 	andi	r2,r18,16
   415c8:	1002de26 	beq	r2,zero,42144 <___vfprintf_internal_r+0x1820>
   415cc:	d8c02d17 	ldw	r3,180(sp)
   415d0:	002d883a 	mov	r22,zero
   415d4:	1cc00017 	ldw	r19,0(r3)
   415d8:	18c00104 	addi	r3,r3,4
   415dc:	d8c02d15 	stw	r3,180(sp)
   415e0:	003fab06 	br	41490 <__alt_data_end+0xfffda390>
   415e4:	38803fcc 	andi	r2,r7,255
   415e8:	1080201c 	xori	r2,r2,128
   415ec:	10bfe004 	addi	r2,r2,-128
   415f0:	1002d21e 	bne	r2,zero,4213c <___vfprintf_internal_r+0x1818>
   415f4:	00c00044 	movi	r3,1
   415f8:	01c00804 	movi	r7,32
   415fc:	ac400007 	ldb	r17,0(r21)
   41600:	003d2906 	br	40aa8 <__alt_data_end+0xfffd99a8>
   41604:	94800054 	ori	r18,r18,1
   41608:	ac400007 	ldb	r17,0(r21)
   4160c:	003d2606 	br	40aa8 <__alt_data_end+0xfffd99a8>
   41610:	18c03fcc 	andi	r3,r3,255
   41614:	183e0526 	beq	r3,zero,40e2c <__alt_data_end+0xfffd9d2c>
   41618:	d9c02785 	stb	r7,158(sp)
   4161c:	003e0306 	br	40e2c <__alt_data_end+0xfffd9d2c>
   41620:	94801014 	ori	r18,r18,64
   41624:	ac400007 	ldb	r17,0(r21)
   41628:	003d1f06 	br	40aa8 <__alt_data_end+0xfffd99a8>
   4162c:	ac400007 	ldb	r17,0(r21)
   41630:	8a438726 	beq	r17,r9,42450 <___vfprintf_internal_r+0x1b2c>
   41634:	94800414 	ori	r18,r18,16
   41638:	003d1b06 	br	40aa8 <__alt_data_end+0xfffd99a8>
   4163c:	18c03fcc 	andi	r3,r3,255
   41640:	1805341e 	bne	r3,zero,42b14 <___vfprintf_internal_r+0x21f0>
   41644:	9080080c 	andi	r2,r18,32
   41648:	1002cd26 	beq	r2,zero,42180 <___vfprintf_internal_r+0x185c>
   4164c:	d9402d17 	ldw	r5,180(sp)
   41650:	d9002f17 	ldw	r4,188(sp)
   41654:	28800017 	ldw	r2,0(r5)
   41658:	2007d7fa 	srai	r3,r4,31
   4165c:	29400104 	addi	r5,r5,4
   41660:	d9402d15 	stw	r5,180(sp)
   41664:	11000015 	stw	r4,0(r2)
   41668:	10c00115 	stw	r3,4(r2)
   4166c:	003ce506 	br	40a04 <__alt_data_end+0xfffd9904>
   41670:	d8c02d17 	ldw	r3,180(sp)
   41674:	d9002d17 	ldw	r4,180(sp)
   41678:	d8002785 	stb	zero,158(sp)
   4167c:	18800017 	ldw	r2,0(r3)
   41680:	21000104 	addi	r4,r4,4
   41684:	00c00044 	movi	r3,1
   41688:	d8c02a15 	stw	r3,168(sp)
   4168c:	d8801405 	stb	r2,80(sp)
   41690:	d9002d15 	stw	r4,180(sp)
   41694:	d8c02e15 	stw	r3,184(sp)
   41698:	d8002915 	stw	zero,164(sp)
   4169c:	d8003215 	stw	zero,200(sp)
   416a0:	dc001404 	addi	r16,sp,80
   416a4:	0039883a 	mov	fp,zero
   416a8:	003e7206 	br	41074 <__alt_data_end+0xfffd9f74>
   416ac:	01000174 	movhi	r4,5
   416b0:	213e7304 	addi	r4,r4,-1588
   416b4:	0039883a 	mov	fp,zero
   416b8:	d9003915 	stw	r4,228(sp)
   416bc:	04401e04 	movi	r17,120
   416c0:	003f8206 	br	414cc <__alt_data_end+0xfffda3cc>
   416c4:	18c03fcc 	andi	r3,r3,255
   416c8:	1805061e 	bne	r3,zero,42ae4 <___vfprintf_internal_r+0x21c0>
   416cc:	883d9126 	beq	r17,zero,40d14 <__alt_data_end+0xfffd9c14>
   416d0:	00c00044 	movi	r3,1
   416d4:	d8c02a15 	stw	r3,168(sp)
   416d8:	dc401405 	stb	r17,80(sp)
   416dc:	d8002785 	stb	zero,158(sp)
   416e0:	003fec06 	br	41694 <__alt_data_end+0xfffda594>
   416e4:	01400174 	movhi	r5,5
   416e8:	297e7304 	addi	r5,r5,-1588
   416ec:	d9403915 	stw	r5,228(sp)
   416f0:	d8c02d15 	stw	r3,180(sp)
   416f4:	1025883a 	mov	r18,r2
   416f8:	04401e04 	movi	r17,120
   416fc:	9d84b03a 	or	r2,r19,r22
   41700:	1000fc1e 	bne	r2,zero,41af4 <___vfprintf_internal_r+0x11d0>
   41704:	0039883a 	mov	fp,zero
   41708:	00800084 	movi	r2,2
   4170c:	10803fcc 	andi	r2,r2,255
   41710:	00c00044 	movi	r3,1
   41714:	10c20f26 	beq	r2,r3,41f54 <___vfprintf_internal_r+0x1630>
   41718:	00c00084 	movi	r3,2
   4171c:	10fd6326 	beq	r2,r3,40cac <__alt_data_end+0xfffd9bac>
   41720:	003e2d06 	br	40fd8 <__alt_data_end+0xfffd9ed8>
   41724:	d8c02017 	ldw	r3,128(sp)
   41728:	003e9306 	br	41178 <__alt_data_end+0xfffda078>
   4172c:	00801944 	movi	r2,101
   41730:	14407e0e 	bge	r2,r17,4192c <___vfprintf_internal_r+0x1008>
   41734:	d9003617 	ldw	r4,216(sp)
   41738:	d9403817 	ldw	r5,224(sp)
   4173c:	000d883a 	mov	r6,zero
   41740:	000f883a 	mov	r7,zero
   41744:	d8c03c15 	stw	r3,240(sp)
   41748:	da003d15 	stw	r8,244(sp)
   4174c:	004bb4c0 	call	4bb4c <__eqdf2>
   41750:	d8c03c17 	ldw	r3,240(sp)
   41754:	da003d17 	ldw	r8,244(sp)
   41758:	1000f71e 	bne	r2,zero,41b38 <___vfprintf_internal_r+0x1214>
   4175c:	d8801f17 	ldw	r2,124(sp)
   41760:	01000174 	movhi	r4,5
   41764:	213e7a04 	addi	r4,r4,-1560
   41768:	18c00044 	addi	r3,r3,1
   4176c:	10800044 	addi	r2,r2,1
   41770:	41000015 	stw	r4,0(r8)
   41774:	01000044 	movi	r4,1
   41778:	41000115 	stw	r4,4(r8)
   4177c:	d8c02015 	stw	r3,128(sp)
   41780:	d8801f15 	stw	r2,124(sp)
   41784:	010001c4 	movi	r4,7
   41788:	2082b816 	blt	r4,r2,4226c <___vfprintf_internal_r+0x1948>
   4178c:	42000204 	addi	r8,r8,8
   41790:	d8802617 	ldw	r2,152(sp)
   41794:	d9403317 	ldw	r5,204(sp)
   41798:	11400216 	blt	r2,r5,417a4 <___vfprintf_internal_r+0xe80>
   4179c:	9080004c 	andi	r2,r18,1
   417a0:	103ed526 	beq	r2,zero,412f8 <__alt_data_end+0xfffda1f8>
   417a4:	d8803717 	ldw	r2,220(sp)
   417a8:	d9003417 	ldw	r4,208(sp)
   417ac:	d9403717 	ldw	r5,220(sp)
   417b0:	1887883a 	add	r3,r3,r2
   417b4:	d8801f17 	ldw	r2,124(sp)
   417b8:	41000015 	stw	r4,0(r8)
   417bc:	41400115 	stw	r5,4(r8)
   417c0:	10800044 	addi	r2,r2,1
   417c4:	d8c02015 	stw	r3,128(sp)
   417c8:	d8801f15 	stw	r2,124(sp)
   417cc:	010001c4 	movi	r4,7
   417d0:	20832916 	blt	r4,r2,42478 <___vfprintf_internal_r+0x1b54>
   417d4:	42000204 	addi	r8,r8,8
   417d8:	d8803317 	ldw	r2,204(sp)
   417dc:	143fffc4 	addi	r16,r2,-1
   417e0:	043ec50e 	bge	zero,r16,412f8 <__alt_data_end+0xfffda1f8>
   417e4:	04400404 	movi	r17,16
   417e8:	d8801f17 	ldw	r2,124(sp)
   417ec:	8c00880e 	bge	r17,r16,41a10 <___vfprintf_internal_r+0x10ec>
   417f0:	01400174 	movhi	r5,5
   417f4:	297e7a84 	addi	r5,r5,-1558
   417f8:	d9402b15 	stw	r5,172(sp)
   417fc:	058001c4 	movi	r22,7
   41800:	dcc02c17 	ldw	r19,176(sp)
   41804:	00000306 	br	41814 <___vfprintf_internal_r+0xef0>
   41808:	42000204 	addi	r8,r8,8
   4180c:	843ffc04 	addi	r16,r16,-16
   41810:	8c00820e 	bge	r17,r16,41a1c <___vfprintf_internal_r+0x10f8>
   41814:	18c00404 	addi	r3,r3,16
   41818:	10800044 	addi	r2,r2,1
   4181c:	45000015 	stw	r20,0(r8)
   41820:	44400115 	stw	r17,4(r8)
   41824:	d8c02015 	stw	r3,128(sp)
   41828:	d8801f15 	stw	r2,124(sp)
   4182c:	b0bff60e 	bge	r22,r2,41808 <__alt_data_end+0xfffda708>
   41830:	d9801e04 	addi	r6,sp,120
   41834:	b80b883a 	mov	r5,r23
   41838:	9809883a 	mov	r4,r19
   4183c:	00480880 	call	48088 <__sprint_r>
   41840:	103d3a1e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41844:	d8c02017 	ldw	r3,128(sp)
   41848:	d8801f17 	ldw	r2,124(sp)
   4184c:	da000404 	addi	r8,sp,16
   41850:	003fee06 	br	4180c <__alt_data_end+0xfffda70c>
   41854:	d9403117 	ldw	r5,196(sp)
   41858:	d8802a17 	ldw	r2,168(sp)
   4185c:	28adc83a 	sub	r22,r5,r2
   41860:	05be630e 	bge	zero,r22,411f0 <__alt_data_end+0xfffda0f0>
   41864:	07000404 	movi	fp,16
   41868:	d8801f17 	ldw	r2,124(sp)
   4186c:	e5838f0e 	bge	fp,r22,426ac <___vfprintf_internal_r+0x1d88>
   41870:	01400174 	movhi	r5,5
   41874:	297e7a84 	addi	r5,r5,-1558
   41878:	dc403015 	stw	r17,192(sp)
   4187c:	d9402b15 	stw	r5,172(sp)
   41880:	b023883a 	mov	r17,r22
   41884:	04c001c4 	movi	r19,7
   41888:	a82d883a 	mov	r22,r21
   4188c:	902b883a 	mov	r21,r18
   41890:	8025883a 	mov	r18,r16
   41894:	dc002c17 	ldw	r16,176(sp)
   41898:	00000306 	br	418a8 <___vfprintf_internal_r+0xf84>
   4189c:	8c7ffc04 	addi	r17,r17,-16
   418a0:	42000204 	addi	r8,r8,8
   418a4:	e440110e 	bge	fp,r17,418ec <___vfprintf_internal_r+0xfc8>
   418a8:	18c00404 	addi	r3,r3,16
   418ac:	10800044 	addi	r2,r2,1
   418b0:	45000015 	stw	r20,0(r8)
   418b4:	47000115 	stw	fp,4(r8)
   418b8:	d8c02015 	stw	r3,128(sp)
   418bc:	d8801f15 	stw	r2,124(sp)
   418c0:	98bff60e 	bge	r19,r2,4189c <__alt_data_end+0xfffda79c>
   418c4:	d9801e04 	addi	r6,sp,120
   418c8:	b80b883a 	mov	r5,r23
   418cc:	8009883a 	mov	r4,r16
   418d0:	00480880 	call	48088 <__sprint_r>
   418d4:	103d151e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   418d8:	8c7ffc04 	addi	r17,r17,-16
   418dc:	d8c02017 	ldw	r3,128(sp)
   418e0:	d8801f17 	ldw	r2,124(sp)
   418e4:	da000404 	addi	r8,sp,16
   418e8:	e47fef16 	blt	fp,r17,418a8 <__alt_data_end+0xfffda7a8>
   418ec:	9021883a 	mov	r16,r18
   418f0:	a825883a 	mov	r18,r21
   418f4:	b02b883a 	mov	r21,r22
   418f8:	882d883a 	mov	r22,r17
   418fc:	dc403017 	ldw	r17,192(sp)
   41900:	d9002b17 	ldw	r4,172(sp)
   41904:	1d87883a 	add	r3,r3,r22
   41908:	10800044 	addi	r2,r2,1
   4190c:	41000015 	stw	r4,0(r8)
   41910:	45800115 	stw	r22,4(r8)
   41914:	d8c02015 	stw	r3,128(sp)
   41918:	d8801f15 	stw	r2,124(sp)
   4191c:	010001c4 	movi	r4,7
   41920:	20818e16 	blt	r4,r2,41f5c <___vfprintf_internal_r+0x1638>
   41924:	42000204 	addi	r8,r8,8
   41928:	003e3106 	br	411f0 <__alt_data_end+0xfffda0f0>
   4192c:	d9403317 	ldw	r5,204(sp)
   41930:	00800044 	movi	r2,1
   41934:	18c00044 	addi	r3,r3,1
   41938:	1141530e 	bge	r2,r5,41e88 <___vfprintf_internal_r+0x1564>
   4193c:	dc401f17 	ldw	r17,124(sp)
   41940:	00800044 	movi	r2,1
   41944:	40800115 	stw	r2,4(r8)
   41948:	8c400044 	addi	r17,r17,1
   4194c:	44000015 	stw	r16,0(r8)
   41950:	d8c02015 	stw	r3,128(sp)
   41954:	dc401f15 	stw	r17,124(sp)
   41958:	008001c4 	movi	r2,7
   4195c:	14416b16 	blt	r2,r17,41f0c <___vfprintf_internal_r+0x15e8>
   41960:	42000204 	addi	r8,r8,8
   41964:	d8803717 	ldw	r2,220(sp)
   41968:	d9003417 	ldw	r4,208(sp)
   4196c:	8c400044 	addi	r17,r17,1
   41970:	10c7883a 	add	r3,r2,r3
   41974:	40800115 	stw	r2,4(r8)
   41978:	41000015 	stw	r4,0(r8)
   4197c:	d8c02015 	stw	r3,128(sp)
   41980:	dc401f15 	stw	r17,124(sp)
   41984:	008001c4 	movi	r2,7
   41988:	14416916 	blt	r2,r17,41f30 <___vfprintf_internal_r+0x160c>
   4198c:	45800204 	addi	r22,r8,8
   41990:	d9003617 	ldw	r4,216(sp)
   41994:	d9403817 	ldw	r5,224(sp)
   41998:	000d883a 	mov	r6,zero
   4199c:	000f883a 	mov	r7,zero
   419a0:	d8c03c15 	stw	r3,240(sp)
   419a4:	004bb4c0 	call	4bb4c <__eqdf2>
   419a8:	d8c03c17 	ldw	r3,240(sp)
   419ac:	1000bc26 	beq	r2,zero,41ca0 <___vfprintf_internal_r+0x137c>
   419b0:	d9403317 	ldw	r5,204(sp)
   419b4:	84000044 	addi	r16,r16,1
   419b8:	8c400044 	addi	r17,r17,1
   419bc:	28bfffc4 	addi	r2,r5,-1
   419c0:	1887883a 	add	r3,r3,r2
   419c4:	b0800115 	stw	r2,4(r22)
   419c8:	b4000015 	stw	r16,0(r22)
   419cc:	d8c02015 	stw	r3,128(sp)
   419d0:	dc401f15 	stw	r17,124(sp)
   419d4:	008001c4 	movi	r2,7
   419d8:	14414316 	blt	r2,r17,41ee8 <___vfprintf_internal_r+0x15c4>
   419dc:	b5800204 	addi	r22,r22,8
   419e0:	d9003a17 	ldw	r4,232(sp)
   419e4:	df0022c4 	addi	fp,sp,139
   419e8:	8c400044 	addi	r17,r17,1
   419ec:	20c7883a 	add	r3,r4,r3
   419f0:	b7000015 	stw	fp,0(r22)
   419f4:	b1000115 	stw	r4,4(r22)
   419f8:	d8c02015 	stw	r3,128(sp)
   419fc:	dc401f15 	stw	r17,124(sp)
   41a00:	008001c4 	movi	r2,7
   41a04:	14400e16 	blt	r2,r17,41a40 <___vfprintf_internal_r+0x111c>
   41a08:	b2000204 	addi	r8,r22,8
   41a0c:	003e3a06 	br	412f8 <__alt_data_end+0xfffda1f8>
   41a10:	01000174 	movhi	r4,5
   41a14:	213e7a84 	addi	r4,r4,-1558
   41a18:	d9002b15 	stw	r4,172(sp)
   41a1c:	d9002b17 	ldw	r4,172(sp)
   41a20:	1c07883a 	add	r3,r3,r16
   41a24:	44000115 	stw	r16,4(r8)
   41a28:	41000015 	stw	r4,0(r8)
   41a2c:	10800044 	addi	r2,r2,1
   41a30:	d8c02015 	stw	r3,128(sp)
   41a34:	d8801f15 	stw	r2,124(sp)
   41a38:	010001c4 	movi	r4,7
   41a3c:	20be2d0e 	bge	r4,r2,412f4 <__alt_data_end+0xfffda1f4>
   41a40:	d9002c17 	ldw	r4,176(sp)
   41a44:	d9801e04 	addi	r6,sp,120
   41a48:	b80b883a 	mov	r5,r23
   41a4c:	00480880 	call	48088 <__sprint_r>
   41a50:	103cb61e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41a54:	d8c02017 	ldw	r3,128(sp)
   41a58:	da000404 	addi	r8,sp,16
   41a5c:	003e2606 	br	412f8 <__alt_data_end+0xfffda1f8>
   41a60:	d9002c17 	ldw	r4,176(sp)
   41a64:	d9801e04 	addi	r6,sp,120
   41a68:	b80b883a 	mov	r5,r23
   41a6c:	00480880 	call	48088 <__sprint_r>
   41a70:	103e5d26 	beq	r2,zero,413e8 <__alt_data_end+0xfffda2e8>
   41a74:	003cad06 	br	40d2c <__alt_data_end+0xfffd9c2c>
   41a78:	d9002c17 	ldw	r4,176(sp)
   41a7c:	d9801e04 	addi	r6,sp,120
   41a80:	b80b883a 	mov	r5,r23
   41a84:	00480880 	call	48088 <__sprint_r>
   41a88:	103ca81e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41a8c:	d8c02017 	ldw	r3,128(sp)
   41a90:	da000404 	addi	r8,sp,16
   41a94:	003e0b06 	br	412c4 <__alt_data_end+0xfffda1c4>
   41a98:	d9002c17 	ldw	r4,176(sp)
   41a9c:	d9801e04 	addi	r6,sp,120
   41aa0:	b80b883a 	mov	r5,r23
   41aa4:	00480880 	call	48088 <__sprint_r>
   41aa8:	103ca01e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41aac:	d8c02017 	ldw	r3,128(sp)
   41ab0:	da000404 	addi	r8,sp,16
   41ab4:	003dbd06 	br	411ac <__alt_data_end+0xfffda0ac>
   41ab8:	d9002c17 	ldw	r4,176(sp)
   41abc:	d9801e04 	addi	r6,sp,120
   41ac0:	b80b883a 	mov	r5,r23
   41ac4:	00480880 	call	48088 <__sprint_r>
   41ac8:	103c981e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41acc:	d8c02017 	ldw	r3,128(sp)
   41ad0:	da000404 	addi	r8,sp,16
   41ad4:	003dc306 	br	411e4 <__alt_data_end+0xfffda0e4>
   41ad8:	d8802917 	ldw	r2,164(sp)
   41adc:	d8002785 	stb	zero,158(sp)
   41ae0:	103f0616 	blt	r2,zero,416fc <__alt_data_end+0xfffda5fc>
   41ae4:	00ffdfc4 	movi	r3,-129
   41ae8:	9d84b03a 	or	r2,r19,r22
   41aec:	90e4703a 	and	r18,r18,r3
   41af0:	103c6b26 	beq	r2,zero,40ca0 <__alt_data_end+0xfffd9ba0>
   41af4:	0039883a 	mov	fp,zero
   41af8:	003e7406 	br	414cc <__alt_data_end+0xfffda3cc>
   41afc:	9080040c 	andi	r2,r18,16
   41b00:	1001b326 	beq	r2,zero,421d0 <___vfprintf_internal_r+0x18ac>
   41b04:	d9002d17 	ldw	r4,180(sp)
   41b08:	d9402917 	ldw	r5,164(sp)
   41b0c:	d8002785 	stb	zero,158(sp)
   41b10:	20800104 	addi	r2,r4,4
   41b14:	24c00017 	ldw	r19,0(r4)
   41b18:	002d883a 	mov	r22,zero
   41b1c:	2801b516 	blt	r5,zero,421f4 <___vfprintf_internal_r+0x18d0>
   41b20:	00ffdfc4 	movi	r3,-129
   41b24:	d8802d15 	stw	r2,180(sp)
   41b28:	90e4703a 	and	r18,r18,r3
   41b2c:	983d2726 	beq	r19,zero,40fcc <__alt_data_end+0xfffd9ecc>
   41b30:	0039883a 	mov	fp,zero
   41b34:	003d2a06 	br	40fe0 <__alt_data_end+0xfffd9ee0>
   41b38:	dc402617 	ldw	r17,152(sp)
   41b3c:	0441d30e 	bge	zero,r17,4228c <___vfprintf_internal_r+0x1968>
   41b40:	dc403217 	ldw	r17,200(sp)
   41b44:	d8803317 	ldw	r2,204(sp)
   41b48:	1440010e 	bge	r2,r17,41b50 <___vfprintf_internal_r+0x122c>
   41b4c:	1023883a 	mov	r17,r2
   41b50:	04400a0e 	bge	zero,r17,41b7c <___vfprintf_internal_r+0x1258>
   41b54:	d8801f17 	ldw	r2,124(sp)
   41b58:	1c47883a 	add	r3,r3,r17
   41b5c:	44000015 	stw	r16,0(r8)
   41b60:	10800044 	addi	r2,r2,1
   41b64:	44400115 	stw	r17,4(r8)
   41b68:	d8c02015 	stw	r3,128(sp)
   41b6c:	d8801f15 	stw	r2,124(sp)
   41b70:	010001c4 	movi	r4,7
   41b74:	20826516 	blt	r4,r2,4250c <___vfprintf_internal_r+0x1be8>
   41b78:	42000204 	addi	r8,r8,8
   41b7c:	88026116 	blt	r17,zero,42504 <___vfprintf_internal_r+0x1be0>
   41b80:	d9003217 	ldw	r4,200(sp)
   41b84:	2463c83a 	sub	r17,r4,r17
   41b88:	04407b0e 	bge	zero,r17,41d78 <___vfprintf_internal_r+0x1454>
   41b8c:	05800404 	movi	r22,16
   41b90:	d8801f17 	ldw	r2,124(sp)
   41b94:	b4419d0e 	bge	r22,r17,4220c <___vfprintf_internal_r+0x18e8>
   41b98:	01000174 	movhi	r4,5
   41b9c:	213e7a84 	addi	r4,r4,-1558
   41ba0:	d9002b15 	stw	r4,172(sp)
   41ba4:	070001c4 	movi	fp,7
   41ba8:	dcc02c17 	ldw	r19,176(sp)
   41bac:	00000306 	br	41bbc <___vfprintf_internal_r+0x1298>
   41bb0:	42000204 	addi	r8,r8,8
   41bb4:	8c7ffc04 	addi	r17,r17,-16
   41bb8:	b441970e 	bge	r22,r17,42218 <___vfprintf_internal_r+0x18f4>
   41bbc:	18c00404 	addi	r3,r3,16
   41bc0:	10800044 	addi	r2,r2,1
   41bc4:	45000015 	stw	r20,0(r8)
   41bc8:	45800115 	stw	r22,4(r8)
   41bcc:	d8c02015 	stw	r3,128(sp)
   41bd0:	d8801f15 	stw	r2,124(sp)
   41bd4:	e0bff60e 	bge	fp,r2,41bb0 <__alt_data_end+0xfffdaab0>
   41bd8:	d9801e04 	addi	r6,sp,120
   41bdc:	b80b883a 	mov	r5,r23
   41be0:	9809883a 	mov	r4,r19
   41be4:	00480880 	call	48088 <__sprint_r>
   41be8:	103c501e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41bec:	d8c02017 	ldw	r3,128(sp)
   41bf0:	d8801f17 	ldw	r2,124(sp)
   41bf4:	da000404 	addi	r8,sp,16
   41bf8:	003fee06 	br	41bb4 <__alt_data_end+0xfffdaab4>
   41bfc:	d9002c17 	ldw	r4,176(sp)
   41c00:	d9801e04 	addi	r6,sp,120
   41c04:	b80b883a 	mov	r5,r23
   41c08:	00480880 	call	48088 <__sprint_r>
   41c0c:	103c471e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41c10:	d8c02017 	ldw	r3,128(sp)
   41c14:	df002787 	ldb	fp,158(sp)
   41c18:	da000404 	addi	r8,sp,16
   41c1c:	003d5606 	br	41178 <__alt_data_end+0xfffda078>
   41c20:	9080040c 	andi	r2,r18,16
   41c24:	10016126 	beq	r2,zero,421ac <___vfprintf_internal_r+0x1888>
   41c28:	d8802d17 	ldw	r2,180(sp)
   41c2c:	14c00017 	ldw	r19,0(r2)
   41c30:	10800104 	addi	r2,r2,4
   41c34:	d8802d15 	stw	r2,180(sp)
   41c38:	982dd7fa 	srai	r22,r19,31
   41c3c:	b005883a 	mov	r2,r22
   41c40:	003c8206 	br	40e4c <__alt_data_end+0xfffd9d4c>
   41c44:	9080040c 	andi	r2,r18,16
   41c48:	10003526 	beq	r2,zero,41d20 <___vfprintf_internal_r+0x13fc>
   41c4c:	d9402d17 	ldw	r5,180(sp)
   41c50:	d8c02917 	ldw	r3,164(sp)
   41c54:	d8002785 	stb	zero,158(sp)
   41c58:	28800104 	addi	r2,r5,4
   41c5c:	2cc00017 	ldw	r19,0(r5)
   41c60:	002d883a 	mov	r22,zero
   41c64:	18003716 	blt	r3,zero,41d44 <___vfprintf_internal_r+0x1420>
   41c68:	00ffdfc4 	movi	r3,-129
   41c6c:	d8802d15 	stw	r2,180(sp)
   41c70:	90e4703a 	and	r18,r18,r3
   41c74:	0039883a 	mov	fp,zero
   41c78:	983df326 	beq	r19,zero,41448 <__alt_data_end+0xfffda348>
   41c7c:	00800244 	movi	r2,9
   41c80:	14fc7b36 	bltu	r2,r19,40e70 <__alt_data_end+0xfffd9d70>
   41c84:	d8c02817 	ldw	r3,160(sp)
   41c88:	dc001dc4 	addi	r16,sp,119
   41c8c:	9cc00c04 	addi	r19,r19,48
   41c90:	1c07c83a 	sub	r3,r3,r16
   41c94:	dcc01dc5 	stb	r19,119(sp)
   41c98:	d8c02e15 	stw	r3,184(sp)
   41c9c:	003ce806 	br	41040 <__alt_data_end+0xfffd9f40>
   41ca0:	d8803317 	ldw	r2,204(sp)
   41ca4:	143fffc4 	addi	r16,r2,-1
   41ca8:	043f4d0e 	bge	zero,r16,419e0 <__alt_data_end+0xfffda8e0>
   41cac:	07000404 	movi	fp,16
   41cb0:	e400810e 	bge	fp,r16,41eb8 <___vfprintf_internal_r+0x1594>
   41cb4:	01400174 	movhi	r5,5
   41cb8:	297e7a84 	addi	r5,r5,-1558
   41cbc:	d9402b15 	stw	r5,172(sp)
   41cc0:	01c001c4 	movi	r7,7
   41cc4:	dcc02c17 	ldw	r19,176(sp)
   41cc8:	00000306 	br	41cd8 <___vfprintf_internal_r+0x13b4>
   41ccc:	b5800204 	addi	r22,r22,8
   41cd0:	843ffc04 	addi	r16,r16,-16
   41cd4:	e4007b0e 	bge	fp,r16,41ec4 <___vfprintf_internal_r+0x15a0>
   41cd8:	18c00404 	addi	r3,r3,16
   41cdc:	8c400044 	addi	r17,r17,1
   41ce0:	b5000015 	stw	r20,0(r22)
   41ce4:	b7000115 	stw	fp,4(r22)
   41ce8:	d8c02015 	stw	r3,128(sp)
   41cec:	dc401f15 	stw	r17,124(sp)
   41cf0:	3c7ff60e 	bge	r7,r17,41ccc <__alt_data_end+0xfffdabcc>
   41cf4:	d9801e04 	addi	r6,sp,120
   41cf8:	b80b883a 	mov	r5,r23
   41cfc:	9809883a 	mov	r4,r19
   41d00:	d9c03c15 	stw	r7,240(sp)
   41d04:	00480880 	call	48088 <__sprint_r>
   41d08:	d9c03c17 	ldw	r7,240(sp)
   41d0c:	103c071e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41d10:	d8c02017 	ldw	r3,128(sp)
   41d14:	dc401f17 	ldw	r17,124(sp)
   41d18:	dd800404 	addi	r22,sp,16
   41d1c:	003fec06 	br	41cd0 <__alt_data_end+0xfffdabd0>
   41d20:	9080100c 	andi	r2,r18,64
   41d24:	d8002785 	stb	zero,158(sp)
   41d28:	10010e26 	beq	r2,zero,42164 <___vfprintf_internal_r+0x1840>
   41d2c:	d9002d17 	ldw	r4,180(sp)
   41d30:	d9402917 	ldw	r5,164(sp)
   41d34:	002d883a 	mov	r22,zero
   41d38:	20800104 	addi	r2,r4,4
   41d3c:	24c0000b 	ldhu	r19,0(r4)
   41d40:	283fc90e 	bge	r5,zero,41c68 <__alt_data_end+0xfffdab68>
   41d44:	d8802d15 	stw	r2,180(sp)
   41d48:	0039883a 	mov	fp,zero
   41d4c:	9d84b03a 	or	r2,r19,r22
   41d50:	103c461e 	bne	r2,zero,40e6c <__alt_data_end+0xfffd9d6c>
   41d54:	00800044 	movi	r2,1
   41d58:	003e6c06 	br	4170c <__alt_data_end+0xfffda60c>
   41d5c:	d9002c17 	ldw	r4,176(sp)
   41d60:	d9801e04 	addi	r6,sp,120
   41d64:	b80b883a 	mov	r5,r23
   41d68:	00480880 	call	48088 <__sprint_r>
   41d6c:	103bef1e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41d70:	d8c02017 	ldw	r3,128(sp)
   41d74:	da000404 	addi	r8,sp,16
   41d78:	d9003217 	ldw	r4,200(sp)
   41d7c:	d8802617 	ldw	r2,152(sp)
   41d80:	d9403317 	ldw	r5,204(sp)
   41d84:	8123883a 	add	r17,r16,r4
   41d88:	11400216 	blt	r2,r5,41d94 <___vfprintf_internal_r+0x1470>
   41d8c:	9100004c 	andi	r4,r18,1
   41d90:	20000d26 	beq	r4,zero,41dc8 <___vfprintf_internal_r+0x14a4>
   41d94:	d9003717 	ldw	r4,220(sp)
   41d98:	d9403417 	ldw	r5,208(sp)
   41d9c:	1907883a 	add	r3,r3,r4
   41da0:	d9001f17 	ldw	r4,124(sp)
   41da4:	41400015 	stw	r5,0(r8)
   41da8:	d9403717 	ldw	r5,220(sp)
   41dac:	21000044 	addi	r4,r4,1
   41db0:	d8c02015 	stw	r3,128(sp)
   41db4:	41400115 	stw	r5,4(r8)
   41db8:	d9001f15 	stw	r4,124(sp)
   41dbc:	014001c4 	movi	r5,7
   41dc0:	2901e816 	blt	r5,r4,42564 <___vfprintf_internal_r+0x1c40>
   41dc4:	42000204 	addi	r8,r8,8
   41dc8:	d9003317 	ldw	r4,204(sp)
   41dcc:	8121883a 	add	r16,r16,r4
   41dd0:	2085c83a 	sub	r2,r4,r2
   41dd4:	8461c83a 	sub	r16,r16,r17
   41dd8:	1400010e 	bge	r2,r16,41de0 <___vfprintf_internal_r+0x14bc>
   41ddc:	1021883a 	mov	r16,r2
   41de0:	04000a0e 	bge	zero,r16,41e0c <___vfprintf_internal_r+0x14e8>
   41de4:	d9001f17 	ldw	r4,124(sp)
   41de8:	1c07883a 	add	r3,r3,r16
   41dec:	44400015 	stw	r17,0(r8)
   41df0:	21000044 	addi	r4,r4,1
   41df4:	44000115 	stw	r16,4(r8)
   41df8:	d8c02015 	stw	r3,128(sp)
   41dfc:	d9001f15 	stw	r4,124(sp)
   41e00:	014001c4 	movi	r5,7
   41e04:	2901fb16 	blt	r5,r4,425f4 <___vfprintf_internal_r+0x1cd0>
   41e08:	42000204 	addi	r8,r8,8
   41e0c:	8001f716 	blt	r16,zero,425ec <___vfprintf_internal_r+0x1cc8>
   41e10:	1421c83a 	sub	r16,r2,r16
   41e14:	043d380e 	bge	zero,r16,412f8 <__alt_data_end+0xfffda1f8>
   41e18:	04400404 	movi	r17,16
   41e1c:	d8801f17 	ldw	r2,124(sp)
   41e20:	8c3efb0e 	bge	r17,r16,41a10 <__alt_data_end+0xfffda910>
   41e24:	01400174 	movhi	r5,5
   41e28:	297e7a84 	addi	r5,r5,-1558
   41e2c:	d9402b15 	stw	r5,172(sp)
   41e30:	058001c4 	movi	r22,7
   41e34:	dcc02c17 	ldw	r19,176(sp)
   41e38:	00000306 	br	41e48 <___vfprintf_internal_r+0x1524>
   41e3c:	42000204 	addi	r8,r8,8
   41e40:	843ffc04 	addi	r16,r16,-16
   41e44:	8c3ef50e 	bge	r17,r16,41a1c <__alt_data_end+0xfffda91c>
   41e48:	18c00404 	addi	r3,r3,16
   41e4c:	10800044 	addi	r2,r2,1
   41e50:	45000015 	stw	r20,0(r8)
   41e54:	44400115 	stw	r17,4(r8)
   41e58:	d8c02015 	stw	r3,128(sp)
   41e5c:	d8801f15 	stw	r2,124(sp)
   41e60:	b0bff60e 	bge	r22,r2,41e3c <__alt_data_end+0xfffdad3c>
   41e64:	d9801e04 	addi	r6,sp,120
   41e68:	b80b883a 	mov	r5,r23
   41e6c:	9809883a 	mov	r4,r19
   41e70:	00480880 	call	48088 <__sprint_r>
   41e74:	103bad1e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41e78:	d8c02017 	ldw	r3,128(sp)
   41e7c:	d8801f17 	ldw	r2,124(sp)
   41e80:	da000404 	addi	r8,sp,16
   41e84:	003fee06 	br	41e40 <__alt_data_end+0xfffdad40>
   41e88:	9088703a 	and	r4,r18,r2
   41e8c:	203eab1e 	bne	r4,zero,4193c <__alt_data_end+0xfffda83c>
   41e90:	dc401f17 	ldw	r17,124(sp)
   41e94:	40800115 	stw	r2,4(r8)
   41e98:	44000015 	stw	r16,0(r8)
   41e9c:	8c400044 	addi	r17,r17,1
   41ea0:	d8c02015 	stw	r3,128(sp)
   41ea4:	dc401f15 	stw	r17,124(sp)
   41ea8:	008001c4 	movi	r2,7
   41eac:	14400e16 	blt	r2,r17,41ee8 <___vfprintf_internal_r+0x15c4>
   41eb0:	45800204 	addi	r22,r8,8
   41eb4:	003eca06 	br	419e0 <__alt_data_end+0xfffda8e0>
   41eb8:	01000174 	movhi	r4,5
   41ebc:	213e7a84 	addi	r4,r4,-1558
   41ec0:	d9002b15 	stw	r4,172(sp)
   41ec4:	d8802b17 	ldw	r2,172(sp)
   41ec8:	1c07883a 	add	r3,r3,r16
   41ecc:	8c400044 	addi	r17,r17,1
   41ed0:	b0800015 	stw	r2,0(r22)
   41ed4:	b4000115 	stw	r16,4(r22)
   41ed8:	d8c02015 	stw	r3,128(sp)
   41edc:	dc401f15 	stw	r17,124(sp)
   41ee0:	008001c4 	movi	r2,7
   41ee4:	147ebd0e 	bge	r2,r17,419dc <__alt_data_end+0xfffda8dc>
   41ee8:	d9002c17 	ldw	r4,176(sp)
   41eec:	d9801e04 	addi	r6,sp,120
   41ef0:	b80b883a 	mov	r5,r23
   41ef4:	00480880 	call	48088 <__sprint_r>
   41ef8:	103b8c1e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41efc:	d8c02017 	ldw	r3,128(sp)
   41f00:	dc401f17 	ldw	r17,124(sp)
   41f04:	dd800404 	addi	r22,sp,16
   41f08:	003eb506 	br	419e0 <__alt_data_end+0xfffda8e0>
   41f0c:	d9002c17 	ldw	r4,176(sp)
   41f10:	d9801e04 	addi	r6,sp,120
   41f14:	b80b883a 	mov	r5,r23
   41f18:	00480880 	call	48088 <__sprint_r>
   41f1c:	103b831e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41f20:	d8c02017 	ldw	r3,128(sp)
   41f24:	dc401f17 	ldw	r17,124(sp)
   41f28:	da000404 	addi	r8,sp,16
   41f2c:	003e8d06 	br	41964 <__alt_data_end+0xfffda864>
   41f30:	d9002c17 	ldw	r4,176(sp)
   41f34:	d9801e04 	addi	r6,sp,120
   41f38:	b80b883a 	mov	r5,r23
   41f3c:	00480880 	call	48088 <__sprint_r>
   41f40:	103b7a1e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41f44:	d8c02017 	ldw	r3,128(sp)
   41f48:	dc401f17 	ldw	r17,124(sp)
   41f4c:	dd800404 	addi	r22,sp,16
   41f50:	003e8f06 	br	41990 <__alt_data_end+0xfffda890>
   41f54:	0027883a 	mov	r19,zero
   41f58:	003f4a06 	br	41c84 <__alt_data_end+0xfffdab84>
   41f5c:	d9002c17 	ldw	r4,176(sp)
   41f60:	d9801e04 	addi	r6,sp,120
   41f64:	b80b883a 	mov	r5,r23
   41f68:	00480880 	call	48088 <__sprint_r>
   41f6c:	103b6f1e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   41f70:	d8c02017 	ldw	r3,128(sp)
   41f74:	da000404 	addi	r8,sp,16
   41f78:	003c9d06 	br	411f0 <__alt_data_end+0xfffda0f0>
   41f7c:	04e7c83a 	sub	r19,zero,r19
   41f80:	9804c03a 	cmpne	r2,r19,zero
   41f84:	05adc83a 	sub	r22,zero,r22
   41f88:	b0adc83a 	sub	r22,r22,r2
   41f8c:	d8802917 	ldw	r2,164(sp)
   41f90:	07000b44 	movi	fp,45
   41f94:	df002785 	stb	fp,158(sp)
   41f98:	10017b16 	blt	r2,zero,42588 <___vfprintf_internal_r+0x1c64>
   41f9c:	00bfdfc4 	movi	r2,-129
   41fa0:	90a4703a 	and	r18,r18,r2
   41fa4:	003bb106 	br	40e6c <__alt_data_end+0xfffd9d6c>
   41fa8:	d9003617 	ldw	r4,216(sp)
   41fac:	d9403817 	ldw	r5,224(sp)
   41fb0:	da003d15 	stw	r8,244(sp)
   41fb4:	0047cac0 	call	47cac <__fpclassifyd>
   41fb8:	da003d17 	ldw	r8,244(sp)
   41fbc:	1000f026 	beq	r2,zero,42380 <___vfprintf_internal_r+0x1a5c>
   41fc0:	d9002917 	ldw	r4,164(sp)
   41fc4:	05bff7c4 	movi	r22,-33
   41fc8:	00bfffc4 	movi	r2,-1
   41fcc:	8dac703a 	and	r22,r17,r22
   41fd0:	20820026 	beq	r4,r2,427d4 <___vfprintf_internal_r+0x1eb0>
   41fd4:	008011c4 	movi	r2,71
   41fd8:	b081f726 	beq	r22,r2,427b8 <___vfprintf_internal_r+0x1e94>
   41fdc:	d9003817 	ldw	r4,224(sp)
   41fe0:	90c04014 	ori	r3,r18,256
   41fe4:	d8c02b15 	stw	r3,172(sp)
   41fe8:	20021516 	blt	r4,zero,42840 <___vfprintf_internal_r+0x1f1c>
   41fec:	dcc03817 	ldw	r19,224(sp)
   41ff0:	d8002a05 	stb	zero,168(sp)
   41ff4:	00801984 	movi	r2,102
   41ff8:	8881f926 	beq	r17,r2,427e0 <___vfprintf_internal_r+0x1ebc>
   41ffc:	00801184 	movi	r2,70
   42000:	88821c26 	beq	r17,r2,42874 <___vfprintf_internal_r+0x1f50>
   42004:	00801144 	movi	r2,69
   42008:	b081ef26 	beq	r22,r2,427c8 <___vfprintf_internal_r+0x1ea4>
   4200c:	d8c02917 	ldw	r3,164(sp)
   42010:	d8802104 	addi	r2,sp,132
   42014:	d8800315 	stw	r2,12(sp)
   42018:	d9403617 	ldw	r5,216(sp)
   4201c:	d8802504 	addi	r2,sp,148
   42020:	d9002c17 	ldw	r4,176(sp)
   42024:	d8800215 	stw	r2,8(sp)
   42028:	d8802604 	addi	r2,sp,152
   4202c:	d8c00015 	stw	r3,0(sp)
   42030:	d8800115 	stw	r2,4(sp)
   42034:	01c00084 	movi	r7,2
   42038:	980d883a 	mov	r6,r19
   4203c:	d8c03c15 	stw	r3,240(sp)
   42040:	da003d15 	stw	r8,244(sp)
   42044:	0042f480 	call	42f48 <_dtoa_r>
   42048:	1021883a 	mov	r16,r2
   4204c:	008019c4 	movi	r2,103
   42050:	d8c03c17 	ldw	r3,240(sp)
   42054:	da003d17 	ldw	r8,244(sp)
   42058:	88817126 	beq	r17,r2,42620 <___vfprintf_internal_r+0x1cfc>
   4205c:	008011c4 	movi	r2,71
   42060:	88829226 	beq	r17,r2,42aac <___vfprintf_internal_r+0x2188>
   42064:	80f9883a 	add	fp,r16,r3
   42068:	d9003617 	ldw	r4,216(sp)
   4206c:	000d883a 	mov	r6,zero
   42070:	000f883a 	mov	r7,zero
   42074:	980b883a 	mov	r5,r19
   42078:	da003d15 	stw	r8,244(sp)
   4207c:	004bb4c0 	call	4bb4c <__eqdf2>
   42080:	da003d17 	ldw	r8,244(sp)
   42084:	10018d26 	beq	r2,zero,426bc <___vfprintf_internal_r+0x1d98>
   42088:	d8802117 	ldw	r2,132(sp)
   4208c:	1700062e 	bgeu	r2,fp,420a8 <___vfprintf_internal_r+0x1784>
   42090:	01000c04 	movi	r4,48
   42094:	10c00044 	addi	r3,r2,1
   42098:	d8c02115 	stw	r3,132(sp)
   4209c:	11000005 	stb	r4,0(r2)
   420a0:	d8802117 	ldw	r2,132(sp)
   420a4:	173ffb36 	bltu	r2,fp,42094 <__alt_data_end+0xfffdaf94>
   420a8:	1405c83a 	sub	r2,r2,r16
   420ac:	d8803315 	stw	r2,204(sp)
   420b0:	008011c4 	movi	r2,71
   420b4:	b0817626 	beq	r22,r2,42690 <___vfprintf_internal_r+0x1d6c>
   420b8:	00801944 	movi	r2,101
   420bc:	1442810e 	bge	r2,r17,42ac4 <___vfprintf_internal_r+0x21a0>
   420c0:	d8c02617 	ldw	r3,152(sp)
   420c4:	00801984 	movi	r2,102
   420c8:	d8c03215 	stw	r3,200(sp)
   420cc:	8881fe26 	beq	r17,r2,428c8 <___vfprintf_internal_r+0x1fa4>
   420d0:	d8c03217 	ldw	r3,200(sp)
   420d4:	d9003317 	ldw	r4,204(sp)
   420d8:	1901dd16 	blt	r3,r4,42850 <___vfprintf_internal_r+0x1f2c>
   420dc:	9480004c 	andi	r18,r18,1
   420e0:	90022b1e 	bne	r18,zero,42990 <___vfprintf_internal_r+0x206c>
   420e4:	1805883a 	mov	r2,r3
   420e8:	18028016 	blt	r3,zero,42aec <___vfprintf_internal_r+0x21c8>
   420ec:	d8c03217 	ldw	r3,200(sp)
   420f0:	044019c4 	movi	r17,103
   420f4:	d8c02e15 	stw	r3,184(sp)
   420f8:	df002a07 	ldb	fp,168(sp)
   420fc:	e001531e 	bne	fp,zero,4264c <___vfprintf_internal_r+0x1d28>
   42100:	df002783 	ldbu	fp,158(sp)
   42104:	d8802a15 	stw	r2,168(sp)
   42108:	dc802b17 	ldw	r18,172(sp)
   4210c:	d8002915 	stw	zero,164(sp)
   42110:	003bd106 	br	41058 <__alt_data_end+0xfffd9f58>
   42114:	d8802d17 	ldw	r2,180(sp)
   42118:	d8c02d17 	ldw	r3,180(sp)
   4211c:	d9002d17 	ldw	r4,180(sp)
   42120:	10800017 	ldw	r2,0(r2)
   42124:	18c00117 	ldw	r3,4(r3)
   42128:	21000204 	addi	r4,r4,8
   4212c:	d8803615 	stw	r2,216(sp)
   42130:	d8c03815 	stw	r3,224(sp)
   42134:	d9002d15 	stw	r4,180(sp)
   42138:	003b7506 	br	40f10 <__alt_data_end+0xfffd9e10>
   4213c:	ac400007 	ldb	r17,0(r21)
   42140:	003a5906 	br	40aa8 <__alt_data_end+0xfffd99a8>
   42144:	9080100c 	andi	r2,r18,64
   42148:	1000a826 	beq	r2,zero,423ec <___vfprintf_internal_r+0x1ac8>
   4214c:	d9002d17 	ldw	r4,180(sp)
   42150:	002d883a 	mov	r22,zero
   42154:	24c0000b 	ldhu	r19,0(r4)
   42158:	21000104 	addi	r4,r4,4
   4215c:	d9002d15 	stw	r4,180(sp)
   42160:	003ccb06 	br	41490 <__alt_data_end+0xfffda390>
   42164:	d8c02d17 	ldw	r3,180(sp)
   42168:	d9002917 	ldw	r4,164(sp)
   4216c:	002d883a 	mov	r22,zero
   42170:	18800104 	addi	r2,r3,4
   42174:	1cc00017 	ldw	r19,0(r3)
   42178:	203ebb0e 	bge	r4,zero,41c68 <__alt_data_end+0xfffdab68>
   4217c:	003ef106 	br	41d44 <__alt_data_end+0xfffdac44>
   42180:	9080040c 	andi	r2,r18,16
   42184:	1000921e 	bne	r2,zero,423d0 <___vfprintf_internal_r+0x1aac>
   42188:	9480100c 	andi	r18,r18,64
   4218c:	90013926 	beq	r18,zero,42674 <___vfprintf_internal_r+0x1d50>
   42190:	d9002d17 	ldw	r4,180(sp)
   42194:	d9402f17 	ldw	r5,188(sp)
   42198:	20800017 	ldw	r2,0(r4)
   4219c:	21000104 	addi	r4,r4,4
   421a0:	d9002d15 	stw	r4,180(sp)
   421a4:	1140000d 	sth	r5,0(r2)
   421a8:	003a1606 	br	40a04 <__alt_data_end+0xfffd9904>
   421ac:	9080100c 	andi	r2,r18,64
   421b0:	10008026 	beq	r2,zero,423b4 <___vfprintf_internal_r+0x1a90>
   421b4:	d8c02d17 	ldw	r3,180(sp)
   421b8:	1cc0000f 	ldh	r19,0(r3)
   421bc:	18c00104 	addi	r3,r3,4
   421c0:	d8c02d15 	stw	r3,180(sp)
   421c4:	982dd7fa 	srai	r22,r19,31
   421c8:	b005883a 	mov	r2,r22
   421cc:	003b1f06 	br	40e4c <__alt_data_end+0xfffd9d4c>
   421d0:	9080100c 	andi	r2,r18,64
   421d4:	d8002785 	stb	zero,158(sp)
   421d8:	10008a1e 	bne	r2,zero,42404 <___vfprintf_internal_r+0x1ae0>
   421dc:	d9402d17 	ldw	r5,180(sp)
   421e0:	d8c02917 	ldw	r3,164(sp)
   421e4:	002d883a 	mov	r22,zero
   421e8:	28800104 	addi	r2,r5,4
   421ec:	2cc00017 	ldw	r19,0(r5)
   421f0:	183e4b0e 	bge	r3,zero,41b20 <__alt_data_end+0xfffdaa20>
   421f4:	9d86b03a 	or	r3,r19,r22
   421f8:	d8802d15 	stw	r2,180(sp)
   421fc:	183e4c1e 	bne	r3,zero,41b30 <__alt_data_end+0xfffdaa30>
   42200:	0039883a 	mov	fp,zero
   42204:	0005883a 	mov	r2,zero
   42208:	003d4006 	br	4170c <__alt_data_end+0xfffda60c>
   4220c:	01400174 	movhi	r5,5
   42210:	297e7a84 	addi	r5,r5,-1558
   42214:	d9402b15 	stw	r5,172(sp)
   42218:	d9402b17 	ldw	r5,172(sp)
   4221c:	1c47883a 	add	r3,r3,r17
   42220:	10800044 	addi	r2,r2,1
   42224:	41400015 	stw	r5,0(r8)
   42228:	44400115 	stw	r17,4(r8)
   4222c:	d8c02015 	stw	r3,128(sp)
   42230:	d8801f15 	stw	r2,124(sp)
   42234:	010001c4 	movi	r4,7
   42238:	20bec816 	blt	r4,r2,41d5c <__alt_data_end+0xfffdac5c>
   4223c:	42000204 	addi	r8,r8,8
   42240:	003ecd06 	br	41d78 <__alt_data_end+0xfffdac78>
   42244:	d9002917 	ldw	r4,164(sp)
   42248:	d8002785 	stb	zero,158(sp)
   4224c:	203d2d16 	blt	r4,zero,41704 <__alt_data_end+0xfffda604>
   42250:	00bfdfc4 	movi	r2,-129
   42254:	90a4703a 	and	r18,r18,r2
   42258:	003a9106 	br	40ca0 <__alt_data_end+0xfffd9ba0>
   4225c:	01000174 	movhi	r4,5
   42260:	213e7a84 	addi	r4,r4,-1558
   42264:	d9002b15 	stw	r4,172(sp)
   42268:	003c0c06 	br	4129c <__alt_data_end+0xfffda19c>
   4226c:	d9002c17 	ldw	r4,176(sp)
   42270:	d9801e04 	addi	r6,sp,120
   42274:	b80b883a 	mov	r5,r23
   42278:	00480880 	call	48088 <__sprint_r>
   4227c:	103aab1e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   42280:	d8c02017 	ldw	r3,128(sp)
   42284:	da000404 	addi	r8,sp,16
   42288:	003d4106 	br	41790 <__alt_data_end+0xfffda690>
   4228c:	d8801f17 	ldw	r2,124(sp)
   42290:	01400174 	movhi	r5,5
   42294:	01000044 	movi	r4,1
   42298:	18c00044 	addi	r3,r3,1
   4229c:	10800044 	addi	r2,r2,1
   422a0:	297e7a04 	addi	r5,r5,-1560
   422a4:	41000115 	stw	r4,4(r8)
   422a8:	41400015 	stw	r5,0(r8)
   422ac:	d8c02015 	stw	r3,128(sp)
   422b0:	d8801f15 	stw	r2,124(sp)
   422b4:	010001c4 	movi	r4,7
   422b8:	20805c16 	blt	r4,r2,4242c <___vfprintf_internal_r+0x1b08>
   422bc:	42000204 	addi	r8,r8,8
   422c0:	8800041e 	bne	r17,zero,422d4 <___vfprintf_internal_r+0x19b0>
   422c4:	d8803317 	ldw	r2,204(sp)
   422c8:	1000021e 	bne	r2,zero,422d4 <___vfprintf_internal_r+0x19b0>
   422cc:	9080004c 	andi	r2,r18,1
   422d0:	103c0926 	beq	r2,zero,412f8 <__alt_data_end+0xfffda1f8>
   422d4:	d9003717 	ldw	r4,220(sp)
   422d8:	d8801f17 	ldw	r2,124(sp)
   422dc:	d9403417 	ldw	r5,208(sp)
   422e0:	20c7883a 	add	r3,r4,r3
   422e4:	10800044 	addi	r2,r2,1
   422e8:	41000115 	stw	r4,4(r8)
   422ec:	41400015 	stw	r5,0(r8)
   422f0:	d8c02015 	stw	r3,128(sp)
   422f4:	d8801f15 	stw	r2,124(sp)
   422f8:	010001c4 	movi	r4,7
   422fc:	20812116 	blt	r4,r2,42784 <___vfprintf_internal_r+0x1e60>
   42300:	42000204 	addi	r8,r8,8
   42304:	0463c83a 	sub	r17,zero,r17
   42308:	0440730e 	bge	zero,r17,424d8 <___vfprintf_internal_r+0x1bb4>
   4230c:	05800404 	movi	r22,16
   42310:	b440860e 	bge	r22,r17,4252c <___vfprintf_internal_r+0x1c08>
   42314:	01400174 	movhi	r5,5
   42318:	297e7a84 	addi	r5,r5,-1558
   4231c:	d9402b15 	stw	r5,172(sp)
   42320:	070001c4 	movi	fp,7
   42324:	dcc02c17 	ldw	r19,176(sp)
   42328:	00000306 	br	42338 <___vfprintf_internal_r+0x1a14>
   4232c:	42000204 	addi	r8,r8,8
   42330:	8c7ffc04 	addi	r17,r17,-16
   42334:	b440800e 	bge	r22,r17,42538 <___vfprintf_internal_r+0x1c14>
   42338:	18c00404 	addi	r3,r3,16
   4233c:	10800044 	addi	r2,r2,1
   42340:	45000015 	stw	r20,0(r8)
   42344:	45800115 	stw	r22,4(r8)
   42348:	d8c02015 	stw	r3,128(sp)
   4234c:	d8801f15 	stw	r2,124(sp)
   42350:	e0bff60e 	bge	fp,r2,4232c <__alt_data_end+0xfffdb22c>
   42354:	d9801e04 	addi	r6,sp,120
   42358:	b80b883a 	mov	r5,r23
   4235c:	9809883a 	mov	r4,r19
   42360:	00480880 	call	48088 <__sprint_r>
   42364:	103a711e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   42368:	d8c02017 	ldw	r3,128(sp)
   4236c:	d8801f17 	ldw	r2,124(sp)
   42370:	da000404 	addi	r8,sp,16
   42374:	003fee06 	br	42330 <__alt_data_end+0xfffdb230>
   42378:	00bfffc4 	movi	r2,-1
   4237c:	003a6f06 	br	40d3c <__alt_data_end+0xfffd9c3c>
   42380:	008011c4 	movi	r2,71
   42384:	1440b816 	blt	r2,r17,42668 <___vfprintf_internal_r+0x1d44>
   42388:	04000174 	movhi	r16,5
   4238c:	843e6c04 	addi	r16,r16,-1616
   42390:	00c000c4 	movi	r3,3
   42394:	00bfdfc4 	movi	r2,-129
   42398:	d8c02a15 	stw	r3,168(sp)
   4239c:	90a4703a 	and	r18,r18,r2
   423a0:	df002783 	ldbu	fp,158(sp)
   423a4:	d8c02e15 	stw	r3,184(sp)
   423a8:	d8002915 	stw	zero,164(sp)
   423ac:	d8003215 	stw	zero,200(sp)
   423b0:	003b2906 	br	41058 <__alt_data_end+0xfffd9f58>
   423b4:	d9002d17 	ldw	r4,180(sp)
   423b8:	24c00017 	ldw	r19,0(r4)
   423bc:	21000104 	addi	r4,r4,4
   423c0:	d9002d15 	stw	r4,180(sp)
   423c4:	982dd7fa 	srai	r22,r19,31
   423c8:	b005883a 	mov	r2,r22
   423cc:	003a9f06 	br	40e4c <__alt_data_end+0xfffd9d4c>
   423d0:	d9402d17 	ldw	r5,180(sp)
   423d4:	d8c02f17 	ldw	r3,188(sp)
   423d8:	28800017 	ldw	r2,0(r5)
   423dc:	29400104 	addi	r5,r5,4
   423e0:	d9402d15 	stw	r5,180(sp)
   423e4:	10c00015 	stw	r3,0(r2)
   423e8:	00398606 	br	40a04 <__alt_data_end+0xfffd9904>
   423ec:	d9402d17 	ldw	r5,180(sp)
   423f0:	002d883a 	mov	r22,zero
   423f4:	2cc00017 	ldw	r19,0(r5)
   423f8:	29400104 	addi	r5,r5,4
   423fc:	d9402d15 	stw	r5,180(sp)
   42400:	003c2306 	br	41490 <__alt_data_end+0xfffda390>
   42404:	d8c02d17 	ldw	r3,180(sp)
   42408:	d9002917 	ldw	r4,164(sp)
   4240c:	002d883a 	mov	r22,zero
   42410:	18800104 	addi	r2,r3,4
   42414:	1cc0000b 	ldhu	r19,0(r3)
   42418:	203dc10e 	bge	r4,zero,41b20 <__alt_data_end+0xfffdaa20>
   4241c:	003f7506 	br	421f4 <__alt_data_end+0xfffdb0f4>
   42420:	04000174 	movhi	r16,5
   42424:	843e6a04 	addi	r16,r16,-1624
   42428:	003acc06 	br	40f5c <__alt_data_end+0xfffd9e5c>
   4242c:	d9002c17 	ldw	r4,176(sp)
   42430:	d9801e04 	addi	r6,sp,120
   42434:	b80b883a 	mov	r5,r23
   42438:	00480880 	call	48088 <__sprint_r>
   4243c:	103a3b1e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   42440:	dc402617 	ldw	r17,152(sp)
   42444:	d8c02017 	ldw	r3,128(sp)
   42448:	da000404 	addi	r8,sp,16
   4244c:	003f9c06 	br	422c0 <__alt_data_end+0xfffdb1c0>
   42450:	ac400043 	ldbu	r17,1(r21)
   42454:	94800814 	ori	r18,r18,32
   42458:	ad400044 	addi	r21,r21,1
   4245c:	8c403fcc 	andi	r17,r17,255
   42460:	8c40201c 	xori	r17,r17,128
   42464:	8c7fe004 	addi	r17,r17,-128
   42468:	00398f06 	br	40aa8 <__alt_data_end+0xfffd99a8>
   4246c:	d8c02d15 	stw	r3,180(sp)
   42470:	0039883a 	mov	fp,zero
   42474:	003e3506 	br	41d4c <__alt_data_end+0xfffdac4c>
   42478:	d9002c17 	ldw	r4,176(sp)
   4247c:	d9801e04 	addi	r6,sp,120
   42480:	b80b883a 	mov	r5,r23
   42484:	00480880 	call	48088 <__sprint_r>
   42488:	103a281e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   4248c:	d8c02017 	ldw	r3,128(sp)
   42490:	da000404 	addi	r8,sp,16
   42494:	003cd006 	br	417d8 <__alt_data_end+0xfffda6d8>
   42498:	8009883a 	mov	r4,r16
   4249c:	da003d15 	stw	r8,244(sp)
   424a0:	004088c0 	call	4088c <strlen>
   424a4:	d8802e15 	stw	r2,184(sp)
   424a8:	da003d17 	ldw	r8,244(sp)
   424ac:	103c340e 	bge	r2,zero,41580 <__alt_data_end+0xfffda480>
   424b0:	0005883a 	mov	r2,zero
   424b4:	003c3206 	br	41580 <__alt_data_end+0xfffda480>
   424b8:	d9002c17 	ldw	r4,176(sp)
   424bc:	d9801e04 	addi	r6,sp,120
   424c0:	b80b883a 	mov	r5,r23
   424c4:	00480880 	call	48088 <__sprint_r>
   424c8:	103a181e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   424cc:	d8c02017 	ldw	r3,128(sp)
   424d0:	d8801f17 	ldw	r2,124(sp)
   424d4:	da000404 	addi	r8,sp,16
   424d8:	d9403317 	ldw	r5,204(sp)
   424dc:	10800044 	addi	r2,r2,1
   424e0:	44000015 	stw	r16,0(r8)
   424e4:	28c7883a 	add	r3,r5,r3
   424e8:	003b7d06 	br	412e0 <__alt_data_end+0xfffda1e0>
   424ec:	01000174 	movhi	r4,5
   424f0:	213e7e84 	addi	r4,r4,-1542
   424f4:	d9003515 	stw	r4,212(sp)
   424f8:	003b1406 	br	4114c <__alt_data_end+0xfffda04c>
   424fc:	013fffc4 	movi	r4,-1
   42500:	003a3506 	br	40dd8 <__alt_data_end+0xfffd9cd8>
   42504:	0023883a 	mov	r17,zero
   42508:	003d9d06 	br	41b80 <__alt_data_end+0xfffdaa80>
   4250c:	d9002c17 	ldw	r4,176(sp)
   42510:	d9801e04 	addi	r6,sp,120
   42514:	b80b883a 	mov	r5,r23
   42518:	00480880 	call	48088 <__sprint_r>
   4251c:	103a031e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   42520:	d8c02017 	ldw	r3,128(sp)
   42524:	da000404 	addi	r8,sp,16
   42528:	003d9406 	br	41b7c <__alt_data_end+0xfffdaa7c>
   4252c:	01000174 	movhi	r4,5
   42530:	213e7a84 	addi	r4,r4,-1558
   42534:	d9002b15 	stw	r4,172(sp)
   42538:	d9002b17 	ldw	r4,172(sp)
   4253c:	1c47883a 	add	r3,r3,r17
   42540:	10800044 	addi	r2,r2,1
   42544:	41000015 	stw	r4,0(r8)
   42548:	44400115 	stw	r17,4(r8)
   4254c:	d8c02015 	stw	r3,128(sp)
   42550:	d8801f15 	stw	r2,124(sp)
   42554:	010001c4 	movi	r4,7
   42558:	20bfd716 	blt	r4,r2,424b8 <__alt_data_end+0xfffdb3b8>
   4255c:	42000204 	addi	r8,r8,8
   42560:	003fdd06 	br	424d8 <__alt_data_end+0xfffdb3d8>
   42564:	d9002c17 	ldw	r4,176(sp)
   42568:	d9801e04 	addi	r6,sp,120
   4256c:	b80b883a 	mov	r5,r23
   42570:	00480880 	call	48088 <__sprint_r>
   42574:	1039ed1e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   42578:	d8802617 	ldw	r2,152(sp)
   4257c:	d8c02017 	ldw	r3,128(sp)
   42580:	da000404 	addi	r8,sp,16
   42584:	003e1006 	br	41dc8 <__alt_data_end+0xfffdacc8>
   42588:	00800044 	movi	r2,1
   4258c:	10803fcc 	andi	r2,r2,255
   42590:	00c00044 	movi	r3,1
   42594:	10fa3526 	beq	r2,r3,40e6c <__alt_data_end+0xfffd9d6c>
   42598:	00c00084 	movi	r3,2
   4259c:	10fbcb26 	beq	r2,r3,414cc <__alt_data_end+0xfffda3cc>
   425a0:	003a8f06 	br	40fe0 <__alt_data_end+0xfffd9ee0>
   425a4:	01000174 	movhi	r4,5
   425a8:	213e7e84 	addi	r4,r4,-1542
   425ac:	d9003515 	stw	r4,212(sp)
   425b0:	003b7606 	br	4138c <__alt_data_end+0xfffda28c>
   425b4:	d8802917 	ldw	r2,164(sp)
   425b8:	00c00184 	movi	r3,6
   425bc:	1880012e 	bgeu	r3,r2,425c4 <___vfprintf_internal_r+0x1ca0>
   425c0:	1805883a 	mov	r2,r3
   425c4:	d8802e15 	stw	r2,184(sp)
   425c8:	1000ef16 	blt	r2,zero,42988 <___vfprintf_internal_r+0x2064>
   425cc:	04000174 	movhi	r16,5
   425d0:	d8802a15 	stw	r2,168(sp)
   425d4:	dcc02d15 	stw	r19,180(sp)
   425d8:	d8002915 	stw	zero,164(sp)
   425dc:	d8003215 	stw	zero,200(sp)
   425e0:	843e7804 	addi	r16,r16,-1568
   425e4:	0039883a 	mov	fp,zero
   425e8:	003aa206 	br	41074 <__alt_data_end+0xfffd9f74>
   425ec:	0021883a 	mov	r16,zero
   425f0:	003e0706 	br	41e10 <__alt_data_end+0xfffdad10>
   425f4:	d9002c17 	ldw	r4,176(sp)
   425f8:	d9801e04 	addi	r6,sp,120
   425fc:	b80b883a 	mov	r5,r23
   42600:	00480880 	call	48088 <__sprint_r>
   42604:	1039c91e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   42608:	d8802617 	ldw	r2,152(sp)
   4260c:	d9403317 	ldw	r5,204(sp)
   42610:	d8c02017 	ldw	r3,128(sp)
   42614:	da000404 	addi	r8,sp,16
   42618:	2885c83a 	sub	r2,r5,r2
   4261c:	003dfb06 	br	41e0c <__alt_data_end+0xfffdad0c>
   42620:	9080004c 	andi	r2,r18,1
   42624:	103e8f1e 	bne	r2,zero,42064 <__alt_data_end+0xfffdaf64>
   42628:	d8802117 	ldw	r2,132(sp)
   4262c:	003e9e06 	br	420a8 <__alt_data_end+0xfffdafa8>
   42630:	1025883a 	mov	r18,r2
   42634:	0039883a 	mov	fp,zero
   42638:	00800084 	movi	r2,2
   4263c:	003fd306 	br	4258c <__alt_data_end+0xfffdb48c>
   42640:	07000b44 	movi	fp,45
   42644:	df002785 	stb	fp,158(sp)
   42648:	003a4006 	br	40f4c <__alt_data_end+0xfffd9e4c>
   4264c:	00c00b44 	movi	r3,45
   42650:	d8c02785 	stb	r3,158(sp)
   42654:	d8802a15 	stw	r2,168(sp)
   42658:	dc802b17 	ldw	r18,172(sp)
   4265c:	d8002915 	stw	zero,164(sp)
   42660:	07000b44 	movi	fp,45
   42664:	003a8006 	br	41068 <__alt_data_end+0xfffd9f68>
   42668:	04000174 	movhi	r16,5
   4266c:	843e6d04 	addi	r16,r16,-1612
   42670:	003f4706 	br	42390 <__alt_data_end+0xfffdb290>
   42674:	d8c02d17 	ldw	r3,180(sp)
   42678:	d9002f17 	ldw	r4,188(sp)
   4267c:	18800017 	ldw	r2,0(r3)
   42680:	18c00104 	addi	r3,r3,4
   42684:	d8c02d15 	stw	r3,180(sp)
   42688:	11000015 	stw	r4,0(r2)
   4268c:	0038dd06 	br	40a04 <__alt_data_end+0xfffd9904>
   42690:	dd802617 	ldw	r22,152(sp)
   42694:	00bfff44 	movi	r2,-3
   42698:	b0801c16 	blt	r22,r2,4270c <___vfprintf_internal_r+0x1de8>
   4269c:	d9402917 	ldw	r5,164(sp)
   426a0:	2d801a16 	blt	r5,r22,4270c <___vfprintf_internal_r+0x1de8>
   426a4:	dd803215 	stw	r22,200(sp)
   426a8:	003e8906 	br	420d0 <__alt_data_end+0xfffdafd0>
   426ac:	01000174 	movhi	r4,5
   426b0:	213e7a84 	addi	r4,r4,-1558
   426b4:	d9002b15 	stw	r4,172(sp)
   426b8:	003c9106 	br	41900 <__alt_data_end+0xfffda800>
   426bc:	e005883a 	mov	r2,fp
   426c0:	003e7906 	br	420a8 <__alt_data_end+0xfffdafa8>
   426c4:	d9402917 	ldw	r5,164(sp)
   426c8:	df002783 	ldbu	fp,158(sp)
   426cc:	dcc02d15 	stw	r19,180(sp)
   426d0:	d9402a15 	stw	r5,168(sp)
   426d4:	d9402e15 	stw	r5,184(sp)
   426d8:	d8002915 	stw	zero,164(sp)
   426dc:	d8003215 	stw	zero,200(sp)
   426e0:	003a5d06 	br	41058 <__alt_data_end+0xfffd9f58>
   426e4:	9080004c 	andi	r2,r18,1
   426e8:	0039883a 	mov	fp,zero
   426ec:	10000426 	beq	r2,zero,42700 <___vfprintf_internal_r+0x1ddc>
   426f0:	00800c04 	movi	r2,48
   426f4:	dc001dc4 	addi	r16,sp,119
   426f8:	d8801dc5 	stb	r2,119(sp)
   426fc:	003b8006 	br	41500 <__alt_data_end+0xfffda400>
   42700:	d8002e15 	stw	zero,184(sp)
   42704:	dc001e04 	addi	r16,sp,120
   42708:	003a4d06 	br	41040 <__alt_data_end+0xfffd9f40>
   4270c:	8c7fff84 	addi	r17,r17,-2
   42710:	b5bfffc4 	addi	r22,r22,-1
   42714:	dd802615 	stw	r22,152(sp)
   42718:	dc4022c5 	stb	r17,139(sp)
   4271c:	b000bf16 	blt	r22,zero,42a1c <___vfprintf_internal_r+0x20f8>
   42720:	00800ac4 	movi	r2,43
   42724:	d8802305 	stb	r2,140(sp)
   42728:	00800244 	movi	r2,9
   4272c:	15807016 	blt	r2,r22,428f0 <___vfprintf_internal_r+0x1fcc>
   42730:	00800c04 	movi	r2,48
   42734:	b5800c04 	addi	r22,r22,48
   42738:	d8802345 	stb	r2,141(sp)
   4273c:	dd802385 	stb	r22,142(sp)
   42740:	d88023c4 	addi	r2,sp,143
   42744:	df0022c4 	addi	fp,sp,139
   42748:	d8c03317 	ldw	r3,204(sp)
   4274c:	1739c83a 	sub	fp,r2,fp
   42750:	d9003317 	ldw	r4,204(sp)
   42754:	e0c7883a 	add	r3,fp,r3
   42758:	df003a15 	stw	fp,232(sp)
   4275c:	d8c02e15 	stw	r3,184(sp)
   42760:	00800044 	movi	r2,1
   42764:	1100b30e 	bge	r2,r4,42a34 <___vfprintf_internal_r+0x2110>
   42768:	d8c02e17 	ldw	r3,184(sp)
   4276c:	18c00044 	addi	r3,r3,1
   42770:	d8c02e15 	stw	r3,184(sp)
   42774:	1805883a 	mov	r2,r3
   42778:	1800ac16 	blt	r3,zero,42a2c <___vfprintf_internal_r+0x2108>
   4277c:	d8003215 	stw	zero,200(sp)
   42780:	003e5d06 	br	420f8 <__alt_data_end+0xfffdaff8>
   42784:	d9002c17 	ldw	r4,176(sp)
   42788:	d9801e04 	addi	r6,sp,120
   4278c:	b80b883a 	mov	r5,r23
   42790:	00480880 	call	48088 <__sprint_r>
   42794:	1039651e 	bne	r2,zero,40d2c <__alt_data_end+0xfffd9c2c>
   42798:	dc402617 	ldw	r17,152(sp)
   4279c:	d8c02017 	ldw	r3,128(sp)
   427a0:	d8801f17 	ldw	r2,124(sp)
   427a4:	da000404 	addi	r8,sp,16
   427a8:	003ed606 	br	42304 <__alt_data_end+0xfffdb204>
   427ac:	582b883a 	mov	r21,r11
   427b0:	d8002915 	stw	zero,164(sp)
   427b4:	0038bd06 	br	40aac <__alt_data_end+0xfffd99ac>
   427b8:	d8802917 	ldw	r2,164(sp)
   427bc:	103e071e 	bne	r2,zero,41fdc <__alt_data_end+0xfffdaedc>
   427c0:	dc002915 	stw	r16,164(sp)
   427c4:	003e0506 	br	41fdc <__alt_data_end+0xfffdaedc>
   427c8:	d9002917 	ldw	r4,164(sp)
   427cc:	20c00044 	addi	r3,r4,1
   427d0:	003e0f06 	br	42010 <__alt_data_end+0xfffdaf10>
   427d4:	01400184 	movi	r5,6
   427d8:	d9402915 	stw	r5,164(sp)
   427dc:	003dff06 	br	41fdc <__alt_data_end+0xfffdaedc>
   427e0:	d8802104 	addi	r2,sp,132
   427e4:	d8800315 	stw	r2,12(sp)
   427e8:	d8802504 	addi	r2,sp,148
   427ec:	d8800215 	stw	r2,8(sp)
   427f0:	d8802604 	addi	r2,sp,152
   427f4:	d8800115 	stw	r2,4(sp)
   427f8:	d8802917 	ldw	r2,164(sp)
   427fc:	d9403617 	ldw	r5,216(sp)
   42800:	d9002c17 	ldw	r4,176(sp)
   42804:	d8800015 	stw	r2,0(sp)
   42808:	01c000c4 	movi	r7,3
   4280c:	980d883a 	mov	r6,r19
   42810:	da003d15 	stw	r8,244(sp)
   42814:	0042f480 	call	42f48 <_dtoa_r>
   42818:	d8c02917 	ldw	r3,164(sp)
   4281c:	da003d17 	ldw	r8,244(sp)
   42820:	1021883a 	mov	r16,r2
   42824:	10f9883a 	add	fp,r2,r3
   42828:	81000007 	ldb	r4,0(r16)
   4282c:	00800c04 	movi	r2,48
   42830:	20805e26 	beq	r4,r2,429ac <___vfprintf_internal_r+0x2088>
   42834:	d8c02617 	ldw	r3,152(sp)
   42838:	e0f9883a 	add	fp,fp,r3
   4283c:	003e0a06 	br	42068 <__alt_data_end+0xfffdaf68>
   42840:	00c00b44 	movi	r3,45
   42844:	24e0003c 	xorhi	r19,r4,32768
   42848:	d8c02a05 	stb	r3,168(sp)
   4284c:	003de906 	br	41ff4 <__alt_data_end+0xfffdaef4>
   42850:	d8c03217 	ldw	r3,200(sp)
   42854:	00c07a0e 	bge	zero,r3,42a40 <___vfprintf_internal_r+0x211c>
   42858:	00800044 	movi	r2,1
   4285c:	d9003317 	ldw	r4,204(sp)
   42860:	1105883a 	add	r2,r2,r4
   42864:	d8802e15 	stw	r2,184(sp)
   42868:	10004e16 	blt	r2,zero,429a4 <___vfprintf_internal_r+0x2080>
   4286c:	044019c4 	movi	r17,103
   42870:	003e2106 	br	420f8 <__alt_data_end+0xfffdaff8>
   42874:	d9002917 	ldw	r4,164(sp)
   42878:	d8802104 	addi	r2,sp,132
   4287c:	d8800315 	stw	r2,12(sp)
   42880:	d9000015 	stw	r4,0(sp)
   42884:	d8802504 	addi	r2,sp,148
   42888:	d9403617 	ldw	r5,216(sp)
   4288c:	d9002c17 	ldw	r4,176(sp)
   42890:	d8800215 	stw	r2,8(sp)
   42894:	d8802604 	addi	r2,sp,152
   42898:	d8800115 	stw	r2,4(sp)
   4289c:	01c000c4 	movi	r7,3
   428a0:	980d883a 	mov	r6,r19
   428a4:	da003d15 	stw	r8,244(sp)
   428a8:	0042f480 	call	42f48 <_dtoa_r>
   428ac:	d8c02917 	ldw	r3,164(sp)
   428b0:	da003d17 	ldw	r8,244(sp)
   428b4:	1021883a 	mov	r16,r2
   428b8:	00801184 	movi	r2,70
   428bc:	80f9883a 	add	fp,r16,r3
   428c0:	88bfd926 	beq	r17,r2,42828 <__alt_data_end+0xfffdb728>
   428c4:	003de806 	br	42068 <__alt_data_end+0xfffdaf68>
   428c8:	d9002917 	ldw	r4,164(sp)
   428cc:	00c04d0e 	bge	zero,r3,42a04 <___vfprintf_internal_r+0x20e0>
   428d0:	2000441e 	bne	r4,zero,429e4 <___vfprintf_internal_r+0x20c0>
   428d4:	9480004c 	andi	r18,r18,1
   428d8:	9000421e 	bne	r18,zero,429e4 <___vfprintf_internal_r+0x20c0>
   428dc:	1805883a 	mov	r2,r3
   428e0:	18007016 	blt	r3,zero,42aa4 <___vfprintf_internal_r+0x2180>
   428e4:	d8c03217 	ldw	r3,200(sp)
   428e8:	d8c02e15 	stw	r3,184(sp)
   428ec:	003e0206 	br	420f8 <__alt_data_end+0xfffdaff8>
   428f0:	df0022c4 	addi	fp,sp,139
   428f4:	dc002915 	stw	r16,164(sp)
   428f8:	4027883a 	mov	r19,r8
   428fc:	e021883a 	mov	r16,fp
   42900:	b009883a 	mov	r4,r22
   42904:	01400284 	movi	r5,10
   42908:	00405fc0 	call	405fc <__modsi3>
   4290c:	10800c04 	addi	r2,r2,48
   42910:	843fffc4 	addi	r16,r16,-1
   42914:	b009883a 	mov	r4,r22
   42918:	01400284 	movi	r5,10
   4291c:	80800005 	stb	r2,0(r16)
   42920:	00405780 	call	40578 <__divsi3>
   42924:	102d883a 	mov	r22,r2
   42928:	00800244 	movi	r2,9
   4292c:	15bff416 	blt	r2,r22,42900 <__alt_data_end+0xfffdb800>
   42930:	9811883a 	mov	r8,r19
   42934:	b0800c04 	addi	r2,r22,48
   42938:	8027883a 	mov	r19,r16
   4293c:	997fffc4 	addi	r5,r19,-1
   42940:	98bfffc5 	stb	r2,-1(r19)
   42944:	dc002917 	ldw	r16,164(sp)
   42948:	2f006a2e 	bgeu	r5,fp,42af4 <___vfprintf_internal_r+0x21d0>
   4294c:	d9c02384 	addi	r7,sp,142
   42950:	3ccfc83a 	sub	r7,r7,r19
   42954:	d9002344 	addi	r4,sp,141
   42958:	e1cf883a 	add	r7,fp,r7
   4295c:	00000106 	br	42964 <___vfprintf_internal_r+0x2040>
   42960:	28800003 	ldbu	r2,0(r5)
   42964:	20800005 	stb	r2,0(r4)
   42968:	21000044 	addi	r4,r4,1
   4296c:	29400044 	addi	r5,r5,1
   42970:	393ffb1e 	bne	r7,r4,42960 <__alt_data_end+0xfffdb860>
   42974:	d8802304 	addi	r2,sp,140
   42978:	14c5c83a 	sub	r2,r2,r19
   4297c:	d8c02344 	addi	r3,sp,141
   42980:	1885883a 	add	r2,r3,r2
   42984:	003f7006 	br	42748 <__alt_data_end+0xfffdb648>
   42988:	0005883a 	mov	r2,zero
   4298c:	003f0f06 	br	425cc <__alt_data_end+0xfffdb4cc>
   42990:	d8c03217 	ldw	r3,200(sp)
   42994:	18c00044 	addi	r3,r3,1
   42998:	d8c02e15 	stw	r3,184(sp)
   4299c:	1805883a 	mov	r2,r3
   429a0:	183fb20e 	bge	r3,zero,4286c <__alt_data_end+0xfffdb76c>
   429a4:	0005883a 	mov	r2,zero
   429a8:	003fb006 	br	4286c <__alt_data_end+0xfffdb76c>
   429ac:	d9003617 	ldw	r4,216(sp)
   429b0:	000d883a 	mov	r6,zero
   429b4:	000f883a 	mov	r7,zero
   429b8:	980b883a 	mov	r5,r19
   429bc:	d8c03c15 	stw	r3,240(sp)
   429c0:	da003d15 	stw	r8,244(sp)
   429c4:	004bb4c0 	call	4bb4c <__eqdf2>
   429c8:	d8c03c17 	ldw	r3,240(sp)
   429cc:	da003d17 	ldw	r8,244(sp)
   429d0:	103f9826 	beq	r2,zero,42834 <__alt_data_end+0xfffdb734>
   429d4:	00800044 	movi	r2,1
   429d8:	10c7c83a 	sub	r3,r2,r3
   429dc:	d8c02615 	stw	r3,152(sp)
   429e0:	003f9506 	br	42838 <__alt_data_end+0xfffdb738>
   429e4:	d9002917 	ldw	r4,164(sp)
   429e8:	d8c03217 	ldw	r3,200(sp)
   429ec:	20800044 	addi	r2,r4,1
   429f0:	1885883a 	add	r2,r3,r2
   429f4:	d8802e15 	stw	r2,184(sp)
   429f8:	103dbf0e 	bge	r2,zero,420f8 <__alt_data_end+0xfffdaff8>
   429fc:	0005883a 	mov	r2,zero
   42a00:	003dbd06 	br	420f8 <__alt_data_end+0xfffdaff8>
   42a04:	2000211e 	bne	r4,zero,42a8c <___vfprintf_internal_r+0x2168>
   42a08:	9480004c 	andi	r18,r18,1
   42a0c:	90001f1e 	bne	r18,zero,42a8c <___vfprintf_internal_r+0x2168>
   42a10:	00800044 	movi	r2,1
   42a14:	d8802e15 	stw	r2,184(sp)
   42a18:	003db706 	br	420f8 <__alt_data_end+0xfffdaff8>
   42a1c:	00800b44 	movi	r2,45
   42a20:	05adc83a 	sub	r22,zero,r22
   42a24:	d8802305 	stb	r2,140(sp)
   42a28:	003f3f06 	br	42728 <__alt_data_end+0xfffdb628>
   42a2c:	0005883a 	mov	r2,zero
   42a30:	003f5206 	br	4277c <__alt_data_end+0xfffdb67c>
   42a34:	90a4703a 	and	r18,r18,r2
   42a38:	903f4e26 	beq	r18,zero,42774 <__alt_data_end+0xfffdb674>
   42a3c:	003f4a06 	br	42768 <__alt_data_end+0xfffdb668>
   42a40:	00800084 	movi	r2,2
   42a44:	10c5c83a 	sub	r2,r2,r3
   42a48:	003f8406 	br	4285c <__alt_data_end+0xfffdb75c>
   42a4c:	d8802d17 	ldw	r2,180(sp)
   42a50:	d9002d17 	ldw	r4,180(sp)
   42a54:	ac400043 	ldbu	r17,1(r21)
   42a58:	10800017 	ldw	r2,0(r2)
   42a5c:	582b883a 	mov	r21,r11
   42a60:	d8802915 	stw	r2,164(sp)
   42a64:	20800104 	addi	r2,r4,4
   42a68:	d9002917 	ldw	r4,164(sp)
   42a6c:	d8802d15 	stw	r2,180(sp)
   42a70:	203e7a0e 	bge	r4,zero,4245c <__alt_data_end+0xfffdb35c>
   42a74:	8c403fcc 	andi	r17,r17,255
   42a78:	00bfffc4 	movi	r2,-1
   42a7c:	8c40201c 	xori	r17,r17,128
   42a80:	d8802915 	stw	r2,164(sp)
   42a84:	8c7fe004 	addi	r17,r17,-128
   42a88:	00380706 	br	40aa8 <__alt_data_end+0xfffd99a8>
   42a8c:	d8c02917 	ldw	r3,164(sp)
   42a90:	18c00084 	addi	r3,r3,2
   42a94:	d8c02e15 	stw	r3,184(sp)
   42a98:	1805883a 	mov	r2,r3
   42a9c:	183d960e 	bge	r3,zero,420f8 <__alt_data_end+0xfffdaff8>
   42aa0:	003fd606 	br	429fc <__alt_data_end+0xfffdb8fc>
   42aa4:	0005883a 	mov	r2,zero
   42aa8:	003f8e06 	br	428e4 <__alt_data_end+0xfffdb7e4>
   42aac:	9080004c 	andi	r2,r18,1
   42ab0:	103f811e 	bne	r2,zero,428b8 <__alt_data_end+0xfffdb7b8>
   42ab4:	d8802117 	ldw	r2,132(sp)
   42ab8:	1405c83a 	sub	r2,r2,r16
   42abc:	d8803315 	stw	r2,204(sp)
   42ac0:	b47ef326 	beq	r22,r17,42690 <__alt_data_end+0xfffdb590>
   42ac4:	dd802617 	ldw	r22,152(sp)
   42ac8:	003f1106 	br	42710 <__alt_data_end+0xfffdb610>
   42acc:	d9c02785 	stb	r7,158(sp)
   42ad0:	00390406 	br	40ee4 <__alt_data_end+0xfffd9de4>
   42ad4:	d9c02785 	stb	r7,158(sp)
   42ad8:	0038d306 	br	40e28 <__alt_data_end+0xfffd9d28>
   42adc:	d9c02785 	stb	r7,158(sp)
   42ae0:	003a6106 	br	41468 <__alt_data_end+0xfffda368>
   42ae4:	d9c02785 	stb	r7,158(sp)
   42ae8:	003af806 	br	416cc <__alt_data_end+0xfffda5cc>
   42aec:	0005883a 	mov	r2,zero
   42af0:	003d7e06 	br	420ec <__alt_data_end+0xfffdafec>
   42af4:	d8802344 	addi	r2,sp,141
   42af8:	003f1306 	br	42748 <__alt_data_end+0xfffdb648>
   42afc:	d9c02785 	stb	r7,158(sp)
   42b00:	00392306 	br	40f90 <__alt_data_end+0xfffd9e90>
   42b04:	d9c02785 	stb	r7,158(sp)
   42b08:	003aa906 	br	415b0 <__alt_data_end+0xfffda4b0>
   42b0c:	d9c02785 	stb	r7,158(sp)
   42b10:	003a3d06 	br	41408 <__alt_data_end+0xfffda308>
   42b14:	d9c02785 	stb	r7,158(sp)
   42b18:	003aca06 	br	41644 <__alt_data_end+0xfffda544>

00042b1c <__vfprintf_internal>:
   42b1c:	00800174 	movhi	r2,5
   42b20:	1085d304 	addi	r2,r2,5964
   42b24:	300f883a 	mov	r7,r6
   42b28:	280d883a 	mov	r6,r5
   42b2c:	200b883a 	mov	r5,r4
   42b30:	11000017 	ldw	r4,0(r2)
   42b34:	00409241 	jmpi	40924 <___vfprintf_internal_r>

00042b38 <__sbprintf>:
   42b38:	2880030b 	ldhu	r2,12(r5)
   42b3c:	2ac01917 	ldw	r11,100(r5)
   42b40:	2a80038b 	ldhu	r10,14(r5)
   42b44:	2a400717 	ldw	r9,28(r5)
   42b48:	2a000917 	ldw	r8,36(r5)
   42b4c:	defee204 	addi	sp,sp,-1144
   42b50:	00c10004 	movi	r3,1024
   42b54:	dc011a15 	stw	r16,1128(sp)
   42b58:	10bfff4c 	andi	r2,r2,65533
   42b5c:	2821883a 	mov	r16,r5
   42b60:	d8cb883a 	add	r5,sp,r3
   42b64:	dc811c15 	stw	r18,1136(sp)
   42b68:	dc411b15 	stw	r17,1132(sp)
   42b6c:	dfc11d15 	stw	ra,1140(sp)
   42b70:	2025883a 	mov	r18,r4
   42b74:	d881030d 	sth	r2,1036(sp)
   42b78:	dac11915 	stw	r11,1124(sp)
   42b7c:	da81038d 	sth	r10,1038(sp)
   42b80:	da410715 	stw	r9,1052(sp)
   42b84:	da010915 	stw	r8,1060(sp)
   42b88:	dec10015 	stw	sp,1024(sp)
   42b8c:	dec10415 	stw	sp,1040(sp)
   42b90:	d8c10215 	stw	r3,1032(sp)
   42b94:	d8c10515 	stw	r3,1044(sp)
   42b98:	d8010615 	stw	zero,1048(sp)
   42b9c:	00409240 	call	40924 <___vfprintf_internal_r>
   42ba0:	1023883a 	mov	r17,r2
   42ba4:	10000416 	blt	r2,zero,42bb8 <__sbprintf+0x80>
   42ba8:	d9410004 	addi	r5,sp,1024
   42bac:	9009883a 	mov	r4,r18
   42bb0:	00447ec0 	call	447ec <_fflush_r>
   42bb4:	10000d1e 	bne	r2,zero,42bec <__sbprintf+0xb4>
   42bb8:	d881030b 	ldhu	r2,1036(sp)
   42bbc:	1080100c 	andi	r2,r2,64
   42bc0:	10000326 	beq	r2,zero,42bd0 <__sbprintf+0x98>
   42bc4:	8080030b 	ldhu	r2,12(r16)
   42bc8:	10801014 	ori	r2,r2,64
   42bcc:	8080030d 	sth	r2,12(r16)
   42bd0:	8805883a 	mov	r2,r17
   42bd4:	dfc11d17 	ldw	ra,1140(sp)
   42bd8:	dc811c17 	ldw	r18,1136(sp)
   42bdc:	dc411b17 	ldw	r17,1132(sp)
   42be0:	dc011a17 	ldw	r16,1128(sp)
   42be4:	dec11e04 	addi	sp,sp,1144
   42be8:	f800283a 	ret
   42bec:	047fffc4 	movi	r17,-1
   42bf0:	003ff106 	br	42bb8 <__alt_data_end+0xfffdbab8>

00042bf4 <__swsetup_r>:
   42bf4:	00800174 	movhi	r2,5
   42bf8:	defffd04 	addi	sp,sp,-12
   42bfc:	1085d304 	addi	r2,r2,5964
   42c00:	dc400115 	stw	r17,4(sp)
   42c04:	2023883a 	mov	r17,r4
   42c08:	11000017 	ldw	r4,0(r2)
   42c0c:	dc000015 	stw	r16,0(sp)
   42c10:	dfc00215 	stw	ra,8(sp)
   42c14:	2821883a 	mov	r16,r5
   42c18:	20000226 	beq	r4,zero,42c24 <__swsetup_r+0x30>
   42c1c:	20800e17 	ldw	r2,56(r4)
   42c20:	10003126 	beq	r2,zero,42ce8 <__swsetup_r+0xf4>
   42c24:	8080030b 	ldhu	r2,12(r16)
   42c28:	10c0020c 	andi	r3,r2,8
   42c2c:	1009883a 	mov	r4,r2
   42c30:	18000f26 	beq	r3,zero,42c70 <__swsetup_r+0x7c>
   42c34:	80c00417 	ldw	r3,16(r16)
   42c38:	18001526 	beq	r3,zero,42c90 <__swsetup_r+0x9c>
   42c3c:	1100004c 	andi	r4,r2,1
   42c40:	20001c1e 	bne	r4,zero,42cb4 <__swsetup_r+0xc0>
   42c44:	1080008c 	andi	r2,r2,2
   42c48:	1000291e 	bne	r2,zero,42cf0 <__swsetup_r+0xfc>
   42c4c:	80800517 	ldw	r2,20(r16)
   42c50:	80800215 	stw	r2,8(r16)
   42c54:	18001c26 	beq	r3,zero,42cc8 <__swsetup_r+0xd4>
   42c58:	0005883a 	mov	r2,zero
   42c5c:	dfc00217 	ldw	ra,8(sp)
   42c60:	dc400117 	ldw	r17,4(sp)
   42c64:	dc000017 	ldw	r16,0(sp)
   42c68:	dec00304 	addi	sp,sp,12
   42c6c:	f800283a 	ret
   42c70:	2080040c 	andi	r2,r4,16
   42c74:	10002e26 	beq	r2,zero,42d30 <__swsetup_r+0x13c>
   42c78:	2080010c 	andi	r2,r4,4
   42c7c:	10001e1e 	bne	r2,zero,42cf8 <__swsetup_r+0x104>
   42c80:	80c00417 	ldw	r3,16(r16)
   42c84:	20800214 	ori	r2,r4,8
   42c88:	8080030d 	sth	r2,12(r16)
   42c8c:	183feb1e 	bne	r3,zero,42c3c <__alt_data_end+0xfffdbb3c>
   42c90:	1100a00c 	andi	r4,r2,640
   42c94:	01408004 	movi	r5,512
   42c98:	217fe826 	beq	r4,r5,42c3c <__alt_data_end+0xfffdbb3c>
   42c9c:	800b883a 	mov	r5,r16
   42ca0:	8809883a 	mov	r4,r17
   42ca4:	004576c0 	call	4576c <__smakebuf_r>
   42ca8:	8080030b 	ldhu	r2,12(r16)
   42cac:	80c00417 	ldw	r3,16(r16)
   42cb0:	003fe206 	br	42c3c <__alt_data_end+0xfffdbb3c>
   42cb4:	80800517 	ldw	r2,20(r16)
   42cb8:	80000215 	stw	zero,8(r16)
   42cbc:	0085c83a 	sub	r2,zero,r2
   42cc0:	80800615 	stw	r2,24(r16)
   42cc4:	183fe41e 	bne	r3,zero,42c58 <__alt_data_end+0xfffdbb58>
   42cc8:	80c0030b 	ldhu	r3,12(r16)
   42ccc:	0005883a 	mov	r2,zero
   42cd0:	1900200c 	andi	r4,r3,128
   42cd4:	203fe126 	beq	r4,zero,42c5c <__alt_data_end+0xfffdbb5c>
   42cd8:	18c01014 	ori	r3,r3,64
   42cdc:	80c0030d 	sth	r3,12(r16)
   42ce0:	00bfffc4 	movi	r2,-1
   42ce4:	003fdd06 	br	42c5c <__alt_data_end+0xfffdbb5c>
   42ce8:	0044bc80 	call	44bc8 <__sinit>
   42cec:	003fcd06 	br	42c24 <__alt_data_end+0xfffdbb24>
   42cf0:	0005883a 	mov	r2,zero
   42cf4:	003fd606 	br	42c50 <__alt_data_end+0xfffdbb50>
   42cf8:	81400c17 	ldw	r5,48(r16)
   42cfc:	28000626 	beq	r5,zero,42d18 <__swsetup_r+0x124>
   42d00:	80801004 	addi	r2,r16,64
   42d04:	28800326 	beq	r5,r2,42d14 <__swsetup_r+0x120>
   42d08:	8809883a 	mov	r4,r17
   42d0c:	0044d3c0 	call	44d3c <_free_r>
   42d10:	8100030b 	ldhu	r4,12(r16)
   42d14:	80000c15 	stw	zero,48(r16)
   42d18:	80c00417 	ldw	r3,16(r16)
   42d1c:	00bff6c4 	movi	r2,-37
   42d20:	1108703a 	and	r4,r2,r4
   42d24:	80000115 	stw	zero,4(r16)
   42d28:	80c00015 	stw	r3,0(r16)
   42d2c:	003fd506 	br	42c84 <__alt_data_end+0xfffdbb84>
   42d30:	00800244 	movi	r2,9
   42d34:	88800015 	stw	r2,0(r17)
   42d38:	20801014 	ori	r2,r4,64
   42d3c:	8080030d 	sth	r2,12(r16)
   42d40:	00bfffc4 	movi	r2,-1
   42d44:	003fc506 	br	42c5c <__alt_data_end+0xfffdbb5c>

00042d48 <quorem>:
   42d48:	defff704 	addi	sp,sp,-36
   42d4c:	dc800215 	stw	r18,8(sp)
   42d50:	20800417 	ldw	r2,16(r4)
   42d54:	2c800417 	ldw	r18,16(r5)
   42d58:	dfc00815 	stw	ra,32(sp)
   42d5c:	ddc00715 	stw	r23,28(sp)
   42d60:	dd800615 	stw	r22,24(sp)
   42d64:	dd400515 	stw	r21,20(sp)
   42d68:	dd000415 	stw	r20,16(sp)
   42d6c:	dcc00315 	stw	r19,12(sp)
   42d70:	dc400115 	stw	r17,4(sp)
   42d74:	dc000015 	stw	r16,0(sp)
   42d78:	14807116 	blt	r2,r18,42f40 <quorem+0x1f8>
   42d7c:	94bfffc4 	addi	r18,r18,-1
   42d80:	94ad883a 	add	r22,r18,r18
   42d84:	b5ad883a 	add	r22,r22,r22
   42d88:	2c400504 	addi	r17,r5,20
   42d8c:	8da9883a 	add	r20,r17,r22
   42d90:	25400504 	addi	r21,r4,20
   42d94:	282f883a 	mov	r23,r5
   42d98:	adad883a 	add	r22,r21,r22
   42d9c:	a1400017 	ldw	r5,0(r20)
   42da0:	2021883a 	mov	r16,r4
   42da4:	b1000017 	ldw	r4,0(r22)
   42da8:	29400044 	addi	r5,r5,1
   42dac:	00406700 	call	40670 <__udivsi3>
   42db0:	1027883a 	mov	r19,r2
   42db4:	10002c26 	beq	r2,zero,42e68 <quorem+0x120>
   42db8:	a813883a 	mov	r9,r21
   42dbc:	880b883a 	mov	r5,r17
   42dc0:	0009883a 	mov	r4,zero
   42dc4:	000d883a 	mov	r6,zero
   42dc8:	2a000017 	ldw	r8,0(r5)
   42dcc:	49c00017 	ldw	r7,0(r9)
   42dd0:	29400104 	addi	r5,r5,4
   42dd4:	40bfffcc 	andi	r2,r8,65535
   42dd8:	14c5383a 	mul	r2,r2,r19
   42ddc:	4010d43a 	srli	r8,r8,16
   42de0:	38ffffcc 	andi	r3,r7,65535
   42de4:	1105883a 	add	r2,r2,r4
   42de8:	1008d43a 	srli	r4,r2,16
   42dec:	44d1383a 	mul	r8,r8,r19
   42df0:	198d883a 	add	r6,r3,r6
   42df4:	10ffffcc 	andi	r3,r2,65535
   42df8:	30c7c83a 	sub	r3,r6,r3
   42dfc:	380ed43a 	srli	r7,r7,16
   42e00:	4105883a 	add	r2,r8,r4
   42e04:	180dd43a 	srai	r6,r3,16
   42e08:	113fffcc 	andi	r4,r2,65535
   42e0c:	390fc83a 	sub	r7,r7,r4
   42e10:	398d883a 	add	r6,r7,r6
   42e14:	300e943a 	slli	r7,r6,16
   42e18:	18ffffcc 	andi	r3,r3,65535
   42e1c:	1008d43a 	srli	r4,r2,16
   42e20:	38ceb03a 	or	r7,r7,r3
   42e24:	49c00015 	stw	r7,0(r9)
   42e28:	300dd43a 	srai	r6,r6,16
   42e2c:	4a400104 	addi	r9,r9,4
   42e30:	a17fe52e 	bgeu	r20,r5,42dc8 <__alt_data_end+0xfffdbcc8>
   42e34:	b0800017 	ldw	r2,0(r22)
   42e38:	10000b1e 	bne	r2,zero,42e68 <quorem+0x120>
   42e3c:	b0bfff04 	addi	r2,r22,-4
   42e40:	a880082e 	bgeu	r21,r2,42e64 <quorem+0x11c>
   42e44:	b0ffff17 	ldw	r3,-4(r22)
   42e48:	18000326 	beq	r3,zero,42e58 <quorem+0x110>
   42e4c:	00000506 	br	42e64 <quorem+0x11c>
   42e50:	10c00017 	ldw	r3,0(r2)
   42e54:	1800031e 	bne	r3,zero,42e64 <quorem+0x11c>
   42e58:	10bfff04 	addi	r2,r2,-4
   42e5c:	94bfffc4 	addi	r18,r18,-1
   42e60:	a8bffb36 	bltu	r21,r2,42e50 <__alt_data_end+0xfffdbd50>
   42e64:	84800415 	stw	r18,16(r16)
   42e68:	b80b883a 	mov	r5,r23
   42e6c:	8009883a 	mov	r4,r16
   42e70:	0046eac0 	call	46eac <__mcmp>
   42e74:	10002616 	blt	r2,zero,42f10 <quorem+0x1c8>
   42e78:	9cc00044 	addi	r19,r19,1
   42e7c:	a805883a 	mov	r2,r21
   42e80:	000b883a 	mov	r5,zero
   42e84:	11000017 	ldw	r4,0(r2)
   42e88:	89800017 	ldw	r6,0(r17)
   42e8c:	10800104 	addi	r2,r2,4
   42e90:	20ffffcc 	andi	r3,r4,65535
   42e94:	194b883a 	add	r5,r3,r5
   42e98:	30ffffcc 	andi	r3,r6,65535
   42e9c:	28c7c83a 	sub	r3,r5,r3
   42ea0:	300cd43a 	srli	r6,r6,16
   42ea4:	2008d43a 	srli	r4,r4,16
   42ea8:	180bd43a 	srai	r5,r3,16
   42eac:	18ffffcc 	andi	r3,r3,65535
   42eb0:	2189c83a 	sub	r4,r4,r6
   42eb4:	2149883a 	add	r4,r4,r5
   42eb8:	200c943a 	slli	r6,r4,16
   42ebc:	8c400104 	addi	r17,r17,4
   42ec0:	200bd43a 	srai	r5,r4,16
   42ec4:	30c6b03a 	or	r3,r6,r3
   42ec8:	10ffff15 	stw	r3,-4(r2)
   42ecc:	a47fed2e 	bgeu	r20,r17,42e84 <__alt_data_end+0xfffdbd84>
   42ed0:	9485883a 	add	r2,r18,r18
   42ed4:	1085883a 	add	r2,r2,r2
   42ed8:	a887883a 	add	r3,r21,r2
   42edc:	18800017 	ldw	r2,0(r3)
   42ee0:	10000b1e 	bne	r2,zero,42f10 <quorem+0x1c8>
   42ee4:	18bfff04 	addi	r2,r3,-4
   42ee8:	a880082e 	bgeu	r21,r2,42f0c <quorem+0x1c4>
   42eec:	18ffff17 	ldw	r3,-4(r3)
   42ef0:	18000326 	beq	r3,zero,42f00 <quorem+0x1b8>
   42ef4:	00000506 	br	42f0c <quorem+0x1c4>
   42ef8:	10c00017 	ldw	r3,0(r2)
   42efc:	1800031e 	bne	r3,zero,42f0c <quorem+0x1c4>
   42f00:	10bfff04 	addi	r2,r2,-4
   42f04:	94bfffc4 	addi	r18,r18,-1
   42f08:	a8bffb36 	bltu	r21,r2,42ef8 <__alt_data_end+0xfffdbdf8>
   42f0c:	84800415 	stw	r18,16(r16)
   42f10:	9805883a 	mov	r2,r19
   42f14:	dfc00817 	ldw	ra,32(sp)
   42f18:	ddc00717 	ldw	r23,28(sp)
   42f1c:	dd800617 	ldw	r22,24(sp)
   42f20:	dd400517 	ldw	r21,20(sp)
   42f24:	dd000417 	ldw	r20,16(sp)
   42f28:	dcc00317 	ldw	r19,12(sp)
   42f2c:	dc800217 	ldw	r18,8(sp)
   42f30:	dc400117 	ldw	r17,4(sp)
   42f34:	dc000017 	ldw	r16,0(sp)
   42f38:	dec00904 	addi	sp,sp,36
   42f3c:	f800283a 	ret
   42f40:	0005883a 	mov	r2,zero
   42f44:	003ff306 	br	42f14 <__alt_data_end+0xfffdbe14>

00042f48 <_dtoa_r>:
   42f48:	20801017 	ldw	r2,64(r4)
   42f4c:	deffde04 	addi	sp,sp,-136
   42f50:	df002015 	stw	fp,128(sp)
   42f54:	dcc01b15 	stw	r19,108(sp)
   42f58:	dc801a15 	stw	r18,104(sp)
   42f5c:	dc401915 	stw	r17,100(sp)
   42f60:	dc001815 	stw	r16,96(sp)
   42f64:	dfc02115 	stw	ra,132(sp)
   42f68:	ddc01f15 	stw	r23,124(sp)
   42f6c:	dd801e15 	stw	r22,120(sp)
   42f70:	dd401d15 	stw	r21,116(sp)
   42f74:	dd001c15 	stw	r20,112(sp)
   42f78:	d9c00315 	stw	r7,12(sp)
   42f7c:	2039883a 	mov	fp,r4
   42f80:	3023883a 	mov	r17,r6
   42f84:	2825883a 	mov	r18,r5
   42f88:	dc002417 	ldw	r16,144(sp)
   42f8c:	3027883a 	mov	r19,r6
   42f90:	10000826 	beq	r2,zero,42fb4 <_dtoa_r+0x6c>
   42f94:	21801117 	ldw	r6,68(r4)
   42f98:	00c00044 	movi	r3,1
   42f9c:	100b883a 	mov	r5,r2
   42fa0:	1986983a 	sll	r3,r3,r6
   42fa4:	11800115 	stw	r6,4(r2)
   42fa8:	10c00215 	stw	r3,8(r2)
   42fac:	004668c0 	call	4668c <_Bfree>
   42fb0:	e0001015 	stw	zero,64(fp)
   42fb4:	88002e16 	blt	r17,zero,43070 <_dtoa_r+0x128>
   42fb8:	80000015 	stw	zero,0(r16)
   42fbc:	889ffc2c 	andhi	r2,r17,32752
   42fc0:	00dffc34 	movhi	r3,32752
   42fc4:	10c01c26 	beq	r2,r3,43038 <_dtoa_r+0xf0>
   42fc8:	000d883a 	mov	r6,zero
   42fcc:	000f883a 	mov	r7,zero
   42fd0:	9009883a 	mov	r4,r18
   42fd4:	980b883a 	mov	r5,r19
   42fd8:	004bb4c0 	call	4bb4c <__eqdf2>
   42fdc:	10002b1e 	bne	r2,zero,4308c <_dtoa_r+0x144>
   42fe0:	d9c02317 	ldw	r7,140(sp)
   42fe4:	00800044 	movi	r2,1
   42fe8:	38800015 	stw	r2,0(r7)
   42fec:	d8802517 	ldw	r2,148(sp)
   42ff0:	10019e26 	beq	r2,zero,4366c <_dtoa_r+0x724>
   42ff4:	d8c02517 	ldw	r3,148(sp)
   42ff8:	00800174 	movhi	r2,5
   42ffc:	10be7a44 	addi	r2,r2,-1559
   43000:	18800015 	stw	r2,0(r3)
   43004:	10bfffc4 	addi	r2,r2,-1
   43008:	dfc02117 	ldw	ra,132(sp)
   4300c:	df002017 	ldw	fp,128(sp)
   43010:	ddc01f17 	ldw	r23,124(sp)
   43014:	dd801e17 	ldw	r22,120(sp)
   43018:	dd401d17 	ldw	r21,116(sp)
   4301c:	dd001c17 	ldw	r20,112(sp)
   43020:	dcc01b17 	ldw	r19,108(sp)
   43024:	dc801a17 	ldw	r18,104(sp)
   43028:	dc401917 	ldw	r17,100(sp)
   4302c:	dc001817 	ldw	r16,96(sp)
   43030:	dec02204 	addi	sp,sp,136
   43034:	f800283a 	ret
   43038:	d8c02317 	ldw	r3,140(sp)
   4303c:	0089c3c4 	movi	r2,9999
   43040:	18800015 	stw	r2,0(r3)
   43044:	90017726 	beq	r18,zero,43624 <_dtoa_r+0x6dc>
   43048:	00800174 	movhi	r2,5
   4304c:	10be8604 	addi	r2,r2,-1512
   43050:	d9002517 	ldw	r4,148(sp)
   43054:	203fec26 	beq	r4,zero,43008 <__alt_data_end+0xfffdbf08>
   43058:	10c000c7 	ldb	r3,3(r2)
   4305c:	1801781e 	bne	r3,zero,43640 <_dtoa_r+0x6f8>
   43060:	10c000c4 	addi	r3,r2,3
   43064:	d9802517 	ldw	r6,148(sp)
   43068:	30c00015 	stw	r3,0(r6)
   4306c:	003fe606 	br	43008 <__alt_data_end+0xfffdbf08>
   43070:	04e00034 	movhi	r19,32768
   43074:	9cffffc4 	addi	r19,r19,-1
   43078:	00800044 	movi	r2,1
   4307c:	8ce6703a 	and	r19,r17,r19
   43080:	80800015 	stw	r2,0(r16)
   43084:	9823883a 	mov	r17,r19
   43088:	003fcc06 	br	42fbc <__alt_data_end+0xfffdbebc>
   4308c:	d8800204 	addi	r2,sp,8
   43090:	d8800015 	stw	r2,0(sp)
   43094:	d9c00104 	addi	r7,sp,4
   43098:	900b883a 	mov	r5,r18
   4309c:	980d883a 	mov	r6,r19
   430a0:	e009883a 	mov	r4,fp
   430a4:	8820d53a 	srli	r16,r17,20
   430a8:	00472780 	call	47278 <__d2b>
   430ac:	d8800915 	stw	r2,36(sp)
   430b0:	8001651e 	bne	r16,zero,43648 <_dtoa_r+0x700>
   430b4:	dd800217 	ldw	r22,8(sp)
   430b8:	dc000117 	ldw	r16,4(sp)
   430bc:	00800804 	movi	r2,32
   430c0:	b421883a 	add	r16,r22,r16
   430c4:	80c10c84 	addi	r3,r16,1074
   430c8:	10c2d10e 	bge	r2,r3,43c10 <_dtoa_r+0xcc8>
   430cc:	00801004 	movi	r2,64
   430d0:	81010484 	addi	r4,r16,1042
   430d4:	10c7c83a 	sub	r3,r2,r3
   430d8:	9108d83a 	srl	r4,r18,r4
   430dc:	88e2983a 	sll	r17,r17,r3
   430e0:	2448b03a 	or	r4,r4,r17
   430e4:	004cf140 	call	4cf14 <__floatunsidf>
   430e8:	017f8434 	movhi	r5,65040
   430ec:	01800044 	movi	r6,1
   430f0:	1009883a 	mov	r4,r2
   430f4:	194b883a 	add	r5,r3,r5
   430f8:	843fffc4 	addi	r16,r16,-1
   430fc:	d9801115 	stw	r6,68(sp)
   43100:	000d883a 	mov	r6,zero
   43104:	01cffe34 	movhi	r7,16376
   43108:	004c4bc0 	call	4c4bc <__subdf3>
   4310c:	0198dbf4 	movhi	r6,25455
   43110:	01cff4f4 	movhi	r7,16339
   43114:	3190d844 	addi	r6,r6,17249
   43118:	39e1e9c4 	addi	r7,r7,-30809
   4311c:	1009883a 	mov	r4,r2
   43120:	180b883a 	mov	r5,r3
   43124:	004bda40 	call	4bda4 <__muldf3>
   43128:	01a2d874 	movhi	r6,35681
   4312c:	01cff1f4 	movhi	r7,16327
   43130:	31b22cc4 	addi	r6,r6,-14157
   43134:	39e28a04 	addi	r7,r7,-30168
   43138:	180b883a 	mov	r5,r3
   4313c:	1009883a 	mov	r4,r2
   43140:	004a9b80 	call	4a9b8 <__adddf3>
   43144:	8009883a 	mov	r4,r16
   43148:	1029883a 	mov	r20,r2
   4314c:	1823883a 	mov	r17,r3
   43150:	004ce380 	call	4ce38 <__floatsidf>
   43154:	019427f4 	movhi	r6,20639
   43158:	01cff4f4 	movhi	r7,16339
   4315c:	319e7ec4 	addi	r6,r6,31227
   43160:	39d104c4 	addi	r7,r7,17427
   43164:	1009883a 	mov	r4,r2
   43168:	180b883a 	mov	r5,r3
   4316c:	004bda40 	call	4bda4 <__muldf3>
   43170:	100d883a 	mov	r6,r2
   43174:	180f883a 	mov	r7,r3
   43178:	a009883a 	mov	r4,r20
   4317c:	880b883a 	mov	r5,r17
   43180:	004a9b80 	call	4a9b8 <__adddf3>
   43184:	1009883a 	mov	r4,r2
   43188:	180b883a 	mov	r5,r3
   4318c:	1029883a 	mov	r20,r2
   43190:	1823883a 	mov	r17,r3
   43194:	004cdb80 	call	4cdb8 <__fixdfsi>
   43198:	000d883a 	mov	r6,zero
   4319c:	000f883a 	mov	r7,zero
   431a0:	a009883a 	mov	r4,r20
   431a4:	880b883a 	mov	r5,r17
   431a8:	d8800515 	stw	r2,20(sp)
   431ac:	004bcb00 	call	4bcb0 <__ledf2>
   431b0:	10028716 	blt	r2,zero,43bd0 <_dtoa_r+0xc88>
   431b4:	d8c00517 	ldw	r3,20(sp)
   431b8:	00800584 	movi	r2,22
   431bc:	10c27536 	bltu	r2,r3,43b94 <_dtoa_r+0xc4c>
   431c0:	180490fa 	slli	r2,r3,3
   431c4:	00c00174 	movhi	r3,5
   431c8:	18fea204 	addi	r3,r3,-1400
   431cc:	1885883a 	add	r2,r3,r2
   431d0:	11000017 	ldw	r4,0(r2)
   431d4:	11400117 	ldw	r5,4(r2)
   431d8:	900d883a 	mov	r6,r18
   431dc:	980f883a 	mov	r7,r19
   431e0:	004bbd40 	call	4bbd4 <__gedf2>
   431e4:	00828d0e 	bge	zero,r2,43c1c <_dtoa_r+0xcd4>
   431e8:	d9000517 	ldw	r4,20(sp)
   431ec:	d8000e15 	stw	zero,56(sp)
   431f0:	213fffc4 	addi	r4,r4,-1
   431f4:	d9000515 	stw	r4,20(sp)
   431f8:	b42dc83a 	sub	r22,r22,r16
   431fc:	b5bfffc4 	addi	r22,r22,-1
   43200:	b0026f16 	blt	r22,zero,43bc0 <_dtoa_r+0xc78>
   43204:	d8000815 	stw	zero,32(sp)
   43208:	d9c00517 	ldw	r7,20(sp)
   4320c:	38026416 	blt	r7,zero,43ba0 <_dtoa_r+0xc58>
   43210:	b1ed883a 	add	r22,r22,r7
   43214:	d9c00d15 	stw	r7,52(sp)
   43218:	d8000a15 	stw	zero,40(sp)
   4321c:	d9800317 	ldw	r6,12(sp)
   43220:	00800244 	movi	r2,9
   43224:	11811436 	bltu	r2,r6,43678 <_dtoa_r+0x730>
   43228:	00800144 	movi	r2,5
   4322c:	1184e10e 	bge	r2,r6,445b4 <_dtoa_r+0x166c>
   43230:	31bfff04 	addi	r6,r6,-4
   43234:	d9800315 	stw	r6,12(sp)
   43238:	0023883a 	mov	r17,zero
   4323c:	d9800317 	ldw	r6,12(sp)
   43240:	008000c4 	movi	r2,3
   43244:	30836726 	beq	r6,r2,43fe4 <_dtoa_r+0x109c>
   43248:	1183410e 	bge	r2,r6,43f50 <_dtoa_r+0x1008>
   4324c:	d9c00317 	ldw	r7,12(sp)
   43250:	00800104 	movi	r2,4
   43254:	38827c26 	beq	r7,r2,43c48 <_dtoa_r+0xd00>
   43258:	00800144 	movi	r2,5
   4325c:	3884c41e 	bne	r7,r2,44570 <_dtoa_r+0x1628>
   43260:	00800044 	movi	r2,1
   43264:	d8800b15 	stw	r2,44(sp)
   43268:	d8c00517 	ldw	r3,20(sp)
   4326c:	d9002217 	ldw	r4,136(sp)
   43270:	1907883a 	add	r3,r3,r4
   43274:	19800044 	addi	r6,r3,1
   43278:	d8c00c15 	stw	r3,48(sp)
   4327c:	d9800615 	stw	r6,24(sp)
   43280:	0183a40e 	bge	zero,r6,44114 <_dtoa_r+0x11cc>
   43284:	d9800617 	ldw	r6,24(sp)
   43288:	3021883a 	mov	r16,r6
   4328c:	e0001115 	stw	zero,68(fp)
   43290:	008005c4 	movi	r2,23
   43294:	1184c92e 	bgeu	r2,r6,445bc <_dtoa_r+0x1674>
   43298:	00c00044 	movi	r3,1
   4329c:	00800104 	movi	r2,4
   432a0:	1085883a 	add	r2,r2,r2
   432a4:	11000504 	addi	r4,r2,20
   432a8:	180b883a 	mov	r5,r3
   432ac:	18c00044 	addi	r3,r3,1
   432b0:	313ffb2e 	bgeu	r6,r4,432a0 <__alt_data_end+0xfffdc1a0>
   432b4:	e1401115 	stw	r5,68(fp)
   432b8:	e009883a 	mov	r4,fp
   432bc:	00465e40 	call	465e4 <_Balloc>
   432c0:	d8800715 	stw	r2,28(sp)
   432c4:	e0801015 	stw	r2,64(fp)
   432c8:	00800384 	movi	r2,14
   432cc:	1400f736 	bltu	r2,r16,436ac <_dtoa_r+0x764>
   432d0:	8800f626 	beq	r17,zero,436ac <_dtoa_r+0x764>
   432d4:	d9c00517 	ldw	r7,20(sp)
   432d8:	01c39a0e 	bge	zero,r7,44144 <_dtoa_r+0x11fc>
   432dc:	388003cc 	andi	r2,r7,15
   432e0:	100490fa 	slli	r2,r2,3
   432e4:	382bd13a 	srai	r21,r7,4
   432e8:	00c00174 	movhi	r3,5
   432ec:	18fea204 	addi	r3,r3,-1400
   432f0:	1885883a 	add	r2,r3,r2
   432f4:	a8c0040c 	andi	r3,r21,16
   432f8:	12400017 	ldw	r9,0(r2)
   432fc:	12000117 	ldw	r8,4(r2)
   43300:	18037926 	beq	r3,zero,440e8 <_dtoa_r+0x11a0>
   43304:	00800174 	movhi	r2,5
   43308:	10be9804 	addi	r2,r2,-1440
   4330c:	11800817 	ldw	r6,32(r2)
   43310:	11c00917 	ldw	r7,36(r2)
   43314:	9009883a 	mov	r4,r18
   43318:	980b883a 	mov	r5,r19
   4331c:	da001715 	stw	r8,92(sp)
   43320:	da401615 	stw	r9,88(sp)
   43324:	004b2640 	call	4b264 <__divdf3>
   43328:	da001717 	ldw	r8,92(sp)
   4332c:	da401617 	ldw	r9,88(sp)
   43330:	ad4003cc 	andi	r21,r21,15
   43334:	040000c4 	movi	r16,3
   43338:	1023883a 	mov	r17,r2
   4333c:	1829883a 	mov	r20,r3
   43340:	a8001126 	beq	r21,zero,43388 <_dtoa_r+0x440>
   43344:	05c00174 	movhi	r23,5
   43348:	bdfe9804 	addi	r23,r23,-1440
   4334c:	4805883a 	mov	r2,r9
   43350:	4007883a 	mov	r3,r8
   43354:	a980004c 	andi	r6,r21,1
   43358:	1009883a 	mov	r4,r2
   4335c:	a82bd07a 	srai	r21,r21,1
   43360:	180b883a 	mov	r5,r3
   43364:	30000426 	beq	r6,zero,43378 <_dtoa_r+0x430>
   43368:	b9800017 	ldw	r6,0(r23)
   4336c:	b9c00117 	ldw	r7,4(r23)
   43370:	84000044 	addi	r16,r16,1
   43374:	004bda40 	call	4bda4 <__muldf3>
   43378:	bdc00204 	addi	r23,r23,8
   4337c:	a83ff51e 	bne	r21,zero,43354 <__alt_data_end+0xfffdc254>
   43380:	1013883a 	mov	r9,r2
   43384:	1811883a 	mov	r8,r3
   43388:	480d883a 	mov	r6,r9
   4338c:	400f883a 	mov	r7,r8
   43390:	8809883a 	mov	r4,r17
   43394:	a00b883a 	mov	r5,r20
   43398:	004b2640 	call	4b264 <__divdf3>
   4339c:	d8800f15 	stw	r2,60(sp)
   433a0:	d8c01015 	stw	r3,64(sp)
   433a4:	d8c00e17 	ldw	r3,56(sp)
   433a8:	18000626 	beq	r3,zero,433c4 <_dtoa_r+0x47c>
   433ac:	d9000f17 	ldw	r4,60(sp)
   433b0:	d9401017 	ldw	r5,64(sp)
   433b4:	000d883a 	mov	r6,zero
   433b8:	01cffc34 	movhi	r7,16368
   433bc:	004bcb00 	call	4bcb0 <__ledf2>
   433c0:	10040b16 	blt	r2,zero,443f0 <_dtoa_r+0x14a8>
   433c4:	8009883a 	mov	r4,r16
   433c8:	004ce380 	call	4ce38 <__floatsidf>
   433cc:	d9800f17 	ldw	r6,60(sp)
   433d0:	d9c01017 	ldw	r7,64(sp)
   433d4:	1009883a 	mov	r4,r2
   433d8:	180b883a 	mov	r5,r3
   433dc:	004bda40 	call	4bda4 <__muldf3>
   433e0:	000d883a 	mov	r6,zero
   433e4:	01d00734 	movhi	r7,16412
   433e8:	1009883a 	mov	r4,r2
   433ec:	180b883a 	mov	r5,r3
   433f0:	004a9b80 	call	4a9b8 <__adddf3>
   433f4:	1021883a 	mov	r16,r2
   433f8:	d8800617 	ldw	r2,24(sp)
   433fc:	047f3034 	movhi	r17,64704
   43400:	1c63883a 	add	r17,r3,r17
   43404:	10031826 	beq	r2,zero,44068 <_dtoa_r+0x1120>
   43408:	d8c00517 	ldw	r3,20(sp)
   4340c:	db000617 	ldw	r12,24(sp)
   43410:	d8c01315 	stw	r3,76(sp)
   43414:	d9000b17 	ldw	r4,44(sp)
   43418:	20038f26 	beq	r4,zero,44258 <_dtoa_r+0x1310>
   4341c:	60bfffc4 	addi	r2,r12,-1
   43420:	100490fa 	slli	r2,r2,3
   43424:	00c00174 	movhi	r3,5
   43428:	18fea204 	addi	r3,r3,-1400
   4342c:	1885883a 	add	r2,r3,r2
   43430:	11800017 	ldw	r6,0(r2)
   43434:	11c00117 	ldw	r7,4(r2)
   43438:	d8800717 	ldw	r2,28(sp)
   4343c:	0009883a 	mov	r4,zero
   43440:	014ff834 	movhi	r5,16352
   43444:	db001615 	stw	r12,88(sp)
   43448:	15c00044 	addi	r23,r2,1
   4344c:	004b2640 	call	4b264 <__divdf3>
   43450:	800d883a 	mov	r6,r16
   43454:	880f883a 	mov	r7,r17
   43458:	1009883a 	mov	r4,r2
   4345c:	180b883a 	mov	r5,r3
   43460:	004c4bc0 	call	4c4bc <__subdf3>
   43464:	d9401017 	ldw	r5,64(sp)
   43468:	d9000f17 	ldw	r4,60(sp)
   4346c:	102b883a 	mov	r21,r2
   43470:	d8c01215 	stw	r3,72(sp)
   43474:	004cdb80 	call	4cdb8 <__fixdfsi>
   43478:	1009883a 	mov	r4,r2
   4347c:	1029883a 	mov	r20,r2
   43480:	004ce380 	call	4ce38 <__floatsidf>
   43484:	d9000f17 	ldw	r4,60(sp)
   43488:	d9401017 	ldw	r5,64(sp)
   4348c:	100d883a 	mov	r6,r2
   43490:	180f883a 	mov	r7,r3
   43494:	004c4bc0 	call	4c4bc <__subdf3>
   43498:	1823883a 	mov	r17,r3
   4349c:	d8c00717 	ldw	r3,28(sp)
   434a0:	d9401217 	ldw	r5,72(sp)
   434a4:	a2000c04 	addi	r8,r20,48
   434a8:	1021883a 	mov	r16,r2
   434ac:	1a000005 	stb	r8,0(r3)
   434b0:	800d883a 	mov	r6,r16
   434b4:	880f883a 	mov	r7,r17
   434b8:	a809883a 	mov	r4,r21
   434bc:	4029883a 	mov	r20,r8
   434c0:	004bbd40 	call	4bbd4 <__gedf2>
   434c4:	00841d16 	blt	zero,r2,4453c <_dtoa_r+0x15f4>
   434c8:	800d883a 	mov	r6,r16
   434cc:	880f883a 	mov	r7,r17
   434d0:	0009883a 	mov	r4,zero
   434d4:	014ffc34 	movhi	r5,16368
   434d8:	004c4bc0 	call	4c4bc <__subdf3>
   434dc:	d9401217 	ldw	r5,72(sp)
   434e0:	100d883a 	mov	r6,r2
   434e4:	180f883a 	mov	r7,r3
   434e8:	a809883a 	mov	r4,r21
   434ec:	004bbd40 	call	4bbd4 <__gedf2>
   434f0:	db001617 	ldw	r12,88(sp)
   434f4:	00840e16 	blt	zero,r2,44530 <_dtoa_r+0x15e8>
   434f8:	00800044 	movi	r2,1
   434fc:	13006b0e 	bge	r2,r12,436ac <_dtoa_r+0x764>
   43500:	d9000717 	ldw	r4,28(sp)
   43504:	dd800f15 	stw	r22,60(sp)
   43508:	dcc01015 	stw	r19,64(sp)
   4350c:	2319883a 	add	r12,r4,r12
   43510:	dcc01217 	ldw	r19,72(sp)
   43514:	602d883a 	mov	r22,r12
   43518:	dc801215 	stw	r18,72(sp)
   4351c:	b825883a 	mov	r18,r23
   43520:	00000906 	br	43548 <_dtoa_r+0x600>
   43524:	004c4bc0 	call	4c4bc <__subdf3>
   43528:	a80d883a 	mov	r6,r21
   4352c:	980f883a 	mov	r7,r19
   43530:	1009883a 	mov	r4,r2
   43534:	180b883a 	mov	r5,r3
   43538:	004bcb00 	call	4bcb0 <__ledf2>
   4353c:	1003e816 	blt	r2,zero,444e0 <_dtoa_r+0x1598>
   43540:	b825883a 	mov	r18,r23
   43544:	bd83e926 	beq	r23,r22,444ec <_dtoa_r+0x15a4>
   43548:	a809883a 	mov	r4,r21
   4354c:	980b883a 	mov	r5,r19
   43550:	000d883a 	mov	r6,zero
   43554:	01d00934 	movhi	r7,16420
   43558:	004bda40 	call	4bda4 <__muldf3>
   4355c:	000d883a 	mov	r6,zero
   43560:	01d00934 	movhi	r7,16420
   43564:	8009883a 	mov	r4,r16
   43568:	880b883a 	mov	r5,r17
   4356c:	102b883a 	mov	r21,r2
   43570:	1827883a 	mov	r19,r3
   43574:	004bda40 	call	4bda4 <__muldf3>
   43578:	180b883a 	mov	r5,r3
   4357c:	1009883a 	mov	r4,r2
   43580:	1821883a 	mov	r16,r3
   43584:	1023883a 	mov	r17,r2
   43588:	004cdb80 	call	4cdb8 <__fixdfsi>
   4358c:	1009883a 	mov	r4,r2
   43590:	1029883a 	mov	r20,r2
   43594:	004ce380 	call	4ce38 <__floatsidf>
   43598:	8809883a 	mov	r4,r17
   4359c:	800b883a 	mov	r5,r16
   435a0:	100d883a 	mov	r6,r2
   435a4:	180f883a 	mov	r7,r3
   435a8:	004c4bc0 	call	4c4bc <__subdf3>
   435ac:	a5000c04 	addi	r20,r20,48
   435b0:	a80d883a 	mov	r6,r21
   435b4:	980f883a 	mov	r7,r19
   435b8:	1009883a 	mov	r4,r2
   435bc:	180b883a 	mov	r5,r3
   435c0:	95000005 	stb	r20,0(r18)
   435c4:	1021883a 	mov	r16,r2
   435c8:	1823883a 	mov	r17,r3
   435cc:	004bcb00 	call	4bcb0 <__ledf2>
   435d0:	bdc00044 	addi	r23,r23,1
   435d4:	800d883a 	mov	r6,r16
   435d8:	880f883a 	mov	r7,r17
   435dc:	0009883a 	mov	r4,zero
   435e0:	014ffc34 	movhi	r5,16368
   435e4:	103fcf0e 	bge	r2,zero,43524 <__alt_data_end+0xfffdc424>
   435e8:	d8c01317 	ldw	r3,76(sp)
   435ec:	d8c00515 	stw	r3,20(sp)
   435f0:	d9400917 	ldw	r5,36(sp)
   435f4:	e009883a 	mov	r4,fp
   435f8:	004668c0 	call	4668c <_Bfree>
   435fc:	d9000517 	ldw	r4,20(sp)
   43600:	d9802317 	ldw	r6,140(sp)
   43604:	d9c02517 	ldw	r7,148(sp)
   43608:	b8000005 	stb	zero,0(r23)
   4360c:	20800044 	addi	r2,r4,1
   43610:	30800015 	stw	r2,0(r6)
   43614:	3802aa26 	beq	r7,zero,440c0 <_dtoa_r+0x1178>
   43618:	3dc00015 	stw	r23,0(r7)
   4361c:	d8800717 	ldw	r2,28(sp)
   43620:	003e7906 	br	43008 <__alt_data_end+0xfffdbf08>
   43624:	00800434 	movhi	r2,16
   43628:	10bfffc4 	addi	r2,r2,-1
   4362c:	88a2703a 	and	r17,r17,r2
   43630:	883e851e 	bne	r17,zero,43048 <__alt_data_end+0xfffdbf48>
   43634:	00800174 	movhi	r2,5
   43638:	10be8304 	addi	r2,r2,-1524
   4363c:	003e8406 	br	43050 <__alt_data_end+0xfffdbf50>
   43640:	10c00204 	addi	r3,r2,8
   43644:	003e8706 	br	43064 <__alt_data_end+0xfffdbf64>
   43648:	01400434 	movhi	r5,16
   4364c:	297fffc4 	addi	r5,r5,-1
   43650:	994a703a 	and	r5,r19,r5
   43654:	9009883a 	mov	r4,r18
   43658:	843f0044 	addi	r16,r16,-1023
   4365c:	294ffc34 	orhi	r5,r5,16368
   43660:	dd800217 	ldw	r22,8(sp)
   43664:	d8001115 	stw	zero,68(sp)
   43668:	003ea506 	br	43100 <__alt_data_end+0xfffdc000>
   4366c:	00800174 	movhi	r2,5
   43670:	10be7a04 	addi	r2,r2,-1560
   43674:	003e6406 	br	43008 <__alt_data_end+0xfffdbf08>
   43678:	e0001115 	stw	zero,68(fp)
   4367c:	000b883a 	mov	r5,zero
   43680:	e009883a 	mov	r4,fp
   43684:	00465e40 	call	465e4 <_Balloc>
   43688:	01bfffc4 	movi	r6,-1
   4368c:	01c00044 	movi	r7,1
   43690:	d8800715 	stw	r2,28(sp)
   43694:	d9800c15 	stw	r6,48(sp)
   43698:	e0801015 	stw	r2,64(fp)
   4369c:	d8000315 	stw	zero,12(sp)
   436a0:	d9c00b15 	stw	r7,44(sp)
   436a4:	d9800615 	stw	r6,24(sp)
   436a8:	d8002215 	stw	zero,136(sp)
   436ac:	d8800117 	ldw	r2,4(sp)
   436b0:	10008916 	blt	r2,zero,438d8 <_dtoa_r+0x990>
   436b4:	d9000517 	ldw	r4,20(sp)
   436b8:	00c00384 	movi	r3,14
   436bc:	19008616 	blt	r3,r4,438d8 <_dtoa_r+0x990>
   436c0:	200490fa 	slli	r2,r4,3
   436c4:	00c00174 	movhi	r3,5
   436c8:	d9802217 	ldw	r6,136(sp)
   436cc:	18fea204 	addi	r3,r3,-1400
   436d0:	1885883a 	add	r2,r3,r2
   436d4:	14000017 	ldw	r16,0(r2)
   436d8:	14400117 	ldw	r17,4(r2)
   436dc:	30016316 	blt	r6,zero,43c6c <_dtoa_r+0xd24>
   436e0:	800d883a 	mov	r6,r16
   436e4:	880f883a 	mov	r7,r17
   436e8:	9009883a 	mov	r4,r18
   436ec:	980b883a 	mov	r5,r19
   436f0:	004b2640 	call	4b264 <__divdf3>
   436f4:	180b883a 	mov	r5,r3
   436f8:	1009883a 	mov	r4,r2
   436fc:	004cdb80 	call	4cdb8 <__fixdfsi>
   43700:	1009883a 	mov	r4,r2
   43704:	102b883a 	mov	r21,r2
   43708:	004ce380 	call	4ce38 <__floatsidf>
   4370c:	800d883a 	mov	r6,r16
   43710:	880f883a 	mov	r7,r17
   43714:	1009883a 	mov	r4,r2
   43718:	180b883a 	mov	r5,r3
   4371c:	004bda40 	call	4bda4 <__muldf3>
   43720:	100d883a 	mov	r6,r2
   43724:	180f883a 	mov	r7,r3
   43728:	9009883a 	mov	r4,r18
   4372c:	980b883a 	mov	r5,r19
   43730:	004c4bc0 	call	4c4bc <__subdf3>
   43734:	d9c00717 	ldw	r7,28(sp)
   43738:	1009883a 	mov	r4,r2
   4373c:	a8800c04 	addi	r2,r21,48
   43740:	38800005 	stb	r2,0(r7)
   43744:	3dc00044 	addi	r23,r7,1
   43748:	d9c00617 	ldw	r7,24(sp)
   4374c:	01800044 	movi	r6,1
   43750:	180b883a 	mov	r5,r3
   43754:	2005883a 	mov	r2,r4
   43758:	39803826 	beq	r7,r6,4383c <_dtoa_r+0x8f4>
   4375c:	000d883a 	mov	r6,zero
   43760:	01d00934 	movhi	r7,16420
   43764:	004bda40 	call	4bda4 <__muldf3>
   43768:	000d883a 	mov	r6,zero
   4376c:	000f883a 	mov	r7,zero
   43770:	1009883a 	mov	r4,r2
   43774:	180b883a 	mov	r5,r3
   43778:	1025883a 	mov	r18,r2
   4377c:	1827883a 	mov	r19,r3
   43780:	004bb4c0 	call	4bb4c <__eqdf2>
   43784:	103f9a26 	beq	r2,zero,435f0 <__alt_data_end+0xfffdc4f0>
   43788:	d9c00617 	ldw	r7,24(sp)
   4378c:	d8c00717 	ldw	r3,28(sp)
   43790:	b829883a 	mov	r20,r23
   43794:	38bfffc4 	addi	r2,r7,-1
   43798:	18ad883a 	add	r22,r3,r2
   4379c:	00000a06 	br	437c8 <_dtoa_r+0x880>
   437a0:	004bda40 	call	4bda4 <__muldf3>
   437a4:	000d883a 	mov	r6,zero
   437a8:	000f883a 	mov	r7,zero
   437ac:	1009883a 	mov	r4,r2
   437b0:	180b883a 	mov	r5,r3
   437b4:	1025883a 	mov	r18,r2
   437b8:	1827883a 	mov	r19,r3
   437bc:	b829883a 	mov	r20,r23
   437c0:	004bb4c0 	call	4bb4c <__eqdf2>
   437c4:	103f8a26 	beq	r2,zero,435f0 <__alt_data_end+0xfffdc4f0>
   437c8:	800d883a 	mov	r6,r16
   437cc:	880f883a 	mov	r7,r17
   437d0:	9009883a 	mov	r4,r18
   437d4:	980b883a 	mov	r5,r19
   437d8:	004b2640 	call	4b264 <__divdf3>
   437dc:	180b883a 	mov	r5,r3
   437e0:	1009883a 	mov	r4,r2
   437e4:	004cdb80 	call	4cdb8 <__fixdfsi>
   437e8:	1009883a 	mov	r4,r2
   437ec:	102b883a 	mov	r21,r2
   437f0:	004ce380 	call	4ce38 <__floatsidf>
   437f4:	800d883a 	mov	r6,r16
   437f8:	880f883a 	mov	r7,r17
   437fc:	1009883a 	mov	r4,r2
   43800:	180b883a 	mov	r5,r3
   43804:	004bda40 	call	4bda4 <__muldf3>
   43808:	100d883a 	mov	r6,r2
   4380c:	180f883a 	mov	r7,r3
   43810:	9009883a 	mov	r4,r18
   43814:	980b883a 	mov	r5,r19
   43818:	004c4bc0 	call	4c4bc <__subdf3>
   4381c:	aa000c04 	addi	r8,r21,48
   43820:	a2000005 	stb	r8,0(r20)
   43824:	000d883a 	mov	r6,zero
   43828:	01d00934 	movhi	r7,16420
   4382c:	1009883a 	mov	r4,r2
   43830:	180b883a 	mov	r5,r3
   43834:	a5c00044 	addi	r23,r20,1
   43838:	b53fd91e 	bne	r22,r20,437a0 <__alt_data_end+0xfffdc6a0>
   4383c:	100d883a 	mov	r6,r2
   43840:	180f883a 	mov	r7,r3
   43844:	1009883a 	mov	r4,r2
   43848:	180b883a 	mov	r5,r3
   4384c:	004a9b80 	call	4a9b8 <__adddf3>
   43850:	100d883a 	mov	r6,r2
   43854:	180f883a 	mov	r7,r3
   43858:	8009883a 	mov	r4,r16
   4385c:	880b883a 	mov	r5,r17
   43860:	1027883a 	mov	r19,r2
   43864:	1825883a 	mov	r18,r3
   43868:	004bcb00 	call	4bcb0 <__ledf2>
   4386c:	10000816 	blt	r2,zero,43890 <_dtoa_r+0x948>
   43870:	980d883a 	mov	r6,r19
   43874:	900f883a 	mov	r7,r18
   43878:	8009883a 	mov	r4,r16
   4387c:	880b883a 	mov	r5,r17
   43880:	004bb4c0 	call	4bb4c <__eqdf2>
   43884:	103f5a1e 	bne	r2,zero,435f0 <__alt_data_end+0xfffdc4f0>
   43888:	ad40004c 	andi	r21,r21,1
   4388c:	a83f5826 	beq	r21,zero,435f0 <__alt_data_end+0xfffdc4f0>
   43890:	bd3fffc3 	ldbu	r20,-1(r23)
   43894:	b8bfffc4 	addi	r2,r23,-1
   43898:	1007883a 	mov	r3,r2
   4389c:	01400e44 	movi	r5,57
   438a0:	d9800717 	ldw	r6,28(sp)
   438a4:	00000506 	br	438bc <_dtoa_r+0x974>
   438a8:	18ffffc4 	addi	r3,r3,-1
   438ac:	11824726 	beq	r2,r6,441cc <_dtoa_r+0x1284>
   438b0:	1d000003 	ldbu	r20,0(r3)
   438b4:	102f883a 	mov	r23,r2
   438b8:	10bfffc4 	addi	r2,r2,-1
   438bc:	a1003fcc 	andi	r4,r20,255
   438c0:	2100201c 	xori	r4,r4,128
   438c4:	213fe004 	addi	r4,r4,-128
   438c8:	217ff726 	beq	r4,r5,438a8 <__alt_data_end+0xfffdc7a8>
   438cc:	a2000044 	addi	r8,r20,1
   438d0:	12000005 	stb	r8,0(r2)
   438d4:	003f4606 	br	435f0 <__alt_data_end+0xfffdc4f0>
   438d8:	d9000b17 	ldw	r4,44(sp)
   438dc:	2000c826 	beq	r4,zero,43c00 <_dtoa_r+0xcb8>
   438e0:	d9800317 	ldw	r6,12(sp)
   438e4:	00c00044 	movi	r3,1
   438e8:	1980f90e 	bge	r3,r6,43cd0 <_dtoa_r+0xd88>
   438ec:	d8800617 	ldw	r2,24(sp)
   438f0:	d8c00a17 	ldw	r3,40(sp)
   438f4:	157fffc4 	addi	r21,r2,-1
   438f8:	1d41f316 	blt	r3,r21,440c8 <_dtoa_r+0x1180>
   438fc:	1d6bc83a 	sub	r21,r3,r21
   43900:	d9c00617 	ldw	r7,24(sp)
   43904:	3802aa16 	blt	r7,zero,443b0 <_dtoa_r+0x1468>
   43908:	dd000817 	ldw	r20,32(sp)
   4390c:	d8800617 	ldw	r2,24(sp)
   43910:	d8c00817 	ldw	r3,32(sp)
   43914:	01400044 	movi	r5,1
   43918:	e009883a 	mov	r4,fp
   4391c:	1887883a 	add	r3,r3,r2
   43920:	d8c00815 	stw	r3,32(sp)
   43924:	b0ad883a 	add	r22,r22,r2
   43928:	00469f00 	call	469f0 <__i2b>
   4392c:	1023883a 	mov	r17,r2
   43930:	a0000826 	beq	r20,zero,43954 <_dtoa_r+0xa0c>
   43934:	0580070e 	bge	zero,r22,43954 <_dtoa_r+0xa0c>
   43938:	a005883a 	mov	r2,r20
   4393c:	b500b916 	blt	r22,r20,43c24 <_dtoa_r+0xcdc>
   43940:	d9000817 	ldw	r4,32(sp)
   43944:	a0a9c83a 	sub	r20,r20,r2
   43948:	b0adc83a 	sub	r22,r22,r2
   4394c:	2089c83a 	sub	r4,r4,r2
   43950:	d9000815 	stw	r4,32(sp)
   43954:	d9800a17 	ldw	r6,40(sp)
   43958:	0181810e 	bge	zero,r6,43f60 <_dtoa_r+0x1018>
   4395c:	d9c00b17 	ldw	r7,44(sp)
   43960:	3800b326 	beq	r7,zero,43c30 <_dtoa_r+0xce8>
   43964:	a800b226 	beq	r21,zero,43c30 <_dtoa_r+0xce8>
   43968:	880b883a 	mov	r5,r17
   4396c:	a80d883a 	mov	r6,r21
   43970:	e009883a 	mov	r4,fp
   43974:	0046c240 	call	46c24 <__pow5mult>
   43978:	d9800917 	ldw	r6,36(sp)
   4397c:	100b883a 	mov	r5,r2
   43980:	e009883a 	mov	r4,fp
   43984:	1023883a 	mov	r17,r2
   43988:	0046a2c0 	call	46a2c <__multiply>
   4398c:	1021883a 	mov	r16,r2
   43990:	d8800a17 	ldw	r2,40(sp)
   43994:	d9400917 	ldw	r5,36(sp)
   43998:	e009883a 	mov	r4,fp
   4399c:	1545c83a 	sub	r2,r2,r21
   439a0:	d8800a15 	stw	r2,40(sp)
   439a4:	004668c0 	call	4668c <_Bfree>
   439a8:	d8c00a17 	ldw	r3,40(sp)
   439ac:	18009f1e 	bne	r3,zero,43c2c <_dtoa_r+0xce4>
   439b0:	05c00044 	movi	r23,1
   439b4:	e009883a 	mov	r4,fp
   439b8:	b80b883a 	mov	r5,r23
   439bc:	00469f00 	call	469f0 <__i2b>
   439c0:	d9000d17 	ldw	r4,52(sp)
   439c4:	102b883a 	mov	r21,r2
   439c8:	2000ce26 	beq	r4,zero,43d04 <_dtoa_r+0xdbc>
   439cc:	200d883a 	mov	r6,r4
   439d0:	100b883a 	mov	r5,r2
   439d4:	e009883a 	mov	r4,fp
   439d8:	0046c240 	call	46c24 <__pow5mult>
   439dc:	d9800317 	ldw	r6,12(sp)
   439e0:	102b883a 	mov	r21,r2
   439e4:	b981810e 	bge	r23,r6,43fec <_dtoa_r+0x10a4>
   439e8:	0027883a 	mov	r19,zero
   439ec:	a8800417 	ldw	r2,16(r21)
   439f0:	05c00804 	movi	r23,32
   439f4:	10800104 	addi	r2,r2,4
   439f8:	1085883a 	add	r2,r2,r2
   439fc:	1085883a 	add	r2,r2,r2
   43a00:	a885883a 	add	r2,r21,r2
   43a04:	11000017 	ldw	r4,0(r2)
   43a08:	00468d80 	call	468d8 <__hi0bits>
   43a0c:	b885c83a 	sub	r2,r23,r2
   43a10:	1585883a 	add	r2,r2,r22
   43a14:	108007cc 	andi	r2,r2,31
   43a18:	1000b326 	beq	r2,zero,43ce8 <_dtoa_r+0xda0>
   43a1c:	00c00804 	movi	r3,32
   43a20:	1887c83a 	sub	r3,r3,r2
   43a24:	01000104 	movi	r4,4
   43a28:	20c2cd0e 	bge	r4,r3,44560 <_dtoa_r+0x1618>
   43a2c:	00c00704 	movi	r3,28
   43a30:	1885c83a 	sub	r2,r3,r2
   43a34:	d8c00817 	ldw	r3,32(sp)
   43a38:	a0a9883a 	add	r20,r20,r2
   43a3c:	b0ad883a 	add	r22,r22,r2
   43a40:	1887883a 	add	r3,r3,r2
   43a44:	d8c00815 	stw	r3,32(sp)
   43a48:	d9800817 	ldw	r6,32(sp)
   43a4c:	0180040e 	bge	zero,r6,43a60 <_dtoa_r+0xb18>
   43a50:	800b883a 	mov	r5,r16
   43a54:	e009883a 	mov	r4,fp
   43a58:	0046d640 	call	46d64 <__lshift>
   43a5c:	1021883a 	mov	r16,r2
   43a60:	0580050e 	bge	zero,r22,43a78 <_dtoa_r+0xb30>
   43a64:	a80b883a 	mov	r5,r21
   43a68:	b00d883a 	mov	r6,r22
   43a6c:	e009883a 	mov	r4,fp
   43a70:	0046d640 	call	46d64 <__lshift>
   43a74:	102b883a 	mov	r21,r2
   43a78:	d9c00e17 	ldw	r7,56(sp)
   43a7c:	3801211e 	bne	r7,zero,43f04 <_dtoa_r+0xfbc>
   43a80:	d9800617 	ldw	r6,24(sp)
   43a84:	0181380e 	bge	zero,r6,43f68 <_dtoa_r+0x1020>
   43a88:	d8c00b17 	ldw	r3,44(sp)
   43a8c:	1800ab1e 	bne	r3,zero,43d3c <_dtoa_r+0xdf4>
   43a90:	dc800717 	ldw	r18,28(sp)
   43a94:	dcc00617 	ldw	r19,24(sp)
   43a98:	9029883a 	mov	r20,r18
   43a9c:	00000206 	br	43aa8 <_dtoa_r+0xb60>
   43aa0:	00466b40 	call	466b4 <__multadd>
   43aa4:	1021883a 	mov	r16,r2
   43aa8:	a80b883a 	mov	r5,r21
   43aac:	8009883a 	mov	r4,r16
   43ab0:	0042d480 	call	42d48 <quorem>
   43ab4:	10800c04 	addi	r2,r2,48
   43ab8:	90800005 	stb	r2,0(r18)
   43abc:	94800044 	addi	r18,r18,1
   43ac0:	9507c83a 	sub	r3,r18,r20
   43ac4:	000f883a 	mov	r7,zero
   43ac8:	01800284 	movi	r6,10
   43acc:	800b883a 	mov	r5,r16
   43ad0:	e009883a 	mov	r4,fp
   43ad4:	1cfff216 	blt	r3,r19,43aa0 <__alt_data_end+0xfffdc9a0>
   43ad8:	1011883a 	mov	r8,r2
   43adc:	d8800617 	ldw	r2,24(sp)
   43ae0:	0082370e 	bge	zero,r2,443c0 <_dtoa_r+0x1478>
   43ae4:	d9000717 	ldw	r4,28(sp)
   43ae8:	0025883a 	mov	r18,zero
   43aec:	20af883a 	add	r23,r4,r2
   43af0:	01800044 	movi	r6,1
   43af4:	800b883a 	mov	r5,r16
   43af8:	e009883a 	mov	r4,fp
   43afc:	da001715 	stw	r8,92(sp)
   43b00:	0046d640 	call	46d64 <__lshift>
   43b04:	a80b883a 	mov	r5,r21
   43b08:	1009883a 	mov	r4,r2
   43b0c:	d8800915 	stw	r2,36(sp)
   43b10:	0046eac0 	call	46eac <__mcmp>
   43b14:	da001717 	ldw	r8,92(sp)
   43b18:	0081800e 	bge	zero,r2,4411c <_dtoa_r+0x11d4>
   43b1c:	b93fffc3 	ldbu	r4,-1(r23)
   43b20:	b8bfffc4 	addi	r2,r23,-1
   43b24:	1007883a 	mov	r3,r2
   43b28:	01800e44 	movi	r6,57
   43b2c:	d9c00717 	ldw	r7,28(sp)
   43b30:	00000506 	br	43b48 <_dtoa_r+0xc00>
   43b34:	18ffffc4 	addi	r3,r3,-1
   43b38:	11c12326 	beq	r2,r7,43fc8 <_dtoa_r+0x1080>
   43b3c:	19000003 	ldbu	r4,0(r3)
   43b40:	102f883a 	mov	r23,r2
   43b44:	10bfffc4 	addi	r2,r2,-1
   43b48:	21403fcc 	andi	r5,r4,255
   43b4c:	2940201c 	xori	r5,r5,128
   43b50:	297fe004 	addi	r5,r5,-128
   43b54:	29bff726 	beq	r5,r6,43b34 <__alt_data_end+0xfffdca34>
   43b58:	21000044 	addi	r4,r4,1
   43b5c:	11000005 	stb	r4,0(r2)
   43b60:	a80b883a 	mov	r5,r21
   43b64:	e009883a 	mov	r4,fp
   43b68:	004668c0 	call	4668c <_Bfree>
   43b6c:	883ea026 	beq	r17,zero,435f0 <__alt_data_end+0xfffdc4f0>
   43b70:	90000426 	beq	r18,zero,43b84 <_dtoa_r+0xc3c>
   43b74:	94400326 	beq	r18,r17,43b84 <_dtoa_r+0xc3c>
   43b78:	900b883a 	mov	r5,r18
   43b7c:	e009883a 	mov	r4,fp
   43b80:	004668c0 	call	4668c <_Bfree>
   43b84:	880b883a 	mov	r5,r17
   43b88:	e009883a 	mov	r4,fp
   43b8c:	004668c0 	call	4668c <_Bfree>
   43b90:	003e9706 	br	435f0 <__alt_data_end+0xfffdc4f0>
   43b94:	01800044 	movi	r6,1
   43b98:	d9800e15 	stw	r6,56(sp)
   43b9c:	003d9606 	br	431f8 <__alt_data_end+0xfffdc0f8>
   43ba0:	d8800817 	ldw	r2,32(sp)
   43ba4:	d8c00517 	ldw	r3,20(sp)
   43ba8:	d8000d15 	stw	zero,52(sp)
   43bac:	10c5c83a 	sub	r2,r2,r3
   43bb0:	00c9c83a 	sub	r4,zero,r3
   43bb4:	d8800815 	stw	r2,32(sp)
   43bb8:	d9000a15 	stw	r4,40(sp)
   43bbc:	003d9706 	br	4321c <__alt_data_end+0xfffdc11c>
   43bc0:	05adc83a 	sub	r22,zero,r22
   43bc4:	dd800815 	stw	r22,32(sp)
   43bc8:	002d883a 	mov	r22,zero
   43bcc:	003d8e06 	br	43208 <__alt_data_end+0xfffdc108>
   43bd0:	d9000517 	ldw	r4,20(sp)
   43bd4:	004ce380 	call	4ce38 <__floatsidf>
   43bd8:	100d883a 	mov	r6,r2
   43bdc:	180f883a 	mov	r7,r3
   43be0:	a009883a 	mov	r4,r20
   43be4:	880b883a 	mov	r5,r17
   43be8:	004bb4c0 	call	4bb4c <__eqdf2>
   43bec:	103d7126 	beq	r2,zero,431b4 <__alt_data_end+0xfffdc0b4>
   43bf0:	d9c00517 	ldw	r7,20(sp)
   43bf4:	39ffffc4 	addi	r7,r7,-1
   43bf8:	d9c00515 	stw	r7,20(sp)
   43bfc:	003d6d06 	br	431b4 <__alt_data_end+0xfffdc0b4>
   43c00:	dd400a17 	ldw	r21,40(sp)
   43c04:	dd000817 	ldw	r20,32(sp)
   43c08:	0023883a 	mov	r17,zero
   43c0c:	003f4806 	br	43930 <__alt_data_end+0xfffdc830>
   43c10:	10e3c83a 	sub	r17,r2,r3
   43c14:	9448983a 	sll	r4,r18,r17
   43c18:	003d3206 	br	430e4 <__alt_data_end+0xfffdbfe4>
   43c1c:	d8000e15 	stw	zero,56(sp)
   43c20:	003d7506 	br	431f8 <__alt_data_end+0xfffdc0f8>
   43c24:	b005883a 	mov	r2,r22
   43c28:	003f4506 	br	43940 <__alt_data_end+0xfffdc840>
   43c2c:	dc000915 	stw	r16,36(sp)
   43c30:	d9800a17 	ldw	r6,40(sp)
   43c34:	d9400917 	ldw	r5,36(sp)
   43c38:	e009883a 	mov	r4,fp
   43c3c:	0046c240 	call	46c24 <__pow5mult>
   43c40:	1021883a 	mov	r16,r2
   43c44:	003f5a06 	br	439b0 <__alt_data_end+0xfffdc8b0>
   43c48:	01c00044 	movi	r7,1
   43c4c:	d9c00b15 	stw	r7,44(sp)
   43c50:	d8802217 	ldw	r2,136(sp)
   43c54:	0081280e 	bge	zero,r2,440f8 <_dtoa_r+0x11b0>
   43c58:	100d883a 	mov	r6,r2
   43c5c:	1021883a 	mov	r16,r2
   43c60:	d8800c15 	stw	r2,48(sp)
   43c64:	d8800615 	stw	r2,24(sp)
   43c68:	003d8806 	br	4328c <__alt_data_end+0xfffdc18c>
   43c6c:	d8800617 	ldw	r2,24(sp)
   43c70:	00be9b16 	blt	zero,r2,436e0 <__alt_data_end+0xfffdc5e0>
   43c74:	10010f1e 	bne	r2,zero,440b4 <_dtoa_r+0x116c>
   43c78:	880b883a 	mov	r5,r17
   43c7c:	000d883a 	mov	r6,zero
   43c80:	01d00534 	movhi	r7,16404
   43c84:	8009883a 	mov	r4,r16
   43c88:	004bda40 	call	4bda4 <__muldf3>
   43c8c:	900d883a 	mov	r6,r18
   43c90:	980f883a 	mov	r7,r19
   43c94:	1009883a 	mov	r4,r2
   43c98:	180b883a 	mov	r5,r3
   43c9c:	004bbd40 	call	4bbd4 <__gedf2>
   43ca0:	002b883a 	mov	r21,zero
   43ca4:	0023883a 	mov	r17,zero
   43ca8:	1000bf16 	blt	r2,zero,43fa8 <_dtoa_r+0x1060>
   43cac:	d9802217 	ldw	r6,136(sp)
   43cb0:	ddc00717 	ldw	r23,28(sp)
   43cb4:	018c303a 	nor	r6,zero,r6
   43cb8:	d9800515 	stw	r6,20(sp)
   43cbc:	a80b883a 	mov	r5,r21
   43cc0:	e009883a 	mov	r4,fp
   43cc4:	004668c0 	call	4668c <_Bfree>
   43cc8:	883e4926 	beq	r17,zero,435f0 <__alt_data_end+0xfffdc4f0>
   43ccc:	003fad06 	br	43b84 <__alt_data_end+0xfffdca84>
   43cd0:	d9c01117 	ldw	r7,68(sp)
   43cd4:	3801bc26 	beq	r7,zero,443c8 <_dtoa_r+0x1480>
   43cd8:	10810cc4 	addi	r2,r2,1075
   43cdc:	dd400a17 	ldw	r21,40(sp)
   43ce0:	dd000817 	ldw	r20,32(sp)
   43ce4:	003f0a06 	br	43910 <__alt_data_end+0xfffdc810>
   43ce8:	00800704 	movi	r2,28
   43cec:	d9000817 	ldw	r4,32(sp)
   43cf0:	a0a9883a 	add	r20,r20,r2
   43cf4:	b0ad883a 	add	r22,r22,r2
   43cf8:	2089883a 	add	r4,r4,r2
   43cfc:	d9000815 	stw	r4,32(sp)
   43d00:	003f5106 	br	43a48 <__alt_data_end+0xfffdc948>
   43d04:	d8c00317 	ldw	r3,12(sp)
   43d08:	b8c1fc0e 	bge	r23,r3,444fc <_dtoa_r+0x15b4>
   43d0c:	0027883a 	mov	r19,zero
   43d10:	b805883a 	mov	r2,r23
   43d14:	003f3e06 	br	43a10 <__alt_data_end+0xfffdc910>
   43d18:	880b883a 	mov	r5,r17
   43d1c:	e009883a 	mov	r4,fp
   43d20:	000f883a 	mov	r7,zero
   43d24:	01800284 	movi	r6,10
   43d28:	00466b40 	call	466b4 <__multadd>
   43d2c:	d9000c17 	ldw	r4,48(sp)
   43d30:	1023883a 	mov	r17,r2
   43d34:	0102040e 	bge	zero,r4,44548 <_dtoa_r+0x1600>
   43d38:	d9000615 	stw	r4,24(sp)
   43d3c:	0500050e 	bge	zero,r20,43d54 <_dtoa_r+0xe0c>
   43d40:	880b883a 	mov	r5,r17
   43d44:	a00d883a 	mov	r6,r20
   43d48:	e009883a 	mov	r4,fp
   43d4c:	0046d640 	call	46d64 <__lshift>
   43d50:	1023883a 	mov	r17,r2
   43d54:	9801241e 	bne	r19,zero,441e8 <_dtoa_r+0x12a0>
   43d58:	8829883a 	mov	r20,r17
   43d5c:	d9000617 	ldw	r4,24(sp)
   43d60:	dcc00717 	ldw	r19,28(sp)
   43d64:	9480004c 	andi	r18,r18,1
   43d68:	20bfffc4 	addi	r2,r4,-1
   43d6c:	9885883a 	add	r2,r19,r2
   43d70:	d8800415 	stw	r2,16(sp)
   43d74:	dc800615 	stw	r18,24(sp)
   43d78:	a80b883a 	mov	r5,r21
   43d7c:	8009883a 	mov	r4,r16
   43d80:	0042d480 	call	42d48 <quorem>
   43d84:	880b883a 	mov	r5,r17
   43d88:	8009883a 	mov	r4,r16
   43d8c:	102f883a 	mov	r23,r2
   43d90:	0046eac0 	call	46eac <__mcmp>
   43d94:	a80b883a 	mov	r5,r21
   43d98:	a00d883a 	mov	r6,r20
   43d9c:	e009883a 	mov	r4,fp
   43da0:	102d883a 	mov	r22,r2
   43da4:	0046f0c0 	call	46f0c <__mdiff>
   43da8:	1007883a 	mov	r3,r2
   43dac:	10800317 	ldw	r2,12(r2)
   43db0:	bc800c04 	addi	r18,r23,48
   43db4:	180b883a 	mov	r5,r3
   43db8:	10004e1e 	bne	r2,zero,43ef4 <_dtoa_r+0xfac>
   43dbc:	8009883a 	mov	r4,r16
   43dc0:	d8c01615 	stw	r3,88(sp)
   43dc4:	0046eac0 	call	46eac <__mcmp>
   43dc8:	d8c01617 	ldw	r3,88(sp)
   43dcc:	e009883a 	mov	r4,fp
   43dd0:	d8801615 	stw	r2,88(sp)
   43dd4:	180b883a 	mov	r5,r3
   43dd8:	004668c0 	call	4668c <_Bfree>
   43ddc:	d8801617 	ldw	r2,88(sp)
   43de0:	1000041e 	bne	r2,zero,43df4 <_dtoa_r+0xeac>
   43de4:	d9800317 	ldw	r6,12(sp)
   43de8:	3000021e 	bne	r6,zero,43df4 <_dtoa_r+0xeac>
   43dec:	d8c00617 	ldw	r3,24(sp)
   43df0:	18003726 	beq	r3,zero,43ed0 <_dtoa_r+0xf88>
   43df4:	b0002016 	blt	r22,zero,43e78 <_dtoa_r+0xf30>
   43df8:	b000041e 	bne	r22,zero,43e0c <_dtoa_r+0xec4>
   43dfc:	d9000317 	ldw	r4,12(sp)
   43e00:	2000021e 	bne	r4,zero,43e0c <_dtoa_r+0xec4>
   43e04:	d8c00617 	ldw	r3,24(sp)
   43e08:	18001b26 	beq	r3,zero,43e78 <_dtoa_r+0xf30>
   43e0c:	00810716 	blt	zero,r2,4422c <_dtoa_r+0x12e4>
   43e10:	d8c00417 	ldw	r3,16(sp)
   43e14:	9d800044 	addi	r22,r19,1
   43e18:	9c800005 	stb	r18,0(r19)
   43e1c:	b02f883a 	mov	r23,r22
   43e20:	98c10626 	beq	r19,r3,4423c <_dtoa_r+0x12f4>
   43e24:	800b883a 	mov	r5,r16
   43e28:	000f883a 	mov	r7,zero
   43e2c:	01800284 	movi	r6,10
   43e30:	e009883a 	mov	r4,fp
   43e34:	00466b40 	call	466b4 <__multadd>
   43e38:	1021883a 	mov	r16,r2
   43e3c:	000f883a 	mov	r7,zero
   43e40:	01800284 	movi	r6,10
   43e44:	880b883a 	mov	r5,r17
   43e48:	e009883a 	mov	r4,fp
   43e4c:	8d002526 	beq	r17,r20,43ee4 <_dtoa_r+0xf9c>
   43e50:	00466b40 	call	466b4 <__multadd>
   43e54:	a00b883a 	mov	r5,r20
   43e58:	000f883a 	mov	r7,zero
   43e5c:	01800284 	movi	r6,10
   43e60:	e009883a 	mov	r4,fp
   43e64:	1023883a 	mov	r17,r2
   43e68:	00466b40 	call	466b4 <__multadd>
   43e6c:	1029883a 	mov	r20,r2
   43e70:	b027883a 	mov	r19,r22
   43e74:	003fc006 	br	43d78 <__alt_data_end+0xfffdcc78>
   43e78:	9011883a 	mov	r8,r18
   43e7c:	00800e0e 	bge	zero,r2,43eb8 <_dtoa_r+0xf70>
   43e80:	800b883a 	mov	r5,r16
   43e84:	01800044 	movi	r6,1
   43e88:	e009883a 	mov	r4,fp
   43e8c:	da001715 	stw	r8,92(sp)
   43e90:	0046d640 	call	46d64 <__lshift>
   43e94:	a80b883a 	mov	r5,r21
   43e98:	1009883a 	mov	r4,r2
   43e9c:	1021883a 	mov	r16,r2
   43ea0:	0046eac0 	call	46eac <__mcmp>
   43ea4:	da001717 	ldw	r8,92(sp)
   43ea8:	0081960e 	bge	zero,r2,44504 <_dtoa_r+0x15bc>
   43eac:	00800e44 	movi	r2,57
   43eb0:	40817026 	beq	r8,r2,44474 <_dtoa_r+0x152c>
   43eb4:	ba000c44 	addi	r8,r23,49
   43eb8:	8825883a 	mov	r18,r17
   43ebc:	9dc00044 	addi	r23,r19,1
   43ec0:	9a000005 	stb	r8,0(r19)
   43ec4:	a023883a 	mov	r17,r20
   43ec8:	dc000915 	stw	r16,36(sp)
   43ecc:	003f2406 	br	43b60 <__alt_data_end+0xfffdca60>
   43ed0:	00800e44 	movi	r2,57
   43ed4:	9011883a 	mov	r8,r18
   43ed8:	90816626 	beq	r18,r2,44474 <_dtoa_r+0x152c>
   43edc:	05bff516 	blt	zero,r22,43eb4 <__alt_data_end+0xfffdcdb4>
   43ee0:	003ff506 	br	43eb8 <__alt_data_end+0xfffdcdb8>
   43ee4:	00466b40 	call	466b4 <__multadd>
   43ee8:	1023883a 	mov	r17,r2
   43eec:	1029883a 	mov	r20,r2
   43ef0:	003fdf06 	br	43e70 <__alt_data_end+0xfffdcd70>
   43ef4:	e009883a 	mov	r4,fp
   43ef8:	004668c0 	call	4668c <_Bfree>
   43efc:	00800044 	movi	r2,1
   43f00:	003fbc06 	br	43df4 <__alt_data_end+0xfffdccf4>
   43f04:	a80b883a 	mov	r5,r21
   43f08:	8009883a 	mov	r4,r16
   43f0c:	0046eac0 	call	46eac <__mcmp>
   43f10:	103edb0e 	bge	r2,zero,43a80 <__alt_data_end+0xfffdc980>
   43f14:	800b883a 	mov	r5,r16
   43f18:	000f883a 	mov	r7,zero
   43f1c:	01800284 	movi	r6,10
   43f20:	e009883a 	mov	r4,fp
   43f24:	00466b40 	call	466b4 <__multadd>
   43f28:	1021883a 	mov	r16,r2
   43f2c:	d8800517 	ldw	r2,20(sp)
   43f30:	d8c00b17 	ldw	r3,44(sp)
   43f34:	10bfffc4 	addi	r2,r2,-1
   43f38:	d8800515 	stw	r2,20(sp)
   43f3c:	183f761e 	bne	r3,zero,43d18 <__alt_data_end+0xfffdcc18>
   43f40:	d9000c17 	ldw	r4,48(sp)
   43f44:	0101730e 	bge	zero,r4,44514 <_dtoa_r+0x15cc>
   43f48:	d9000615 	stw	r4,24(sp)
   43f4c:	003ed006 	br	43a90 <__alt_data_end+0xfffdc990>
   43f50:	00800084 	movi	r2,2
   43f54:	3081861e 	bne	r6,r2,44570 <_dtoa_r+0x1628>
   43f58:	d8000b15 	stw	zero,44(sp)
   43f5c:	003f3c06 	br	43c50 <__alt_data_end+0xfffdcb50>
   43f60:	dc000917 	ldw	r16,36(sp)
   43f64:	003e9206 	br	439b0 <__alt_data_end+0xfffdc8b0>
   43f68:	d9c00317 	ldw	r7,12(sp)
   43f6c:	00800084 	movi	r2,2
   43f70:	11fec50e 	bge	r2,r7,43a88 <__alt_data_end+0xfffdc988>
   43f74:	d9000617 	ldw	r4,24(sp)
   43f78:	20013c1e 	bne	r4,zero,4446c <_dtoa_r+0x1524>
   43f7c:	a80b883a 	mov	r5,r21
   43f80:	000f883a 	mov	r7,zero
   43f84:	01800144 	movi	r6,5
   43f88:	e009883a 	mov	r4,fp
   43f8c:	00466b40 	call	466b4 <__multadd>
   43f90:	100b883a 	mov	r5,r2
   43f94:	8009883a 	mov	r4,r16
   43f98:	102b883a 	mov	r21,r2
   43f9c:	0046eac0 	call	46eac <__mcmp>
   43fa0:	dc000915 	stw	r16,36(sp)
   43fa4:	00bf410e 	bge	zero,r2,43cac <__alt_data_end+0xfffdcbac>
   43fa8:	d9c00717 	ldw	r7,28(sp)
   43fac:	00800c44 	movi	r2,49
   43fb0:	38800005 	stb	r2,0(r7)
   43fb4:	d8800517 	ldw	r2,20(sp)
   43fb8:	3dc00044 	addi	r23,r7,1
   43fbc:	10800044 	addi	r2,r2,1
   43fc0:	d8800515 	stw	r2,20(sp)
   43fc4:	003f3d06 	br	43cbc <__alt_data_end+0xfffdcbbc>
   43fc8:	d9800517 	ldw	r6,20(sp)
   43fcc:	d9c00717 	ldw	r7,28(sp)
   43fd0:	00800c44 	movi	r2,49
   43fd4:	31800044 	addi	r6,r6,1
   43fd8:	d9800515 	stw	r6,20(sp)
   43fdc:	38800005 	stb	r2,0(r7)
   43fe0:	003edf06 	br	43b60 <__alt_data_end+0xfffdca60>
   43fe4:	d8000b15 	stw	zero,44(sp)
   43fe8:	003c9f06 	br	43268 <__alt_data_end+0xfffdc168>
   43fec:	903e7e1e 	bne	r18,zero,439e8 <__alt_data_end+0xfffdc8e8>
   43ff0:	00800434 	movhi	r2,16
   43ff4:	10bfffc4 	addi	r2,r2,-1
   43ff8:	9884703a 	and	r2,r19,r2
   43ffc:	1000ea1e 	bne	r2,zero,443a8 <_dtoa_r+0x1460>
   44000:	9cdffc2c 	andhi	r19,r19,32752
   44004:	9800e826 	beq	r19,zero,443a8 <_dtoa_r+0x1460>
   44008:	d9c00817 	ldw	r7,32(sp)
   4400c:	b5800044 	addi	r22,r22,1
   44010:	04c00044 	movi	r19,1
   44014:	39c00044 	addi	r7,r7,1
   44018:	d9c00815 	stw	r7,32(sp)
   4401c:	d8800d17 	ldw	r2,52(sp)
   44020:	103e721e 	bne	r2,zero,439ec <__alt_data_end+0xfffdc8ec>
   44024:	00800044 	movi	r2,1
   44028:	003e7906 	br	43a10 <__alt_data_end+0xfffdc910>
   4402c:	8009883a 	mov	r4,r16
   44030:	004ce380 	call	4ce38 <__floatsidf>
   44034:	d9800f17 	ldw	r6,60(sp)
   44038:	d9c01017 	ldw	r7,64(sp)
   4403c:	1009883a 	mov	r4,r2
   44040:	180b883a 	mov	r5,r3
   44044:	004bda40 	call	4bda4 <__muldf3>
   44048:	000d883a 	mov	r6,zero
   4404c:	01d00734 	movhi	r7,16412
   44050:	1009883a 	mov	r4,r2
   44054:	180b883a 	mov	r5,r3
   44058:	004a9b80 	call	4a9b8 <__adddf3>
   4405c:	047f3034 	movhi	r17,64704
   44060:	1021883a 	mov	r16,r2
   44064:	1c63883a 	add	r17,r3,r17
   44068:	d9000f17 	ldw	r4,60(sp)
   4406c:	d9401017 	ldw	r5,64(sp)
   44070:	000d883a 	mov	r6,zero
   44074:	01d00534 	movhi	r7,16404
   44078:	004c4bc0 	call	4c4bc <__subdf3>
   4407c:	800d883a 	mov	r6,r16
   44080:	880f883a 	mov	r7,r17
   44084:	1009883a 	mov	r4,r2
   44088:	180b883a 	mov	r5,r3
   4408c:	102b883a 	mov	r21,r2
   44090:	1829883a 	mov	r20,r3
   44094:	004bbd40 	call	4bbd4 <__gedf2>
   44098:	00806c16 	blt	zero,r2,4424c <_dtoa_r+0x1304>
   4409c:	89e0003c 	xorhi	r7,r17,32768
   440a0:	800d883a 	mov	r6,r16
   440a4:	a809883a 	mov	r4,r21
   440a8:	a00b883a 	mov	r5,r20
   440ac:	004bcb00 	call	4bcb0 <__ledf2>
   440b0:	103d7e0e 	bge	r2,zero,436ac <__alt_data_end+0xfffdc5ac>
   440b4:	002b883a 	mov	r21,zero
   440b8:	0023883a 	mov	r17,zero
   440bc:	003efb06 	br	43cac <__alt_data_end+0xfffdcbac>
   440c0:	d8800717 	ldw	r2,28(sp)
   440c4:	003bd006 	br	43008 <__alt_data_end+0xfffdbf08>
   440c8:	d9000a17 	ldw	r4,40(sp)
   440cc:	d9800d17 	ldw	r6,52(sp)
   440d0:	dd400a15 	stw	r21,40(sp)
   440d4:	a905c83a 	sub	r2,r21,r4
   440d8:	308d883a 	add	r6,r6,r2
   440dc:	d9800d15 	stw	r6,52(sp)
   440e0:	002b883a 	mov	r21,zero
   440e4:	003e0606 	br	43900 <__alt_data_end+0xfffdc800>
   440e8:	9023883a 	mov	r17,r18
   440ec:	9829883a 	mov	r20,r19
   440f0:	04000084 	movi	r16,2
   440f4:	003c9206 	br	43340 <__alt_data_end+0xfffdc240>
   440f8:	04000044 	movi	r16,1
   440fc:	dc000c15 	stw	r16,48(sp)
   44100:	dc000615 	stw	r16,24(sp)
   44104:	dc002215 	stw	r16,136(sp)
   44108:	e0001115 	stw	zero,68(fp)
   4410c:	000b883a 	mov	r5,zero
   44110:	003c6906 	br	432b8 <__alt_data_end+0xfffdc1b8>
   44114:	3021883a 	mov	r16,r6
   44118:	003ffb06 	br	44108 <__alt_data_end+0xfffdd008>
   4411c:	1000021e 	bne	r2,zero,44128 <_dtoa_r+0x11e0>
   44120:	4200004c 	andi	r8,r8,1
   44124:	403e7d1e 	bne	r8,zero,43b1c <__alt_data_end+0xfffdca1c>
   44128:	01000c04 	movi	r4,48
   4412c:	00000106 	br	44134 <_dtoa_r+0x11ec>
   44130:	102f883a 	mov	r23,r2
   44134:	b8bfffc4 	addi	r2,r23,-1
   44138:	10c00007 	ldb	r3,0(r2)
   4413c:	193ffc26 	beq	r3,r4,44130 <__alt_data_end+0xfffdd030>
   44140:	003e8706 	br	43b60 <__alt_data_end+0xfffdca60>
   44144:	d8800517 	ldw	r2,20(sp)
   44148:	00a3c83a 	sub	r17,zero,r2
   4414c:	8800a426 	beq	r17,zero,443e0 <_dtoa_r+0x1498>
   44150:	888003cc 	andi	r2,r17,15
   44154:	100490fa 	slli	r2,r2,3
   44158:	00c00174 	movhi	r3,5
   4415c:	18fea204 	addi	r3,r3,-1400
   44160:	1885883a 	add	r2,r3,r2
   44164:	11800017 	ldw	r6,0(r2)
   44168:	11c00117 	ldw	r7,4(r2)
   4416c:	9009883a 	mov	r4,r18
   44170:	980b883a 	mov	r5,r19
   44174:	8823d13a 	srai	r17,r17,4
   44178:	004bda40 	call	4bda4 <__muldf3>
   4417c:	d8800f15 	stw	r2,60(sp)
   44180:	d8c01015 	stw	r3,64(sp)
   44184:	8800e826 	beq	r17,zero,44528 <_dtoa_r+0x15e0>
   44188:	05000174 	movhi	r20,5
   4418c:	a53e9804 	addi	r20,r20,-1440
   44190:	04000084 	movi	r16,2
   44194:	8980004c 	andi	r6,r17,1
   44198:	1009883a 	mov	r4,r2
   4419c:	8823d07a 	srai	r17,r17,1
   441a0:	180b883a 	mov	r5,r3
   441a4:	30000426 	beq	r6,zero,441b8 <_dtoa_r+0x1270>
   441a8:	a1800017 	ldw	r6,0(r20)
   441ac:	a1c00117 	ldw	r7,4(r20)
   441b0:	84000044 	addi	r16,r16,1
   441b4:	004bda40 	call	4bda4 <__muldf3>
   441b8:	a5000204 	addi	r20,r20,8
   441bc:	883ff51e 	bne	r17,zero,44194 <__alt_data_end+0xfffdd094>
   441c0:	d8800f15 	stw	r2,60(sp)
   441c4:	d8c01015 	stw	r3,64(sp)
   441c8:	003c7606 	br	433a4 <__alt_data_end+0xfffdc2a4>
   441cc:	00c00c04 	movi	r3,48
   441d0:	10c00005 	stb	r3,0(r2)
   441d4:	d8c00517 	ldw	r3,20(sp)
   441d8:	bd3fffc3 	ldbu	r20,-1(r23)
   441dc:	18c00044 	addi	r3,r3,1
   441e0:	d8c00515 	stw	r3,20(sp)
   441e4:	003db906 	br	438cc <__alt_data_end+0xfffdc7cc>
   441e8:	89400117 	ldw	r5,4(r17)
   441ec:	e009883a 	mov	r4,fp
   441f0:	00465e40 	call	465e4 <_Balloc>
   441f4:	89800417 	ldw	r6,16(r17)
   441f8:	89400304 	addi	r5,r17,12
   441fc:	11000304 	addi	r4,r2,12
   44200:	31800084 	addi	r6,r6,2
   44204:	318d883a 	add	r6,r6,r6
   44208:	318d883a 	add	r6,r6,r6
   4420c:	1027883a 	mov	r19,r2
   44210:	00462180 	call	46218 <memcpy>
   44214:	01800044 	movi	r6,1
   44218:	980b883a 	mov	r5,r19
   4421c:	e009883a 	mov	r4,fp
   44220:	0046d640 	call	46d64 <__lshift>
   44224:	1029883a 	mov	r20,r2
   44228:	003ecc06 	br	43d5c <__alt_data_end+0xfffdcc5c>
   4422c:	00800e44 	movi	r2,57
   44230:	90809026 	beq	r18,r2,44474 <_dtoa_r+0x152c>
   44234:	92000044 	addi	r8,r18,1
   44238:	003f1f06 	br	43eb8 <__alt_data_end+0xfffdcdb8>
   4423c:	9011883a 	mov	r8,r18
   44240:	8825883a 	mov	r18,r17
   44244:	a023883a 	mov	r17,r20
   44248:	003e2906 	br	43af0 <__alt_data_end+0xfffdc9f0>
   4424c:	002b883a 	mov	r21,zero
   44250:	0023883a 	mov	r17,zero
   44254:	003f5406 	br	43fa8 <__alt_data_end+0xfffdcea8>
   44258:	61bfffc4 	addi	r6,r12,-1
   4425c:	300490fa 	slli	r2,r6,3
   44260:	00c00174 	movhi	r3,5
   44264:	18fea204 	addi	r3,r3,-1400
   44268:	1885883a 	add	r2,r3,r2
   4426c:	11000017 	ldw	r4,0(r2)
   44270:	11400117 	ldw	r5,4(r2)
   44274:	d8800717 	ldw	r2,28(sp)
   44278:	880f883a 	mov	r7,r17
   4427c:	d9801215 	stw	r6,72(sp)
   44280:	800d883a 	mov	r6,r16
   44284:	db001615 	stw	r12,88(sp)
   44288:	15c00044 	addi	r23,r2,1
   4428c:	004bda40 	call	4bda4 <__muldf3>
   44290:	d9401017 	ldw	r5,64(sp)
   44294:	d9000f17 	ldw	r4,60(sp)
   44298:	d8c01515 	stw	r3,84(sp)
   4429c:	d8801415 	stw	r2,80(sp)
   442a0:	004cdb80 	call	4cdb8 <__fixdfsi>
   442a4:	1009883a 	mov	r4,r2
   442a8:	1021883a 	mov	r16,r2
   442ac:	004ce380 	call	4ce38 <__floatsidf>
   442b0:	d9000f17 	ldw	r4,60(sp)
   442b4:	d9401017 	ldw	r5,64(sp)
   442b8:	100d883a 	mov	r6,r2
   442bc:	180f883a 	mov	r7,r3
   442c0:	004c4bc0 	call	4c4bc <__subdf3>
   442c4:	1829883a 	mov	r20,r3
   442c8:	d8c00717 	ldw	r3,28(sp)
   442cc:	84000c04 	addi	r16,r16,48
   442d0:	1023883a 	mov	r17,r2
   442d4:	1c000005 	stb	r16,0(r3)
   442d8:	db001617 	ldw	r12,88(sp)
   442dc:	00800044 	movi	r2,1
   442e0:	60802226 	beq	r12,r2,4436c <_dtoa_r+0x1424>
   442e4:	d9c00717 	ldw	r7,28(sp)
   442e8:	8805883a 	mov	r2,r17
   442ec:	b82b883a 	mov	r21,r23
   442f0:	3b19883a 	add	r12,r7,r12
   442f4:	6023883a 	mov	r17,r12
   442f8:	a007883a 	mov	r3,r20
   442fc:	dc800f15 	stw	r18,60(sp)
   44300:	000d883a 	mov	r6,zero
   44304:	01d00934 	movhi	r7,16420
   44308:	1009883a 	mov	r4,r2
   4430c:	180b883a 	mov	r5,r3
   44310:	004bda40 	call	4bda4 <__muldf3>
   44314:	180b883a 	mov	r5,r3
   44318:	1009883a 	mov	r4,r2
   4431c:	1829883a 	mov	r20,r3
   44320:	1025883a 	mov	r18,r2
   44324:	004cdb80 	call	4cdb8 <__fixdfsi>
   44328:	1009883a 	mov	r4,r2
   4432c:	1021883a 	mov	r16,r2
   44330:	004ce380 	call	4ce38 <__floatsidf>
   44334:	100d883a 	mov	r6,r2
   44338:	180f883a 	mov	r7,r3
   4433c:	9009883a 	mov	r4,r18
   44340:	a00b883a 	mov	r5,r20
   44344:	84000c04 	addi	r16,r16,48
   44348:	004c4bc0 	call	4c4bc <__subdf3>
   4434c:	ad400044 	addi	r21,r21,1
   44350:	ac3fffc5 	stb	r16,-1(r21)
   44354:	ac7fea1e 	bne	r21,r17,44300 <__alt_data_end+0xfffdd200>
   44358:	1023883a 	mov	r17,r2
   4435c:	d8801217 	ldw	r2,72(sp)
   44360:	dc800f17 	ldw	r18,60(sp)
   44364:	1829883a 	mov	r20,r3
   44368:	b8af883a 	add	r23,r23,r2
   4436c:	d9001417 	ldw	r4,80(sp)
   44370:	d9401517 	ldw	r5,84(sp)
   44374:	000d883a 	mov	r6,zero
   44378:	01cff834 	movhi	r7,16352
   4437c:	004a9b80 	call	4a9b8 <__adddf3>
   44380:	880d883a 	mov	r6,r17
   44384:	a00f883a 	mov	r7,r20
   44388:	1009883a 	mov	r4,r2
   4438c:	180b883a 	mov	r5,r3
   44390:	004bcb00 	call	4bcb0 <__ledf2>
   44394:	10003e0e 	bge	r2,zero,44490 <_dtoa_r+0x1548>
   44398:	d9001317 	ldw	r4,76(sp)
   4439c:	bd3fffc3 	ldbu	r20,-1(r23)
   443a0:	d9000515 	stw	r4,20(sp)
   443a4:	003d3b06 	br	43894 <__alt_data_end+0xfffdc794>
   443a8:	0027883a 	mov	r19,zero
   443ac:	003f1b06 	br	4401c <__alt_data_end+0xfffdcf1c>
   443b0:	d8800817 	ldw	r2,32(sp)
   443b4:	11e9c83a 	sub	r20,r2,r7
   443b8:	0005883a 	mov	r2,zero
   443bc:	003d5406 	br	43910 <__alt_data_end+0xfffdc810>
   443c0:	00800044 	movi	r2,1
   443c4:	003dc706 	br	43ae4 <__alt_data_end+0xfffdc9e4>
   443c8:	d8c00217 	ldw	r3,8(sp)
   443cc:	00800d84 	movi	r2,54
   443d0:	dd400a17 	ldw	r21,40(sp)
   443d4:	10c5c83a 	sub	r2,r2,r3
   443d8:	dd000817 	ldw	r20,32(sp)
   443dc:	003d4c06 	br	43910 <__alt_data_end+0xfffdc810>
   443e0:	dc800f15 	stw	r18,60(sp)
   443e4:	dcc01015 	stw	r19,64(sp)
   443e8:	04000084 	movi	r16,2
   443ec:	003bed06 	br	433a4 <__alt_data_end+0xfffdc2a4>
   443f0:	d9000617 	ldw	r4,24(sp)
   443f4:	203f0d26 	beq	r4,zero,4402c <__alt_data_end+0xfffdcf2c>
   443f8:	d9800c17 	ldw	r6,48(sp)
   443fc:	01bcab0e 	bge	zero,r6,436ac <__alt_data_end+0xfffdc5ac>
   44400:	d9401017 	ldw	r5,64(sp)
   44404:	d9000f17 	ldw	r4,60(sp)
   44408:	000d883a 	mov	r6,zero
   4440c:	01d00934 	movhi	r7,16420
   44410:	004bda40 	call	4bda4 <__muldf3>
   44414:	81000044 	addi	r4,r16,1
   44418:	d8800f15 	stw	r2,60(sp)
   4441c:	d8c01015 	stw	r3,64(sp)
   44420:	004ce380 	call	4ce38 <__floatsidf>
   44424:	d9800f17 	ldw	r6,60(sp)
   44428:	d9c01017 	ldw	r7,64(sp)
   4442c:	1009883a 	mov	r4,r2
   44430:	180b883a 	mov	r5,r3
   44434:	004bda40 	call	4bda4 <__muldf3>
   44438:	01d00734 	movhi	r7,16412
   4443c:	000d883a 	mov	r6,zero
   44440:	1009883a 	mov	r4,r2
   44444:	180b883a 	mov	r5,r3
   44448:	004a9b80 	call	4a9b8 <__adddf3>
   4444c:	d9c00517 	ldw	r7,20(sp)
   44450:	047f3034 	movhi	r17,64704
   44454:	1021883a 	mov	r16,r2
   44458:	39ffffc4 	addi	r7,r7,-1
   4445c:	d9c01315 	stw	r7,76(sp)
   44460:	1c63883a 	add	r17,r3,r17
   44464:	db000c17 	ldw	r12,48(sp)
   44468:	003bea06 	br	43414 <__alt_data_end+0xfffdc314>
   4446c:	dc000915 	stw	r16,36(sp)
   44470:	003e0e06 	br	43cac <__alt_data_end+0xfffdcbac>
   44474:	01000e44 	movi	r4,57
   44478:	8825883a 	mov	r18,r17
   4447c:	9dc00044 	addi	r23,r19,1
   44480:	99000005 	stb	r4,0(r19)
   44484:	a023883a 	mov	r17,r20
   44488:	dc000915 	stw	r16,36(sp)
   4448c:	003da406 	br	43b20 <__alt_data_end+0xfffdca20>
   44490:	d9801417 	ldw	r6,80(sp)
   44494:	d9c01517 	ldw	r7,84(sp)
   44498:	0009883a 	mov	r4,zero
   4449c:	014ff834 	movhi	r5,16352
   444a0:	004c4bc0 	call	4c4bc <__subdf3>
   444a4:	880d883a 	mov	r6,r17
   444a8:	a00f883a 	mov	r7,r20
   444ac:	1009883a 	mov	r4,r2
   444b0:	180b883a 	mov	r5,r3
   444b4:	004bbd40 	call	4bbd4 <__gedf2>
   444b8:	00bc7c0e 	bge	zero,r2,436ac <__alt_data_end+0xfffdc5ac>
   444bc:	01000c04 	movi	r4,48
   444c0:	00000106 	br	444c8 <_dtoa_r+0x1580>
   444c4:	102f883a 	mov	r23,r2
   444c8:	b8bfffc4 	addi	r2,r23,-1
   444cc:	10c00007 	ldb	r3,0(r2)
   444d0:	193ffc26 	beq	r3,r4,444c4 <__alt_data_end+0xfffdd3c4>
   444d4:	d9801317 	ldw	r6,76(sp)
   444d8:	d9800515 	stw	r6,20(sp)
   444dc:	003c4406 	br	435f0 <__alt_data_end+0xfffdc4f0>
   444e0:	d9801317 	ldw	r6,76(sp)
   444e4:	d9800515 	stw	r6,20(sp)
   444e8:	003cea06 	br	43894 <__alt_data_end+0xfffdc794>
   444ec:	dd800f17 	ldw	r22,60(sp)
   444f0:	dcc01017 	ldw	r19,64(sp)
   444f4:	dc801217 	ldw	r18,72(sp)
   444f8:	003c6c06 	br	436ac <__alt_data_end+0xfffdc5ac>
   444fc:	903e031e 	bne	r18,zero,43d0c <__alt_data_end+0xfffdcc0c>
   44500:	003ebb06 	br	43ff0 <__alt_data_end+0xfffdcef0>
   44504:	103e6c1e 	bne	r2,zero,43eb8 <__alt_data_end+0xfffdcdb8>
   44508:	4080004c 	andi	r2,r8,1
   4450c:	103e6a26 	beq	r2,zero,43eb8 <__alt_data_end+0xfffdcdb8>
   44510:	003e6606 	br	43eac <__alt_data_end+0xfffdcdac>
   44514:	d8c00317 	ldw	r3,12(sp)
   44518:	00800084 	movi	r2,2
   4451c:	10c02916 	blt	r2,r3,445c4 <_dtoa_r+0x167c>
   44520:	d9000c17 	ldw	r4,48(sp)
   44524:	003e8806 	br	43f48 <__alt_data_end+0xfffdce48>
   44528:	04000084 	movi	r16,2
   4452c:	003b9d06 	br	433a4 <__alt_data_end+0xfffdc2a4>
   44530:	d9001317 	ldw	r4,76(sp)
   44534:	d9000515 	stw	r4,20(sp)
   44538:	003cd606 	br	43894 <__alt_data_end+0xfffdc794>
   4453c:	d8801317 	ldw	r2,76(sp)
   44540:	d8800515 	stw	r2,20(sp)
   44544:	003c2a06 	br	435f0 <__alt_data_end+0xfffdc4f0>
   44548:	d9800317 	ldw	r6,12(sp)
   4454c:	00800084 	movi	r2,2
   44550:	11801516 	blt	r2,r6,445a8 <_dtoa_r+0x1660>
   44554:	d9c00c17 	ldw	r7,48(sp)
   44558:	d9c00615 	stw	r7,24(sp)
   4455c:	003df706 	br	43d3c <__alt_data_end+0xfffdcc3c>
   44560:	193d3926 	beq	r3,r4,43a48 <__alt_data_end+0xfffdc948>
   44564:	00c00f04 	movi	r3,60
   44568:	1885c83a 	sub	r2,r3,r2
   4456c:	003ddf06 	br	43cec <__alt_data_end+0xfffdcbec>
   44570:	e009883a 	mov	r4,fp
   44574:	e0001115 	stw	zero,68(fp)
   44578:	000b883a 	mov	r5,zero
   4457c:	00465e40 	call	465e4 <_Balloc>
   44580:	d8800715 	stw	r2,28(sp)
   44584:	d8c00717 	ldw	r3,28(sp)
   44588:	00bfffc4 	movi	r2,-1
   4458c:	01000044 	movi	r4,1
   44590:	d8800c15 	stw	r2,48(sp)
   44594:	e0c01015 	stw	r3,64(fp)
   44598:	d9000b15 	stw	r4,44(sp)
   4459c:	d8800615 	stw	r2,24(sp)
   445a0:	d8002215 	stw	zero,136(sp)
   445a4:	003c4106 	br	436ac <__alt_data_end+0xfffdc5ac>
   445a8:	d8c00c17 	ldw	r3,48(sp)
   445ac:	d8c00615 	stw	r3,24(sp)
   445b0:	003e7006 	br	43f74 <__alt_data_end+0xfffdce74>
   445b4:	04400044 	movi	r17,1
   445b8:	003b2006 	br	4323c <__alt_data_end+0xfffdc13c>
   445bc:	000b883a 	mov	r5,zero
   445c0:	003b3d06 	br	432b8 <__alt_data_end+0xfffdc1b8>
   445c4:	d8800c17 	ldw	r2,48(sp)
   445c8:	d8800615 	stw	r2,24(sp)
   445cc:	003e6906 	br	43f74 <__alt_data_end+0xfffdce74>

000445d0 <__sflush_r>:
   445d0:	2880030b 	ldhu	r2,12(r5)
   445d4:	defffb04 	addi	sp,sp,-20
   445d8:	dcc00315 	stw	r19,12(sp)
   445dc:	dc400115 	stw	r17,4(sp)
   445e0:	dfc00415 	stw	ra,16(sp)
   445e4:	dc800215 	stw	r18,8(sp)
   445e8:	dc000015 	stw	r16,0(sp)
   445ec:	10c0020c 	andi	r3,r2,8
   445f0:	2823883a 	mov	r17,r5
   445f4:	2027883a 	mov	r19,r4
   445f8:	1800311e 	bne	r3,zero,446c0 <__sflush_r+0xf0>
   445fc:	28c00117 	ldw	r3,4(r5)
   44600:	10820014 	ori	r2,r2,2048
   44604:	2880030d 	sth	r2,12(r5)
   44608:	00c04b0e 	bge	zero,r3,44738 <__sflush_r+0x168>
   4460c:	8a000a17 	ldw	r8,40(r17)
   44610:	40002326 	beq	r8,zero,446a0 <__sflush_r+0xd0>
   44614:	9c000017 	ldw	r16,0(r19)
   44618:	10c4000c 	andi	r3,r2,4096
   4461c:	98000015 	stw	zero,0(r19)
   44620:	18004826 	beq	r3,zero,44744 <__sflush_r+0x174>
   44624:	89801417 	ldw	r6,80(r17)
   44628:	10c0010c 	andi	r3,r2,4
   4462c:	18000626 	beq	r3,zero,44648 <__sflush_r+0x78>
   44630:	88c00117 	ldw	r3,4(r17)
   44634:	88800c17 	ldw	r2,48(r17)
   44638:	30cdc83a 	sub	r6,r6,r3
   4463c:	10000226 	beq	r2,zero,44648 <__sflush_r+0x78>
   44640:	88800f17 	ldw	r2,60(r17)
   44644:	308dc83a 	sub	r6,r6,r2
   44648:	89400717 	ldw	r5,28(r17)
   4464c:	000f883a 	mov	r7,zero
   44650:	9809883a 	mov	r4,r19
   44654:	403ee83a 	callr	r8
   44658:	00ffffc4 	movi	r3,-1
   4465c:	10c04426 	beq	r2,r3,44770 <__sflush_r+0x1a0>
   44660:	88c0030b 	ldhu	r3,12(r17)
   44664:	89000417 	ldw	r4,16(r17)
   44668:	88000115 	stw	zero,4(r17)
   4466c:	197dffcc 	andi	r5,r3,63487
   44670:	8940030d 	sth	r5,12(r17)
   44674:	89000015 	stw	r4,0(r17)
   44678:	18c4000c 	andi	r3,r3,4096
   4467c:	18002c1e 	bne	r3,zero,44730 <__sflush_r+0x160>
   44680:	89400c17 	ldw	r5,48(r17)
   44684:	9c000015 	stw	r16,0(r19)
   44688:	28000526 	beq	r5,zero,446a0 <__sflush_r+0xd0>
   4468c:	88801004 	addi	r2,r17,64
   44690:	28800226 	beq	r5,r2,4469c <__sflush_r+0xcc>
   44694:	9809883a 	mov	r4,r19
   44698:	0044d3c0 	call	44d3c <_free_r>
   4469c:	88000c15 	stw	zero,48(r17)
   446a0:	0005883a 	mov	r2,zero
   446a4:	dfc00417 	ldw	ra,16(sp)
   446a8:	dcc00317 	ldw	r19,12(sp)
   446ac:	dc800217 	ldw	r18,8(sp)
   446b0:	dc400117 	ldw	r17,4(sp)
   446b4:	dc000017 	ldw	r16,0(sp)
   446b8:	dec00504 	addi	sp,sp,20
   446bc:	f800283a 	ret
   446c0:	2c800417 	ldw	r18,16(r5)
   446c4:	903ff626 	beq	r18,zero,446a0 <__alt_data_end+0xfffdd5a0>
   446c8:	2c000017 	ldw	r16,0(r5)
   446cc:	108000cc 	andi	r2,r2,3
   446d0:	2c800015 	stw	r18,0(r5)
   446d4:	84a1c83a 	sub	r16,r16,r18
   446d8:	1000131e 	bne	r2,zero,44728 <__sflush_r+0x158>
   446dc:	28800517 	ldw	r2,20(r5)
   446e0:	88800215 	stw	r2,8(r17)
   446e4:	04000316 	blt	zero,r16,446f4 <__sflush_r+0x124>
   446e8:	003fed06 	br	446a0 <__alt_data_end+0xfffdd5a0>
   446ec:	90a5883a 	add	r18,r18,r2
   446f0:	043feb0e 	bge	zero,r16,446a0 <__alt_data_end+0xfffdd5a0>
   446f4:	88800917 	ldw	r2,36(r17)
   446f8:	89400717 	ldw	r5,28(r17)
   446fc:	800f883a 	mov	r7,r16
   44700:	900d883a 	mov	r6,r18
   44704:	9809883a 	mov	r4,r19
   44708:	103ee83a 	callr	r2
   4470c:	80a1c83a 	sub	r16,r16,r2
   44710:	00bff616 	blt	zero,r2,446ec <__alt_data_end+0xfffdd5ec>
   44714:	88c0030b 	ldhu	r3,12(r17)
   44718:	00bfffc4 	movi	r2,-1
   4471c:	18c01014 	ori	r3,r3,64
   44720:	88c0030d 	sth	r3,12(r17)
   44724:	003fdf06 	br	446a4 <__alt_data_end+0xfffdd5a4>
   44728:	0005883a 	mov	r2,zero
   4472c:	003fec06 	br	446e0 <__alt_data_end+0xfffdd5e0>
   44730:	88801415 	stw	r2,80(r17)
   44734:	003fd206 	br	44680 <__alt_data_end+0xfffdd580>
   44738:	28c00f17 	ldw	r3,60(r5)
   4473c:	00ffb316 	blt	zero,r3,4460c <__alt_data_end+0xfffdd50c>
   44740:	003fd706 	br	446a0 <__alt_data_end+0xfffdd5a0>
   44744:	89400717 	ldw	r5,28(r17)
   44748:	000d883a 	mov	r6,zero
   4474c:	01c00044 	movi	r7,1
   44750:	9809883a 	mov	r4,r19
   44754:	403ee83a 	callr	r8
   44758:	100d883a 	mov	r6,r2
   4475c:	00bfffc4 	movi	r2,-1
   44760:	30801426 	beq	r6,r2,447b4 <__sflush_r+0x1e4>
   44764:	8880030b 	ldhu	r2,12(r17)
   44768:	8a000a17 	ldw	r8,40(r17)
   4476c:	003fae06 	br	44628 <__alt_data_end+0xfffdd528>
   44770:	98c00017 	ldw	r3,0(r19)
   44774:	183fba26 	beq	r3,zero,44660 <__alt_data_end+0xfffdd560>
   44778:	01000744 	movi	r4,29
   4477c:	19000626 	beq	r3,r4,44798 <__sflush_r+0x1c8>
   44780:	01000584 	movi	r4,22
   44784:	19000426 	beq	r3,r4,44798 <__sflush_r+0x1c8>
   44788:	88c0030b 	ldhu	r3,12(r17)
   4478c:	18c01014 	ori	r3,r3,64
   44790:	88c0030d 	sth	r3,12(r17)
   44794:	003fc306 	br	446a4 <__alt_data_end+0xfffdd5a4>
   44798:	8880030b 	ldhu	r2,12(r17)
   4479c:	88c00417 	ldw	r3,16(r17)
   447a0:	88000115 	stw	zero,4(r17)
   447a4:	10bdffcc 	andi	r2,r2,63487
   447a8:	8880030d 	sth	r2,12(r17)
   447ac:	88c00015 	stw	r3,0(r17)
   447b0:	003fb306 	br	44680 <__alt_data_end+0xfffdd580>
   447b4:	98800017 	ldw	r2,0(r19)
   447b8:	103fea26 	beq	r2,zero,44764 <__alt_data_end+0xfffdd664>
   447bc:	00c00744 	movi	r3,29
   447c0:	10c00226 	beq	r2,r3,447cc <__sflush_r+0x1fc>
   447c4:	00c00584 	movi	r3,22
   447c8:	10c0031e 	bne	r2,r3,447d8 <__sflush_r+0x208>
   447cc:	9c000015 	stw	r16,0(r19)
   447d0:	0005883a 	mov	r2,zero
   447d4:	003fb306 	br	446a4 <__alt_data_end+0xfffdd5a4>
   447d8:	88c0030b 	ldhu	r3,12(r17)
   447dc:	3005883a 	mov	r2,r6
   447e0:	18c01014 	ori	r3,r3,64
   447e4:	88c0030d 	sth	r3,12(r17)
   447e8:	003fae06 	br	446a4 <__alt_data_end+0xfffdd5a4>

000447ec <_fflush_r>:
   447ec:	defffd04 	addi	sp,sp,-12
   447f0:	dc000115 	stw	r16,4(sp)
   447f4:	dfc00215 	stw	ra,8(sp)
   447f8:	2021883a 	mov	r16,r4
   447fc:	20000226 	beq	r4,zero,44808 <_fflush_r+0x1c>
   44800:	20800e17 	ldw	r2,56(r4)
   44804:	10000c26 	beq	r2,zero,44838 <_fflush_r+0x4c>
   44808:	2880030f 	ldh	r2,12(r5)
   4480c:	1000051e 	bne	r2,zero,44824 <_fflush_r+0x38>
   44810:	0005883a 	mov	r2,zero
   44814:	dfc00217 	ldw	ra,8(sp)
   44818:	dc000117 	ldw	r16,4(sp)
   4481c:	dec00304 	addi	sp,sp,12
   44820:	f800283a 	ret
   44824:	8009883a 	mov	r4,r16
   44828:	dfc00217 	ldw	ra,8(sp)
   4482c:	dc000117 	ldw	r16,4(sp)
   44830:	dec00304 	addi	sp,sp,12
   44834:	00445d01 	jmpi	445d0 <__sflush_r>
   44838:	d9400015 	stw	r5,0(sp)
   4483c:	0044bc80 	call	44bc8 <__sinit>
   44840:	d9400017 	ldw	r5,0(sp)
   44844:	003ff006 	br	44808 <__alt_data_end+0xfffdd708>

00044848 <fflush>:
   44848:	20000526 	beq	r4,zero,44860 <fflush+0x18>
   4484c:	00800174 	movhi	r2,5
   44850:	1085d304 	addi	r2,r2,5964
   44854:	200b883a 	mov	r5,r4
   44858:	11000017 	ldw	r4,0(r2)
   4485c:	00447ec1 	jmpi	447ec <_fflush_r>
   44860:	00800174 	movhi	r2,5
   44864:	1085d204 	addi	r2,r2,5960
   44868:	11000017 	ldw	r4,0(r2)
   4486c:	01400134 	movhi	r5,4
   44870:	2951fb04 	addi	r5,r5,18412
   44874:	00455cc1 	jmpi	455cc <_fwalk_reent>

00044878 <__fp_unlock>:
   44878:	0005883a 	mov	r2,zero
   4487c:	f800283a 	ret

00044880 <_cleanup_r>:
   44880:	01400174 	movhi	r5,5
   44884:	29662904 	addi	r5,r5,-26460
   44888:	00455cc1 	jmpi	455cc <_fwalk_reent>

0004488c <__sinit.part.1>:
   4488c:	defff704 	addi	sp,sp,-36
   44890:	00c00134 	movhi	r3,4
   44894:	dfc00815 	stw	ra,32(sp)
   44898:	ddc00715 	stw	r23,28(sp)
   4489c:	dd800615 	stw	r22,24(sp)
   448a0:	dd400515 	stw	r21,20(sp)
   448a4:	dd000415 	stw	r20,16(sp)
   448a8:	dcc00315 	stw	r19,12(sp)
   448ac:	dc800215 	stw	r18,8(sp)
   448b0:	dc400115 	stw	r17,4(sp)
   448b4:	dc000015 	stw	r16,0(sp)
   448b8:	18d22004 	addi	r3,r3,18560
   448bc:	24000117 	ldw	r16,4(r4)
   448c0:	20c00f15 	stw	r3,60(r4)
   448c4:	2080bb04 	addi	r2,r4,748
   448c8:	00c000c4 	movi	r3,3
   448cc:	20c0b915 	stw	r3,740(r4)
   448d0:	2080ba15 	stw	r2,744(r4)
   448d4:	2000b815 	stw	zero,736(r4)
   448d8:	05c00204 	movi	r23,8
   448dc:	00800104 	movi	r2,4
   448e0:	2025883a 	mov	r18,r4
   448e4:	b80d883a 	mov	r6,r23
   448e8:	81001704 	addi	r4,r16,92
   448ec:	000b883a 	mov	r5,zero
   448f0:	80000015 	stw	zero,0(r16)
   448f4:	80000115 	stw	zero,4(r16)
   448f8:	80000215 	stw	zero,8(r16)
   448fc:	8080030d 	sth	r2,12(r16)
   44900:	80001915 	stw	zero,100(r16)
   44904:	8000038d 	sth	zero,14(r16)
   44908:	80000415 	stw	zero,16(r16)
   4490c:	80000515 	stw	zero,20(r16)
   44910:	80000615 	stw	zero,24(r16)
   44914:	00464bc0 	call	464bc <memset>
   44918:	05800134 	movhi	r22,4
   4491c:	94400217 	ldw	r17,8(r18)
   44920:	05400134 	movhi	r21,4
   44924:	05000134 	movhi	r20,4
   44928:	04c00134 	movhi	r19,4
   4492c:	b59f5d04 	addi	r22,r22,32116
   44930:	ad5f7404 	addi	r21,r21,32208
   44934:	a51f9304 	addi	r20,r20,32332
   44938:	9cdfaa04 	addi	r19,r19,32424
   4493c:	85800815 	stw	r22,32(r16)
   44940:	85400915 	stw	r21,36(r16)
   44944:	85000a15 	stw	r20,40(r16)
   44948:	84c00b15 	stw	r19,44(r16)
   4494c:	84000715 	stw	r16,28(r16)
   44950:	00800284 	movi	r2,10
   44954:	8880030d 	sth	r2,12(r17)
   44958:	00800044 	movi	r2,1
   4495c:	b80d883a 	mov	r6,r23
   44960:	89001704 	addi	r4,r17,92
   44964:	000b883a 	mov	r5,zero
   44968:	88000015 	stw	zero,0(r17)
   4496c:	88000115 	stw	zero,4(r17)
   44970:	88000215 	stw	zero,8(r17)
   44974:	88001915 	stw	zero,100(r17)
   44978:	8880038d 	sth	r2,14(r17)
   4497c:	88000415 	stw	zero,16(r17)
   44980:	88000515 	stw	zero,20(r17)
   44984:	88000615 	stw	zero,24(r17)
   44988:	00464bc0 	call	464bc <memset>
   4498c:	94000317 	ldw	r16,12(r18)
   44990:	00800484 	movi	r2,18
   44994:	8c400715 	stw	r17,28(r17)
   44998:	8d800815 	stw	r22,32(r17)
   4499c:	8d400915 	stw	r21,36(r17)
   449a0:	8d000a15 	stw	r20,40(r17)
   449a4:	8cc00b15 	stw	r19,44(r17)
   449a8:	8080030d 	sth	r2,12(r16)
   449ac:	00800084 	movi	r2,2
   449b0:	80000015 	stw	zero,0(r16)
   449b4:	80000115 	stw	zero,4(r16)
   449b8:	80000215 	stw	zero,8(r16)
   449bc:	80001915 	stw	zero,100(r16)
   449c0:	8080038d 	sth	r2,14(r16)
   449c4:	80000415 	stw	zero,16(r16)
   449c8:	80000515 	stw	zero,20(r16)
   449cc:	80000615 	stw	zero,24(r16)
   449d0:	b80d883a 	mov	r6,r23
   449d4:	000b883a 	mov	r5,zero
   449d8:	81001704 	addi	r4,r16,92
   449dc:	00464bc0 	call	464bc <memset>
   449e0:	00800044 	movi	r2,1
   449e4:	84000715 	stw	r16,28(r16)
   449e8:	85800815 	stw	r22,32(r16)
   449ec:	85400915 	stw	r21,36(r16)
   449f0:	85000a15 	stw	r20,40(r16)
   449f4:	84c00b15 	stw	r19,44(r16)
   449f8:	90800e15 	stw	r2,56(r18)
   449fc:	dfc00817 	ldw	ra,32(sp)
   44a00:	ddc00717 	ldw	r23,28(sp)
   44a04:	dd800617 	ldw	r22,24(sp)
   44a08:	dd400517 	ldw	r21,20(sp)
   44a0c:	dd000417 	ldw	r20,16(sp)
   44a10:	dcc00317 	ldw	r19,12(sp)
   44a14:	dc800217 	ldw	r18,8(sp)
   44a18:	dc400117 	ldw	r17,4(sp)
   44a1c:	dc000017 	ldw	r16,0(sp)
   44a20:	dec00904 	addi	sp,sp,36
   44a24:	f800283a 	ret

00044a28 <__fp_lock>:
   44a28:	0005883a 	mov	r2,zero
   44a2c:	f800283a 	ret

00044a30 <__sfmoreglue>:
   44a30:	defffc04 	addi	sp,sp,-16
   44a34:	dc400115 	stw	r17,4(sp)
   44a38:	2c7fffc4 	addi	r17,r5,-1
   44a3c:	8c401a24 	muli	r17,r17,104
   44a40:	dc800215 	stw	r18,8(sp)
   44a44:	2825883a 	mov	r18,r5
   44a48:	89401d04 	addi	r5,r17,116
   44a4c:	dc000015 	stw	r16,0(sp)
   44a50:	dfc00315 	stw	ra,12(sp)
   44a54:	00459280 	call	45928 <_malloc_r>
   44a58:	1021883a 	mov	r16,r2
   44a5c:	10000726 	beq	r2,zero,44a7c <__sfmoreglue+0x4c>
   44a60:	11000304 	addi	r4,r2,12
   44a64:	10000015 	stw	zero,0(r2)
   44a68:	14800115 	stw	r18,4(r2)
   44a6c:	11000215 	stw	r4,8(r2)
   44a70:	89801a04 	addi	r6,r17,104
   44a74:	000b883a 	mov	r5,zero
   44a78:	00464bc0 	call	464bc <memset>
   44a7c:	8005883a 	mov	r2,r16
   44a80:	dfc00317 	ldw	ra,12(sp)
   44a84:	dc800217 	ldw	r18,8(sp)
   44a88:	dc400117 	ldw	r17,4(sp)
   44a8c:	dc000017 	ldw	r16,0(sp)
   44a90:	dec00404 	addi	sp,sp,16
   44a94:	f800283a 	ret

00044a98 <__sfp>:
   44a98:	defffb04 	addi	sp,sp,-20
   44a9c:	dc000015 	stw	r16,0(sp)
   44aa0:	04000174 	movhi	r16,5
   44aa4:	8405d204 	addi	r16,r16,5960
   44aa8:	dcc00315 	stw	r19,12(sp)
   44aac:	2027883a 	mov	r19,r4
   44ab0:	81000017 	ldw	r4,0(r16)
   44ab4:	dfc00415 	stw	ra,16(sp)
   44ab8:	dc800215 	stw	r18,8(sp)
   44abc:	20800e17 	ldw	r2,56(r4)
   44ac0:	dc400115 	stw	r17,4(sp)
   44ac4:	1000021e 	bne	r2,zero,44ad0 <__sfp+0x38>
   44ac8:	004488c0 	call	4488c <__sinit.part.1>
   44acc:	81000017 	ldw	r4,0(r16)
   44ad0:	2480b804 	addi	r18,r4,736
   44ad4:	047fffc4 	movi	r17,-1
   44ad8:	91000117 	ldw	r4,4(r18)
   44adc:	94000217 	ldw	r16,8(r18)
   44ae0:	213fffc4 	addi	r4,r4,-1
   44ae4:	20000a16 	blt	r4,zero,44b10 <__sfp+0x78>
   44ae8:	8080030f 	ldh	r2,12(r16)
   44aec:	10000c26 	beq	r2,zero,44b20 <__sfp+0x88>
   44af0:	80c01d04 	addi	r3,r16,116
   44af4:	00000206 	br	44b00 <__sfp+0x68>
   44af8:	18bfe60f 	ldh	r2,-104(r3)
   44afc:	10000826 	beq	r2,zero,44b20 <__sfp+0x88>
   44b00:	213fffc4 	addi	r4,r4,-1
   44b04:	1c3ffd04 	addi	r16,r3,-12
   44b08:	18c01a04 	addi	r3,r3,104
   44b0c:	247ffa1e 	bne	r4,r17,44af8 <__alt_data_end+0xfffdd9f8>
   44b10:	90800017 	ldw	r2,0(r18)
   44b14:	10001d26 	beq	r2,zero,44b8c <__sfp+0xf4>
   44b18:	1025883a 	mov	r18,r2
   44b1c:	003fee06 	br	44ad8 <__alt_data_end+0xfffdd9d8>
   44b20:	00bfffc4 	movi	r2,-1
   44b24:	8080038d 	sth	r2,14(r16)
   44b28:	00800044 	movi	r2,1
   44b2c:	8080030d 	sth	r2,12(r16)
   44b30:	80001915 	stw	zero,100(r16)
   44b34:	80000015 	stw	zero,0(r16)
   44b38:	80000215 	stw	zero,8(r16)
   44b3c:	80000115 	stw	zero,4(r16)
   44b40:	80000415 	stw	zero,16(r16)
   44b44:	80000515 	stw	zero,20(r16)
   44b48:	80000615 	stw	zero,24(r16)
   44b4c:	01800204 	movi	r6,8
   44b50:	000b883a 	mov	r5,zero
   44b54:	81001704 	addi	r4,r16,92
   44b58:	00464bc0 	call	464bc <memset>
   44b5c:	8005883a 	mov	r2,r16
   44b60:	80000c15 	stw	zero,48(r16)
   44b64:	80000d15 	stw	zero,52(r16)
   44b68:	80001115 	stw	zero,68(r16)
   44b6c:	80001215 	stw	zero,72(r16)
   44b70:	dfc00417 	ldw	ra,16(sp)
   44b74:	dcc00317 	ldw	r19,12(sp)
   44b78:	dc800217 	ldw	r18,8(sp)
   44b7c:	dc400117 	ldw	r17,4(sp)
   44b80:	dc000017 	ldw	r16,0(sp)
   44b84:	dec00504 	addi	sp,sp,20
   44b88:	f800283a 	ret
   44b8c:	01400104 	movi	r5,4
   44b90:	9809883a 	mov	r4,r19
   44b94:	0044a300 	call	44a30 <__sfmoreglue>
   44b98:	90800015 	stw	r2,0(r18)
   44b9c:	103fde1e 	bne	r2,zero,44b18 <__alt_data_end+0xfffdda18>
   44ba0:	00800304 	movi	r2,12
   44ba4:	98800015 	stw	r2,0(r19)
   44ba8:	0005883a 	mov	r2,zero
   44bac:	003ff006 	br	44b70 <__alt_data_end+0xfffdda70>

00044bb0 <_cleanup>:
   44bb0:	00800174 	movhi	r2,5
   44bb4:	1085d204 	addi	r2,r2,5960
   44bb8:	11000017 	ldw	r4,0(r2)
   44bbc:	01400174 	movhi	r5,5
   44bc0:	29662904 	addi	r5,r5,-26460
   44bc4:	00455cc1 	jmpi	455cc <_fwalk_reent>

00044bc8 <__sinit>:
   44bc8:	20800e17 	ldw	r2,56(r4)
   44bcc:	10000126 	beq	r2,zero,44bd4 <__sinit+0xc>
   44bd0:	f800283a 	ret
   44bd4:	004488c1 	jmpi	4488c <__sinit.part.1>

00044bd8 <__sfp_lock_acquire>:
   44bd8:	f800283a 	ret

00044bdc <__sfp_lock_release>:
   44bdc:	f800283a 	ret

00044be0 <__sinit_lock_acquire>:
   44be0:	f800283a 	ret

00044be4 <__sinit_lock_release>:
   44be4:	f800283a 	ret

00044be8 <__fp_lock_all>:
   44be8:	00800174 	movhi	r2,5
   44bec:	1085d304 	addi	r2,r2,5964
   44bf0:	11000017 	ldw	r4,0(r2)
   44bf4:	01400134 	movhi	r5,4
   44bf8:	29528a04 	addi	r5,r5,18984
   44bfc:	00455081 	jmpi	45508 <_fwalk>

00044c00 <__fp_unlock_all>:
   44c00:	00800174 	movhi	r2,5
   44c04:	1085d304 	addi	r2,r2,5964
   44c08:	11000017 	ldw	r4,0(r2)
   44c0c:	01400134 	movhi	r5,4
   44c10:	29521e04 	addi	r5,r5,18552
   44c14:	00455081 	jmpi	45508 <_fwalk>

00044c18 <_malloc_trim_r>:
   44c18:	defffb04 	addi	sp,sp,-20
   44c1c:	dcc00315 	stw	r19,12(sp)
   44c20:	04c00174 	movhi	r19,5
   44c24:	dc800215 	stw	r18,8(sp)
   44c28:	dc400115 	stw	r17,4(sp)
   44c2c:	dc000015 	stw	r16,0(sp)
   44c30:	dfc00415 	stw	ra,16(sp)
   44c34:	2821883a 	mov	r16,r5
   44c38:	9cc04e04 	addi	r19,r19,312
   44c3c:	2025883a 	mov	r18,r4
   44c40:	004d59c0 	call	4d59c <__malloc_lock>
   44c44:	98800217 	ldw	r2,8(r19)
   44c48:	14400117 	ldw	r17,4(r2)
   44c4c:	00bfff04 	movi	r2,-4
   44c50:	88a2703a 	and	r17,r17,r2
   44c54:	8c21c83a 	sub	r16,r17,r16
   44c58:	8403fbc4 	addi	r16,r16,4079
   44c5c:	8020d33a 	srli	r16,r16,12
   44c60:	0083ffc4 	movi	r2,4095
   44c64:	843fffc4 	addi	r16,r16,-1
   44c68:	8020933a 	slli	r16,r16,12
   44c6c:	1400060e 	bge	r2,r16,44c88 <_malloc_trim_r+0x70>
   44c70:	000b883a 	mov	r5,zero
   44c74:	9009883a 	mov	r4,r18
   44c78:	0047d200 	call	47d20 <_sbrk_r>
   44c7c:	98c00217 	ldw	r3,8(r19)
   44c80:	1c47883a 	add	r3,r3,r17
   44c84:	10c00a26 	beq	r2,r3,44cb0 <_malloc_trim_r+0x98>
   44c88:	9009883a 	mov	r4,r18
   44c8c:	004d5c00 	call	4d5c0 <__malloc_unlock>
   44c90:	0005883a 	mov	r2,zero
   44c94:	dfc00417 	ldw	ra,16(sp)
   44c98:	dcc00317 	ldw	r19,12(sp)
   44c9c:	dc800217 	ldw	r18,8(sp)
   44ca0:	dc400117 	ldw	r17,4(sp)
   44ca4:	dc000017 	ldw	r16,0(sp)
   44ca8:	dec00504 	addi	sp,sp,20
   44cac:	f800283a 	ret
   44cb0:	040bc83a 	sub	r5,zero,r16
   44cb4:	9009883a 	mov	r4,r18
   44cb8:	0047d200 	call	47d20 <_sbrk_r>
   44cbc:	00ffffc4 	movi	r3,-1
   44cc0:	10c00d26 	beq	r2,r3,44cf8 <_malloc_trim_r+0xe0>
   44cc4:	00c00174 	movhi	r3,5
   44cc8:	18ccab04 	addi	r3,r3,12972
   44ccc:	18800017 	ldw	r2,0(r3)
   44cd0:	99000217 	ldw	r4,8(r19)
   44cd4:	8c23c83a 	sub	r17,r17,r16
   44cd8:	8c400054 	ori	r17,r17,1
   44cdc:	1421c83a 	sub	r16,r2,r16
   44ce0:	24400115 	stw	r17,4(r4)
   44ce4:	9009883a 	mov	r4,r18
   44ce8:	1c000015 	stw	r16,0(r3)
   44cec:	004d5c00 	call	4d5c0 <__malloc_unlock>
   44cf0:	00800044 	movi	r2,1
   44cf4:	003fe706 	br	44c94 <__alt_data_end+0xfffddb94>
   44cf8:	000b883a 	mov	r5,zero
   44cfc:	9009883a 	mov	r4,r18
   44d00:	0047d200 	call	47d20 <_sbrk_r>
   44d04:	99000217 	ldw	r4,8(r19)
   44d08:	014003c4 	movi	r5,15
   44d0c:	1107c83a 	sub	r3,r2,r4
   44d10:	28ffdd0e 	bge	r5,r3,44c88 <__alt_data_end+0xfffddb88>
   44d14:	01400174 	movhi	r5,5
   44d18:	2945d504 	addi	r5,r5,5972
   44d1c:	29400017 	ldw	r5,0(r5)
   44d20:	18c00054 	ori	r3,r3,1
   44d24:	20c00115 	stw	r3,4(r4)
   44d28:	00c00174 	movhi	r3,5
   44d2c:	1145c83a 	sub	r2,r2,r5
   44d30:	18ccab04 	addi	r3,r3,12972
   44d34:	18800015 	stw	r2,0(r3)
   44d38:	003fd306 	br	44c88 <__alt_data_end+0xfffddb88>

00044d3c <_free_r>:
   44d3c:	28004126 	beq	r5,zero,44e44 <_free_r+0x108>
   44d40:	defffd04 	addi	sp,sp,-12
   44d44:	dc400115 	stw	r17,4(sp)
   44d48:	dc000015 	stw	r16,0(sp)
   44d4c:	2023883a 	mov	r17,r4
   44d50:	2821883a 	mov	r16,r5
   44d54:	dfc00215 	stw	ra,8(sp)
   44d58:	004d59c0 	call	4d59c <__malloc_lock>
   44d5c:	81ffff17 	ldw	r7,-4(r16)
   44d60:	00bfff84 	movi	r2,-2
   44d64:	01000174 	movhi	r4,5
   44d68:	81bffe04 	addi	r6,r16,-8
   44d6c:	3884703a 	and	r2,r7,r2
   44d70:	21004e04 	addi	r4,r4,312
   44d74:	308b883a 	add	r5,r6,r2
   44d78:	2a400117 	ldw	r9,4(r5)
   44d7c:	22000217 	ldw	r8,8(r4)
   44d80:	00ffff04 	movi	r3,-4
   44d84:	48c6703a 	and	r3,r9,r3
   44d88:	2a005726 	beq	r5,r8,44ee8 <_free_r+0x1ac>
   44d8c:	28c00115 	stw	r3,4(r5)
   44d90:	39c0004c 	andi	r7,r7,1
   44d94:	3800091e 	bne	r7,zero,44dbc <_free_r+0x80>
   44d98:	823ffe17 	ldw	r8,-8(r16)
   44d9c:	22400204 	addi	r9,r4,8
   44da0:	320dc83a 	sub	r6,r6,r8
   44da4:	31c00217 	ldw	r7,8(r6)
   44da8:	1205883a 	add	r2,r2,r8
   44dac:	3a406526 	beq	r7,r9,44f44 <_free_r+0x208>
   44db0:	32000317 	ldw	r8,12(r6)
   44db4:	3a000315 	stw	r8,12(r7)
   44db8:	41c00215 	stw	r7,8(r8)
   44dbc:	28cf883a 	add	r7,r5,r3
   44dc0:	39c00117 	ldw	r7,4(r7)
   44dc4:	39c0004c 	andi	r7,r7,1
   44dc8:	38003a26 	beq	r7,zero,44eb4 <_free_r+0x178>
   44dcc:	10c00054 	ori	r3,r2,1
   44dd0:	30c00115 	stw	r3,4(r6)
   44dd4:	3087883a 	add	r3,r6,r2
   44dd8:	18800015 	stw	r2,0(r3)
   44ddc:	00c07fc4 	movi	r3,511
   44de0:	18801936 	bltu	r3,r2,44e48 <_free_r+0x10c>
   44de4:	1004d0fa 	srli	r2,r2,3
   44de8:	01c00044 	movi	r7,1
   44dec:	21400117 	ldw	r5,4(r4)
   44df0:	10c00044 	addi	r3,r2,1
   44df4:	18c7883a 	add	r3,r3,r3
   44df8:	1005d0ba 	srai	r2,r2,2
   44dfc:	18c7883a 	add	r3,r3,r3
   44e00:	18c7883a 	add	r3,r3,r3
   44e04:	1907883a 	add	r3,r3,r4
   44e08:	3884983a 	sll	r2,r7,r2
   44e0c:	19c00017 	ldw	r7,0(r3)
   44e10:	1a3ffe04 	addi	r8,r3,-8
   44e14:	1144b03a 	or	r2,r2,r5
   44e18:	32000315 	stw	r8,12(r6)
   44e1c:	31c00215 	stw	r7,8(r6)
   44e20:	20800115 	stw	r2,4(r4)
   44e24:	19800015 	stw	r6,0(r3)
   44e28:	39800315 	stw	r6,12(r7)
   44e2c:	8809883a 	mov	r4,r17
   44e30:	dfc00217 	ldw	ra,8(sp)
   44e34:	dc400117 	ldw	r17,4(sp)
   44e38:	dc000017 	ldw	r16,0(sp)
   44e3c:	dec00304 	addi	sp,sp,12
   44e40:	004d5c01 	jmpi	4d5c0 <__malloc_unlock>
   44e44:	f800283a 	ret
   44e48:	100ad27a 	srli	r5,r2,9
   44e4c:	00c00104 	movi	r3,4
   44e50:	19404a36 	bltu	r3,r5,44f7c <_free_r+0x240>
   44e54:	100ad1ba 	srli	r5,r2,6
   44e58:	28c00e44 	addi	r3,r5,57
   44e5c:	18c7883a 	add	r3,r3,r3
   44e60:	29400e04 	addi	r5,r5,56
   44e64:	18c7883a 	add	r3,r3,r3
   44e68:	18c7883a 	add	r3,r3,r3
   44e6c:	1909883a 	add	r4,r3,r4
   44e70:	20c00017 	ldw	r3,0(r4)
   44e74:	01c00174 	movhi	r7,5
   44e78:	213ffe04 	addi	r4,r4,-8
   44e7c:	39c04e04 	addi	r7,r7,312
   44e80:	20c04426 	beq	r4,r3,44f94 <_free_r+0x258>
   44e84:	01ffff04 	movi	r7,-4
   44e88:	19400117 	ldw	r5,4(r3)
   44e8c:	29ca703a 	and	r5,r5,r7
   44e90:	1140022e 	bgeu	r2,r5,44e9c <_free_r+0x160>
   44e94:	18c00217 	ldw	r3,8(r3)
   44e98:	20fffb1e 	bne	r4,r3,44e88 <__alt_data_end+0xfffddd88>
   44e9c:	19000317 	ldw	r4,12(r3)
   44ea0:	31000315 	stw	r4,12(r6)
   44ea4:	30c00215 	stw	r3,8(r6)
   44ea8:	21800215 	stw	r6,8(r4)
   44eac:	19800315 	stw	r6,12(r3)
   44eb0:	003fde06 	br	44e2c <__alt_data_end+0xfffddd2c>
   44eb4:	29c00217 	ldw	r7,8(r5)
   44eb8:	10c5883a 	add	r2,r2,r3
   44ebc:	00c00174 	movhi	r3,5
   44ec0:	18c05004 	addi	r3,r3,320
   44ec4:	38c03b26 	beq	r7,r3,44fb4 <_free_r+0x278>
   44ec8:	2a000317 	ldw	r8,12(r5)
   44ecc:	11400054 	ori	r5,r2,1
   44ed0:	3087883a 	add	r3,r6,r2
   44ed4:	3a000315 	stw	r8,12(r7)
   44ed8:	41c00215 	stw	r7,8(r8)
   44edc:	31400115 	stw	r5,4(r6)
   44ee0:	18800015 	stw	r2,0(r3)
   44ee4:	003fbd06 	br	44ddc <__alt_data_end+0xfffddcdc>
   44ee8:	39c0004c 	andi	r7,r7,1
   44eec:	10c5883a 	add	r2,r2,r3
   44ef0:	3800071e 	bne	r7,zero,44f10 <_free_r+0x1d4>
   44ef4:	81fffe17 	ldw	r7,-8(r16)
   44ef8:	31cdc83a 	sub	r6,r6,r7
   44efc:	30c00317 	ldw	r3,12(r6)
   44f00:	31400217 	ldw	r5,8(r6)
   44f04:	11c5883a 	add	r2,r2,r7
   44f08:	28c00315 	stw	r3,12(r5)
   44f0c:	19400215 	stw	r5,8(r3)
   44f10:	10c00054 	ori	r3,r2,1
   44f14:	30c00115 	stw	r3,4(r6)
   44f18:	00c00174 	movhi	r3,5
   44f1c:	18c5d604 	addi	r3,r3,5976
   44f20:	18c00017 	ldw	r3,0(r3)
   44f24:	21800215 	stw	r6,8(r4)
   44f28:	10ffc036 	bltu	r2,r3,44e2c <__alt_data_end+0xfffddd2c>
   44f2c:	00800174 	movhi	r2,5
   44f30:	108ca204 	addi	r2,r2,12936
   44f34:	11400017 	ldw	r5,0(r2)
   44f38:	8809883a 	mov	r4,r17
   44f3c:	0044c180 	call	44c18 <_malloc_trim_r>
   44f40:	003fba06 	br	44e2c <__alt_data_end+0xfffddd2c>
   44f44:	28c9883a 	add	r4,r5,r3
   44f48:	21000117 	ldw	r4,4(r4)
   44f4c:	2100004c 	andi	r4,r4,1
   44f50:	2000391e 	bne	r4,zero,45038 <_free_r+0x2fc>
   44f54:	29c00217 	ldw	r7,8(r5)
   44f58:	29000317 	ldw	r4,12(r5)
   44f5c:	1885883a 	add	r2,r3,r2
   44f60:	10c00054 	ori	r3,r2,1
   44f64:	39000315 	stw	r4,12(r7)
   44f68:	21c00215 	stw	r7,8(r4)
   44f6c:	30c00115 	stw	r3,4(r6)
   44f70:	308d883a 	add	r6,r6,r2
   44f74:	30800015 	stw	r2,0(r6)
   44f78:	003fac06 	br	44e2c <__alt_data_end+0xfffddd2c>
   44f7c:	00c00504 	movi	r3,20
   44f80:	19401536 	bltu	r3,r5,44fd8 <_free_r+0x29c>
   44f84:	28c01704 	addi	r3,r5,92
   44f88:	18c7883a 	add	r3,r3,r3
   44f8c:	294016c4 	addi	r5,r5,91
   44f90:	003fb406 	br	44e64 <__alt_data_end+0xfffddd64>
   44f94:	280bd0ba 	srai	r5,r5,2
   44f98:	00c00044 	movi	r3,1
   44f9c:	38800117 	ldw	r2,4(r7)
   44fa0:	194a983a 	sll	r5,r3,r5
   44fa4:	2007883a 	mov	r3,r4
   44fa8:	2884b03a 	or	r2,r5,r2
   44fac:	38800115 	stw	r2,4(r7)
   44fb0:	003fbb06 	br	44ea0 <__alt_data_end+0xfffddda0>
   44fb4:	21800515 	stw	r6,20(r4)
   44fb8:	21800415 	stw	r6,16(r4)
   44fbc:	10c00054 	ori	r3,r2,1
   44fc0:	31c00315 	stw	r7,12(r6)
   44fc4:	31c00215 	stw	r7,8(r6)
   44fc8:	30c00115 	stw	r3,4(r6)
   44fcc:	308d883a 	add	r6,r6,r2
   44fd0:	30800015 	stw	r2,0(r6)
   44fd4:	003f9506 	br	44e2c <__alt_data_end+0xfffddd2c>
   44fd8:	00c01504 	movi	r3,84
   44fdc:	19400536 	bltu	r3,r5,44ff4 <_free_r+0x2b8>
   44fe0:	100ad33a 	srli	r5,r2,12
   44fe4:	28c01bc4 	addi	r3,r5,111
   44fe8:	18c7883a 	add	r3,r3,r3
   44fec:	29401b84 	addi	r5,r5,110
   44ff0:	003f9c06 	br	44e64 <__alt_data_end+0xfffddd64>
   44ff4:	00c05504 	movi	r3,340
   44ff8:	19400536 	bltu	r3,r5,45010 <_free_r+0x2d4>
   44ffc:	100ad3fa 	srli	r5,r2,15
   45000:	28c01e04 	addi	r3,r5,120
   45004:	18c7883a 	add	r3,r3,r3
   45008:	29401dc4 	addi	r5,r5,119
   4500c:	003f9506 	br	44e64 <__alt_data_end+0xfffddd64>
   45010:	00c15504 	movi	r3,1364
   45014:	19400536 	bltu	r3,r5,4502c <_free_r+0x2f0>
   45018:	100ad4ba 	srli	r5,r2,18
   4501c:	28c01f44 	addi	r3,r5,125
   45020:	18c7883a 	add	r3,r3,r3
   45024:	29401f04 	addi	r5,r5,124
   45028:	003f8e06 	br	44e64 <__alt_data_end+0xfffddd64>
   4502c:	00c03f84 	movi	r3,254
   45030:	01401f84 	movi	r5,126
   45034:	003f8b06 	br	44e64 <__alt_data_end+0xfffddd64>
   45038:	10c00054 	ori	r3,r2,1
   4503c:	30c00115 	stw	r3,4(r6)
   45040:	308d883a 	add	r6,r6,r2
   45044:	30800015 	stw	r2,0(r6)
   45048:	003f7806 	br	44e2c <__alt_data_end+0xfffddd2c>

0004504c <__sfvwrite_r>:
   4504c:	30800217 	ldw	r2,8(r6)
   45050:	10006726 	beq	r2,zero,451f0 <__sfvwrite_r+0x1a4>
   45054:	28c0030b 	ldhu	r3,12(r5)
   45058:	defff404 	addi	sp,sp,-48
   4505c:	dd400715 	stw	r21,28(sp)
   45060:	dd000615 	stw	r20,24(sp)
   45064:	dc000215 	stw	r16,8(sp)
   45068:	dfc00b15 	stw	ra,44(sp)
   4506c:	df000a15 	stw	fp,40(sp)
   45070:	ddc00915 	stw	r23,36(sp)
   45074:	dd800815 	stw	r22,32(sp)
   45078:	dcc00515 	stw	r19,20(sp)
   4507c:	dc800415 	stw	r18,16(sp)
   45080:	dc400315 	stw	r17,12(sp)
   45084:	1880020c 	andi	r2,r3,8
   45088:	2821883a 	mov	r16,r5
   4508c:	202b883a 	mov	r21,r4
   45090:	3029883a 	mov	r20,r6
   45094:	10002726 	beq	r2,zero,45134 <__sfvwrite_r+0xe8>
   45098:	28800417 	ldw	r2,16(r5)
   4509c:	10002526 	beq	r2,zero,45134 <__sfvwrite_r+0xe8>
   450a0:	1880008c 	andi	r2,r3,2
   450a4:	a4400017 	ldw	r17,0(r20)
   450a8:	10002a26 	beq	r2,zero,45154 <__sfvwrite_r+0x108>
   450ac:	05a00034 	movhi	r22,32768
   450b0:	0027883a 	mov	r19,zero
   450b4:	0025883a 	mov	r18,zero
   450b8:	b5bf0004 	addi	r22,r22,-1024
   450bc:	980d883a 	mov	r6,r19
   450c0:	a809883a 	mov	r4,r21
   450c4:	90004626 	beq	r18,zero,451e0 <__sfvwrite_r+0x194>
   450c8:	900f883a 	mov	r7,r18
   450cc:	b480022e 	bgeu	r22,r18,450d8 <__sfvwrite_r+0x8c>
   450d0:	01e00034 	movhi	r7,32768
   450d4:	39ff0004 	addi	r7,r7,-1024
   450d8:	80800917 	ldw	r2,36(r16)
   450dc:	81400717 	ldw	r5,28(r16)
   450e0:	103ee83a 	callr	r2
   450e4:	0080570e 	bge	zero,r2,45244 <__sfvwrite_r+0x1f8>
   450e8:	a0c00217 	ldw	r3,8(r20)
   450ec:	98a7883a 	add	r19,r19,r2
   450f0:	90a5c83a 	sub	r18,r18,r2
   450f4:	1885c83a 	sub	r2,r3,r2
   450f8:	a0800215 	stw	r2,8(r20)
   450fc:	103fef1e 	bne	r2,zero,450bc <__alt_data_end+0xfffddfbc>
   45100:	0005883a 	mov	r2,zero
   45104:	dfc00b17 	ldw	ra,44(sp)
   45108:	df000a17 	ldw	fp,40(sp)
   4510c:	ddc00917 	ldw	r23,36(sp)
   45110:	dd800817 	ldw	r22,32(sp)
   45114:	dd400717 	ldw	r21,28(sp)
   45118:	dd000617 	ldw	r20,24(sp)
   4511c:	dcc00517 	ldw	r19,20(sp)
   45120:	dc800417 	ldw	r18,16(sp)
   45124:	dc400317 	ldw	r17,12(sp)
   45128:	dc000217 	ldw	r16,8(sp)
   4512c:	dec00c04 	addi	sp,sp,48
   45130:	f800283a 	ret
   45134:	800b883a 	mov	r5,r16
   45138:	a809883a 	mov	r4,r21
   4513c:	0042bf40 	call	42bf4 <__swsetup_r>
   45140:	1000eb1e 	bne	r2,zero,454f0 <__sfvwrite_r+0x4a4>
   45144:	80c0030b 	ldhu	r3,12(r16)
   45148:	a4400017 	ldw	r17,0(r20)
   4514c:	1880008c 	andi	r2,r3,2
   45150:	103fd61e 	bne	r2,zero,450ac <__alt_data_end+0xfffddfac>
   45154:	1880004c 	andi	r2,r3,1
   45158:	10003f1e 	bne	r2,zero,45258 <__sfvwrite_r+0x20c>
   4515c:	0039883a 	mov	fp,zero
   45160:	0025883a 	mov	r18,zero
   45164:	90001a26 	beq	r18,zero,451d0 <__sfvwrite_r+0x184>
   45168:	1880800c 	andi	r2,r3,512
   4516c:	84c00217 	ldw	r19,8(r16)
   45170:	10002126 	beq	r2,zero,451f8 <__sfvwrite_r+0x1ac>
   45174:	982f883a 	mov	r23,r19
   45178:	94c09336 	bltu	r18,r19,453c8 <__sfvwrite_r+0x37c>
   4517c:	1881200c 	andi	r2,r3,1152
   45180:	10009e1e 	bne	r2,zero,453fc <__sfvwrite_r+0x3b0>
   45184:	81000017 	ldw	r4,0(r16)
   45188:	b80d883a 	mov	r6,r23
   4518c:	e00b883a 	mov	r5,fp
   45190:	00463600 	call	46360 <memmove>
   45194:	80c00217 	ldw	r3,8(r16)
   45198:	81000017 	ldw	r4,0(r16)
   4519c:	9005883a 	mov	r2,r18
   451a0:	1ce7c83a 	sub	r19,r3,r19
   451a4:	25cf883a 	add	r7,r4,r23
   451a8:	84c00215 	stw	r19,8(r16)
   451ac:	81c00015 	stw	r7,0(r16)
   451b0:	a0c00217 	ldw	r3,8(r20)
   451b4:	e0b9883a 	add	fp,fp,r2
   451b8:	90a5c83a 	sub	r18,r18,r2
   451bc:	18a7c83a 	sub	r19,r3,r2
   451c0:	a4c00215 	stw	r19,8(r20)
   451c4:	983fce26 	beq	r19,zero,45100 <__alt_data_end+0xfffde000>
   451c8:	80c0030b 	ldhu	r3,12(r16)
   451cc:	903fe61e 	bne	r18,zero,45168 <__alt_data_end+0xfffde068>
   451d0:	8f000017 	ldw	fp,0(r17)
   451d4:	8c800117 	ldw	r18,4(r17)
   451d8:	8c400204 	addi	r17,r17,8
   451dc:	003fe106 	br	45164 <__alt_data_end+0xfffde064>
   451e0:	8cc00017 	ldw	r19,0(r17)
   451e4:	8c800117 	ldw	r18,4(r17)
   451e8:	8c400204 	addi	r17,r17,8
   451ec:	003fb306 	br	450bc <__alt_data_end+0xfffddfbc>
   451f0:	0005883a 	mov	r2,zero
   451f4:	f800283a 	ret
   451f8:	81000017 	ldw	r4,0(r16)
   451fc:	80800417 	ldw	r2,16(r16)
   45200:	11005736 	bltu	r2,r4,45360 <__sfvwrite_r+0x314>
   45204:	85c00517 	ldw	r23,20(r16)
   45208:	95c05536 	bltu	r18,r23,45360 <__sfvwrite_r+0x314>
   4520c:	00a00034 	movhi	r2,32768
   45210:	10bfffc4 	addi	r2,r2,-1
   45214:	9009883a 	mov	r4,r18
   45218:	1480012e 	bgeu	r2,r18,45220 <__sfvwrite_r+0x1d4>
   4521c:	1009883a 	mov	r4,r2
   45220:	b80b883a 	mov	r5,r23
   45224:	00405780 	call	40578 <__divsi3>
   45228:	15cf383a 	mul	r7,r2,r23
   4522c:	81400717 	ldw	r5,28(r16)
   45230:	80800917 	ldw	r2,36(r16)
   45234:	e00d883a 	mov	r6,fp
   45238:	a809883a 	mov	r4,r21
   4523c:	103ee83a 	callr	r2
   45240:	00bfdb16 	blt	zero,r2,451b0 <__alt_data_end+0xfffde0b0>
   45244:	8080030b 	ldhu	r2,12(r16)
   45248:	10801014 	ori	r2,r2,64
   4524c:	8080030d 	sth	r2,12(r16)
   45250:	00bfffc4 	movi	r2,-1
   45254:	003fab06 	br	45104 <__alt_data_end+0xfffde004>
   45258:	0027883a 	mov	r19,zero
   4525c:	0011883a 	mov	r8,zero
   45260:	0039883a 	mov	fp,zero
   45264:	0025883a 	mov	r18,zero
   45268:	90001f26 	beq	r18,zero,452e8 <__sfvwrite_r+0x29c>
   4526c:	40005a26 	beq	r8,zero,453d8 <__sfvwrite_r+0x38c>
   45270:	982d883a 	mov	r22,r19
   45274:	94c0012e 	bgeu	r18,r19,4527c <__sfvwrite_r+0x230>
   45278:	902d883a 	mov	r22,r18
   4527c:	81000017 	ldw	r4,0(r16)
   45280:	80800417 	ldw	r2,16(r16)
   45284:	b02f883a 	mov	r23,r22
   45288:	81c00517 	ldw	r7,20(r16)
   4528c:	1100032e 	bgeu	r2,r4,4529c <__sfvwrite_r+0x250>
   45290:	80c00217 	ldw	r3,8(r16)
   45294:	38c7883a 	add	r3,r7,r3
   45298:	1d801816 	blt	r3,r22,452fc <__sfvwrite_r+0x2b0>
   4529c:	b1c03e16 	blt	r22,r7,45398 <__sfvwrite_r+0x34c>
   452a0:	80800917 	ldw	r2,36(r16)
   452a4:	81400717 	ldw	r5,28(r16)
   452a8:	e00d883a 	mov	r6,fp
   452ac:	da000115 	stw	r8,4(sp)
   452b0:	a809883a 	mov	r4,r21
   452b4:	103ee83a 	callr	r2
   452b8:	102f883a 	mov	r23,r2
   452bc:	da000117 	ldw	r8,4(sp)
   452c0:	00bfe00e 	bge	zero,r2,45244 <__alt_data_end+0xfffde144>
   452c4:	9de7c83a 	sub	r19,r19,r23
   452c8:	98001f26 	beq	r19,zero,45348 <__sfvwrite_r+0x2fc>
   452cc:	a0800217 	ldw	r2,8(r20)
   452d0:	e5f9883a 	add	fp,fp,r23
   452d4:	95e5c83a 	sub	r18,r18,r23
   452d8:	15efc83a 	sub	r23,r2,r23
   452dc:	a5c00215 	stw	r23,8(r20)
   452e0:	b83f8726 	beq	r23,zero,45100 <__alt_data_end+0xfffde000>
   452e4:	903fe11e 	bne	r18,zero,4526c <__alt_data_end+0xfffde16c>
   452e8:	8f000017 	ldw	fp,0(r17)
   452ec:	8c800117 	ldw	r18,4(r17)
   452f0:	0011883a 	mov	r8,zero
   452f4:	8c400204 	addi	r17,r17,8
   452f8:	003fdb06 	br	45268 <__alt_data_end+0xfffde168>
   452fc:	180d883a 	mov	r6,r3
   45300:	e00b883a 	mov	r5,fp
   45304:	da000115 	stw	r8,4(sp)
   45308:	d8c00015 	stw	r3,0(sp)
   4530c:	00463600 	call	46360 <memmove>
   45310:	d8c00017 	ldw	r3,0(sp)
   45314:	80800017 	ldw	r2,0(r16)
   45318:	800b883a 	mov	r5,r16
   4531c:	a809883a 	mov	r4,r21
   45320:	10c5883a 	add	r2,r2,r3
   45324:	80800015 	stw	r2,0(r16)
   45328:	d8c00015 	stw	r3,0(sp)
   4532c:	00447ec0 	call	447ec <_fflush_r>
   45330:	d8c00017 	ldw	r3,0(sp)
   45334:	da000117 	ldw	r8,4(sp)
   45338:	103fc21e 	bne	r2,zero,45244 <__alt_data_end+0xfffde144>
   4533c:	182f883a 	mov	r23,r3
   45340:	9de7c83a 	sub	r19,r19,r23
   45344:	983fe11e 	bne	r19,zero,452cc <__alt_data_end+0xfffde1cc>
   45348:	800b883a 	mov	r5,r16
   4534c:	a809883a 	mov	r4,r21
   45350:	00447ec0 	call	447ec <_fflush_r>
   45354:	103fbb1e 	bne	r2,zero,45244 <__alt_data_end+0xfffde144>
   45358:	0011883a 	mov	r8,zero
   4535c:	003fdb06 	br	452cc <__alt_data_end+0xfffde1cc>
   45360:	94c0012e 	bgeu	r18,r19,45368 <__sfvwrite_r+0x31c>
   45364:	9027883a 	mov	r19,r18
   45368:	980d883a 	mov	r6,r19
   4536c:	e00b883a 	mov	r5,fp
   45370:	00463600 	call	46360 <memmove>
   45374:	80800217 	ldw	r2,8(r16)
   45378:	80c00017 	ldw	r3,0(r16)
   4537c:	14c5c83a 	sub	r2,r2,r19
   45380:	1cc7883a 	add	r3,r3,r19
   45384:	80800215 	stw	r2,8(r16)
   45388:	80c00015 	stw	r3,0(r16)
   4538c:	10004326 	beq	r2,zero,4549c <__sfvwrite_r+0x450>
   45390:	9805883a 	mov	r2,r19
   45394:	003f8606 	br	451b0 <__alt_data_end+0xfffde0b0>
   45398:	b00d883a 	mov	r6,r22
   4539c:	e00b883a 	mov	r5,fp
   453a0:	da000115 	stw	r8,4(sp)
   453a4:	00463600 	call	46360 <memmove>
   453a8:	80800217 	ldw	r2,8(r16)
   453ac:	80c00017 	ldw	r3,0(r16)
   453b0:	da000117 	ldw	r8,4(sp)
   453b4:	1585c83a 	sub	r2,r2,r22
   453b8:	1dad883a 	add	r22,r3,r22
   453bc:	80800215 	stw	r2,8(r16)
   453c0:	85800015 	stw	r22,0(r16)
   453c4:	003fbf06 	br	452c4 <__alt_data_end+0xfffde1c4>
   453c8:	81000017 	ldw	r4,0(r16)
   453cc:	9027883a 	mov	r19,r18
   453d0:	902f883a 	mov	r23,r18
   453d4:	003f6c06 	br	45188 <__alt_data_end+0xfffde088>
   453d8:	900d883a 	mov	r6,r18
   453dc:	01400284 	movi	r5,10
   453e0:	e009883a 	mov	r4,fp
   453e4:	00461340 	call	46134 <memchr>
   453e8:	10003e26 	beq	r2,zero,454e4 <__sfvwrite_r+0x498>
   453ec:	10800044 	addi	r2,r2,1
   453f0:	1727c83a 	sub	r19,r2,fp
   453f4:	02000044 	movi	r8,1
   453f8:	003f9d06 	br	45270 <__alt_data_end+0xfffde170>
   453fc:	80800517 	ldw	r2,20(r16)
   45400:	81400417 	ldw	r5,16(r16)
   45404:	81c00017 	ldw	r7,0(r16)
   45408:	10a7883a 	add	r19,r2,r2
   4540c:	9885883a 	add	r2,r19,r2
   45410:	1026d7fa 	srli	r19,r2,31
   45414:	396dc83a 	sub	r22,r7,r5
   45418:	b1000044 	addi	r4,r22,1
   4541c:	9885883a 	add	r2,r19,r2
   45420:	1027d07a 	srai	r19,r2,1
   45424:	2485883a 	add	r2,r4,r18
   45428:	980d883a 	mov	r6,r19
   4542c:	9880022e 	bgeu	r19,r2,45438 <__sfvwrite_r+0x3ec>
   45430:	1027883a 	mov	r19,r2
   45434:	100d883a 	mov	r6,r2
   45438:	18c1000c 	andi	r3,r3,1024
   4543c:	18001c26 	beq	r3,zero,454b0 <__sfvwrite_r+0x464>
   45440:	300b883a 	mov	r5,r6
   45444:	a809883a 	mov	r4,r21
   45448:	00459280 	call	45928 <_malloc_r>
   4544c:	102f883a 	mov	r23,r2
   45450:	10002926 	beq	r2,zero,454f8 <__sfvwrite_r+0x4ac>
   45454:	81400417 	ldw	r5,16(r16)
   45458:	b00d883a 	mov	r6,r22
   4545c:	1009883a 	mov	r4,r2
   45460:	00462180 	call	46218 <memcpy>
   45464:	8080030b 	ldhu	r2,12(r16)
   45468:	00fedfc4 	movi	r3,-1153
   4546c:	10c4703a 	and	r2,r2,r3
   45470:	10802014 	ori	r2,r2,128
   45474:	8080030d 	sth	r2,12(r16)
   45478:	bd89883a 	add	r4,r23,r22
   4547c:	9d8fc83a 	sub	r7,r19,r22
   45480:	85c00415 	stw	r23,16(r16)
   45484:	84c00515 	stw	r19,20(r16)
   45488:	81000015 	stw	r4,0(r16)
   4548c:	9027883a 	mov	r19,r18
   45490:	81c00215 	stw	r7,8(r16)
   45494:	902f883a 	mov	r23,r18
   45498:	003f3b06 	br	45188 <__alt_data_end+0xfffde088>
   4549c:	800b883a 	mov	r5,r16
   454a0:	a809883a 	mov	r4,r21
   454a4:	00447ec0 	call	447ec <_fflush_r>
   454a8:	103fb926 	beq	r2,zero,45390 <__alt_data_end+0xfffde290>
   454ac:	003f6506 	br	45244 <__alt_data_end+0xfffde144>
   454b0:	a809883a 	mov	r4,r21
   454b4:	00477480 	call	47748 <_realloc_r>
   454b8:	102f883a 	mov	r23,r2
   454bc:	103fee1e 	bne	r2,zero,45478 <__alt_data_end+0xfffde378>
   454c0:	81400417 	ldw	r5,16(r16)
   454c4:	a809883a 	mov	r4,r21
   454c8:	0044d3c0 	call	44d3c <_free_r>
   454cc:	8080030b 	ldhu	r2,12(r16)
   454d0:	00ffdfc4 	movi	r3,-129
   454d4:	1884703a 	and	r2,r3,r2
   454d8:	00c00304 	movi	r3,12
   454dc:	a8c00015 	stw	r3,0(r21)
   454e0:	003f5906 	br	45248 <__alt_data_end+0xfffde148>
   454e4:	94c00044 	addi	r19,r18,1
   454e8:	02000044 	movi	r8,1
   454ec:	003f6006 	br	45270 <__alt_data_end+0xfffde170>
   454f0:	00bfffc4 	movi	r2,-1
   454f4:	003f0306 	br	45104 <__alt_data_end+0xfffde004>
   454f8:	00800304 	movi	r2,12
   454fc:	a8800015 	stw	r2,0(r21)
   45500:	8080030b 	ldhu	r2,12(r16)
   45504:	003f5006 	br	45248 <__alt_data_end+0xfffde148>

00045508 <_fwalk>:
   45508:	defff704 	addi	sp,sp,-36
   4550c:	dd000415 	stw	r20,16(sp)
   45510:	dfc00815 	stw	ra,32(sp)
   45514:	ddc00715 	stw	r23,28(sp)
   45518:	dd800615 	stw	r22,24(sp)
   4551c:	dd400515 	stw	r21,20(sp)
   45520:	dcc00315 	stw	r19,12(sp)
   45524:	dc800215 	stw	r18,8(sp)
   45528:	dc400115 	stw	r17,4(sp)
   4552c:	dc000015 	stw	r16,0(sp)
   45530:	2500b804 	addi	r20,r4,736
   45534:	a0002326 	beq	r20,zero,455c4 <_fwalk+0xbc>
   45538:	282b883a 	mov	r21,r5
   4553c:	002f883a 	mov	r23,zero
   45540:	05800044 	movi	r22,1
   45544:	04ffffc4 	movi	r19,-1
   45548:	a4400117 	ldw	r17,4(r20)
   4554c:	a4800217 	ldw	r18,8(r20)
   45550:	8c7fffc4 	addi	r17,r17,-1
   45554:	88000d16 	blt	r17,zero,4558c <_fwalk+0x84>
   45558:	94000304 	addi	r16,r18,12
   4555c:	94800384 	addi	r18,r18,14
   45560:	8080000b 	ldhu	r2,0(r16)
   45564:	8c7fffc4 	addi	r17,r17,-1
   45568:	813ffd04 	addi	r4,r16,-12
   4556c:	b080042e 	bgeu	r22,r2,45580 <_fwalk+0x78>
   45570:	9080000f 	ldh	r2,0(r18)
   45574:	14c00226 	beq	r2,r19,45580 <_fwalk+0x78>
   45578:	a83ee83a 	callr	r21
   4557c:	b8aeb03a 	or	r23,r23,r2
   45580:	84001a04 	addi	r16,r16,104
   45584:	94801a04 	addi	r18,r18,104
   45588:	8cfff51e 	bne	r17,r19,45560 <__alt_data_end+0xfffde460>
   4558c:	a5000017 	ldw	r20,0(r20)
   45590:	a03fed1e 	bne	r20,zero,45548 <__alt_data_end+0xfffde448>
   45594:	b805883a 	mov	r2,r23
   45598:	dfc00817 	ldw	ra,32(sp)
   4559c:	ddc00717 	ldw	r23,28(sp)
   455a0:	dd800617 	ldw	r22,24(sp)
   455a4:	dd400517 	ldw	r21,20(sp)
   455a8:	dd000417 	ldw	r20,16(sp)
   455ac:	dcc00317 	ldw	r19,12(sp)
   455b0:	dc800217 	ldw	r18,8(sp)
   455b4:	dc400117 	ldw	r17,4(sp)
   455b8:	dc000017 	ldw	r16,0(sp)
   455bc:	dec00904 	addi	sp,sp,36
   455c0:	f800283a 	ret
   455c4:	002f883a 	mov	r23,zero
   455c8:	003ff206 	br	45594 <__alt_data_end+0xfffde494>

000455cc <_fwalk_reent>:
   455cc:	defff704 	addi	sp,sp,-36
   455d0:	dd000415 	stw	r20,16(sp)
   455d4:	dfc00815 	stw	ra,32(sp)
   455d8:	ddc00715 	stw	r23,28(sp)
   455dc:	dd800615 	stw	r22,24(sp)
   455e0:	dd400515 	stw	r21,20(sp)
   455e4:	dcc00315 	stw	r19,12(sp)
   455e8:	dc800215 	stw	r18,8(sp)
   455ec:	dc400115 	stw	r17,4(sp)
   455f0:	dc000015 	stw	r16,0(sp)
   455f4:	2500b804 	addi	r20,r4,736
   455f8:	a0002326 	beq	r20,zero,45688 <_fwalk_reent+0xbc>
   455fc:	282b883a 	mov	r21,r5
   45600:	2027883a 	mov	r19,r4
   45604:	002f883a 	mov	r23,zero
   45608:	05800044 	movi	r22,1
   4560c:	04bfffc4 	movi	r18,-1
   45610:	a4400117 	ldw	r17,4(r20)
   45614:	a4000217 	ldw	r16,8(r20)
   45618:	8c7fffc4 	addi	r17,r17,-1
   4561c:	88000c16 	blt	r17,zero,45650 <_fwalk_reent+0x84>
   45620:	84000304 	addi	r16,r16,12
   45624:	8080000b 	ldhu	r2,0(r16)
   45628:	8c7fffc4 	addi	r17,r17,-1
   4562c:	817ffd04 	addi	r5,r16,-12
   45630:	b080052e 	bgeu	r22,r2,45648 <_fwalk_reent+0x7c>
   45634:	8080008f 	ldh	r2,2(r16)
   45638:	9809883a 	mov	r4,r19
   4563c:	14800226 	beq	r2,r18,45648 <_fwalk_reent+0x7c>
   45640:	a83ee83a 	callr	r21
   45644:	b8aeb03a 	or	r23,r23,r2
   45648:	84001a04 	addi	r16,r16,104
   4564c:	8cbff51e 	bne	r17,r18,45624 <__alt_data_end+0xfffde524>
   45650:	a5000017 	ldw	r20,0(r20)
   45654:	a03fee1e 	bne	r20,zero,45610 <__alt_data_end+0xfffde510>
   45658:	b805883a 	mov	r2,r23
   4565c:	dfc00817 	ldw	ra,32(sp)
   45660:	ddc00717 	ldw	r23,28(sp)
   45664:	dd800617 	ldw	r22,24(sp)
   45668:	dd400517 	ldw	r21,20(sp)
   4566c:	dd000417 	ldw	r20,16(sp)
   45670:	dcc00317 	ldw	r19,12(sp)
   45674:	dc800217 	ldw	r18,8(sp)
   45678:	dc400117 	ldw	r17,4(sp)
   4567c:	dc000017 	ldw	r16,0(sp)
   45680:	dec00904 	addi	sp,sp,36
   45684:	f800283a 	ret
   45688:	002f883a 	mov	r23,zero
   4568c:	003ff206 	br	45658 <__alt_data_end+0xfffde558>

00045690 <_setlocale_r>:
   45690:	30001b26 	beq	r6,zero,45700 <_setlocale_r+0x70>
   45694:	01400174 	movhi	r5,5
   45698:	defffe04 	addi	sp,sp,-8
   4569c:	297e8804 	addi	r5,r5,-1504
   456a0:	3009883a 	mov	r4,r6
   456a4:	dc000015 	stw	r16,0(sp)
   456a8:	dfc00115 	stw	ra,4(sp)
   456ac:	3021883a 	mov	r16,r6
   456b0:	0047eb00 	call	47eb0 <strcmp>
   456b4:	1000061e 	bne	r2,zero,456d0 <_setlocale_r+0x40>
   456b8:	00800174 	movhi	r2,5
   456bc:	10be8704 	addi	r2,r2,-1508
   456c0:	dfc00117 	ldw	ra,4(sp)
   456c4:	dc000017 	ldw	r16,0(sp)
   456c8:	dec00204 	addi	sp,sp,8
   456cc:	f800283a 	ret
   456d0:	01400174 	movhi	r5,5
   456d4:	297e8704 	addi	r5,r5,-1508
   456d8:	8009883a 	mov	r4,r16
   456dc:	0047eb00 	call	47eb0 <strcmp>
   456e0:	103ff526 	beq	r2,zero,456b8 <__alt_data_end+0xfffde5b8>
   456e4:	01400174 	movhi	r5,5
   456e8:	297e7204 	addi	r5,r5,-1592
   456ec:	8009883a 	mov	r4,r16
   456f0:	0047eb00 	call	47eb0 <strcmp>
   456f4:	103ff026 	beq	r2,zero,456b8 <__alt_data_end+0xfffde5b8>
   456f8:	0005883a 	mov	r2,zero
   456fc:	003ff006 	br	456c0 <__alt_data_end+0xfffde5c0>
   45700:	00800174 	movhi	r2,5
   45704:	10be8704 	addi	r2,r2,-1508
   45708:	f800283a 	ret

0004570c <__locale_charset>:
   4570c:	00800174 	movhi	r2,5
   45710:	10803804 	addi	r2,r2,224
   45714:	f800283a 	ret

00045718 <__locale_mb_cur_max>:
   45718:	00800174 	movhi	r2,5
   4571c:	1085d404 	addi	r2,r2,5968
   45720:	10800017 	ldw	r2,0(r2)
   45724:	f800283a 	ret

00045728 <__locale_msgcharset>:
   45728:	00800174 	movhi	r2,5
   4572c:	10803004 	addi	r2,r2,192
   45730:	f800283a 	ret

00045734 <__locale_cjk_lang>:
   45734:	0005883a 	mov	r2,zero
   45738:	f800283a 	ret

0004573c <_localeconv_r>:
   4573c:	00800174 	movhi	r2,5
   45740:	10804004 	addi	r2,r2,256
   45744:	f800283a 	ret

00045748 <setlocale>:
   45748:	00800174 	movhi	r2,5
   4574c:	1085d304 	addi	r2,r2,5964
   45750:	280d883a 	mov	r6,r5
   45754:	200b883a 	mov	r5,r4
   45758:	11000017 	ldw	r4,0(r2)
   4575c:	00456901 	jmpi	45690 <_setlocale_r>

00045760 <localeconv>:
   45760:	00800174 	movhi	r2,5
   45764:	10804004 	addi	r2,r2,256
   45768:	f800283a 	ret

0004576c <__smakebuf_r>:
   4576c:	2880030b 	ldhu	r2,12(r5)
   45770:	10c0008c 	andi	r3,r2,2
   45774:	1800411e 	bne	r3,zero,4587c <__smakebuf_r+0x110>
   45778:	deffec04 	addi	sp,sp,-80
   4577c:	dc000f15 	stw	r16,60(sp)
   45780:	2821883a 	mov	r16,r5
   45784:	2940038f 	ldh	r5,14(r5)
   45788:	dc401015 	stw	r17,64(sp)
   4578c:	dfc01315 	stw	ra,76(sp)
   45790:	dcc01215 	stw	r19,72(sp)
   45794:	dc801115 	stw	r18,68(sp)
   45798:	2023883a 	mov	r17,r4
   4579c:	28001c16 	blt	r5,zero,45810 <__smakebuf_r+0xa4>
   457a0:	d80d883a 	mov	r6,sp
   457a4:	0049bb00 	call	49bb0 <_fstat_r>
   457a8:	10001816 	blt	r2,zero,4580c <__smakebuf_r+0xa0>
   457ac:	d8800117 	ldw	r2,4(sp)
   457b0:	00e00014 	movui	r3,32768
   457b4:	10bc000c 	andi	r2,r2,61440
   457b8:	14c80020 	cmpeqi	r19,r2,8192
   457bc:	10c03726 	beq	r2,r3,4589c <__smakebuf_r+0x130>
   457c0:	80c0030b 	ldhu	r3,12(r16)
   457c4:	18c20014 	ori	r3,r3,2048
   457c8:	80c0030d 	sth	r3,12(r16)
   457cc:	00c80004 	movi	r3,8192
   457d0:	10c0521e 	bne	r2,r3,4591c <__smakebuf_r+0x1b0>
   457d4:	8140038f 	ldh	r5,14(r16)
   457d8:	8809883a 	mov	r4,r17
   457dc:	0049c0c0 	call	49c0c <_isatty_r>
   457e0:	10004c26 	beq	r2,zero,45914 <__smakebuf_r+0x1a8>
   457e4:	8080030b 	ldhu	r2,12(r16)
   457e8:	80c010c4 	addi	r3,r16,67
   457ec:	80c00015 	stw	r3,0(r16)
   457f0:	10800054 	ori	r2,r2,1
   457f4:	8080030d 	sth	r2,12(r16)
   457f8:	00800044 	movi	r2,1
   457fc:	80c00415 	stw	r3,16(r16)
   45800:	80800515 	stw	r2,20(r16)
   45804:	04810004 	movi	r18,1024
   45808:	00000706 	br	45828 <__smakebuf_r+0xbc>
   4580c:	8080030b 	ldhu	r2,12(r16)
   45810:	10c0200c 	andi	r3,r2,128
   45814:	18001f1e 	bne	r3,zero,45894 <__smakebuf_r+0x128>
   45818:	04810004 	movi	r18,1024
   4581c:	10820014 	ori	r2,r2,2048
   45820:	8080030d 	sth	r2,12(r16)
   45824:	0027883a 	mov	r19,zero
   45828:	900b883a 	mov	r5,r18
   4582c:	8809883a 	mov	r4,r17
   45830:	00459280 	call	45928 <_malloc_r>
   45834:	10002c26 	beq	r2,zero,458e8 <__smakebuf_r+0x17c>
   45838:	80c0030b 	ldhu	r3,12(r16)
   4583c:	01000134 	movhi	r4,4
   45840:	21122004 	addi	r4,r4,18560
   45844:	89000f15 	stw	r4,60(r17)
   45848:	18c02014 	ori	r3,r3,128
   4584c:	80c0030d 	sth	r3,12(r16)
   45850:	80800015 	stw	r2,0(r16)
   45854:	80800415 	stw	r2,16(r16)
   45858:	84800515 	stw	r18,20(r16)
   4585c:	98001a1e 	bne	r19,zero,458c8 <__smakebuf_r+0x15c>
   45860:	dfc01317 	ldw	ra,76(sp)
   45864:	dcc01217 	ldw	r19,72(sp)
   45868:	dc801117 	ldw	r18,68(sp)
   4586c:	dc401017 	ldw	r17,64(sp)
   45870:	dc000f17 	ldw	r16,60(sp)
   45874:	dec01404 	addi	sp,sp,80
   45878:	f800283a 	ret
   4587c:	288010c4 	addi	r2,r5,67
   45880:	28800015 	stw	r2,0(r5)
   45884:	28800415 	stw	r2,16(r5)
   45888:	00800044 	movi	r2,1
   4588c:	28800515 	stw	r2,20(r5)
   45890:	f800283a 	ret
   45894:	04801004 	movi	r18,64
   45898:	003fe006 	br	4581c <__alt_data_end+0xfffde71c>
   4589c:	81000a17 	ldw	r4,40(r16)
   458a0:	00c00134 	movhi	r3,4
   458a4:	18df9304 	addi	r3,r3,32332
   458a8:	20ffc51e 	bne	r4,r3,457c0 <__alt_data_end+0xfffde6c0>
   458ac:	8080030b 	ldhu	r2,12(r16)
   458b0:	04810004 	movi	r18,1024
   458b4:	84801315 	stw	r18,76(r16)
   458b8:	1484b03a 	or	r2,r2,r18
   458bc:	8080030d 	sth	r2,12(r16)
   458c0:	0027883a 	mov	r19,zero
   458c4:	003fd806 	br	45828 <__alt_data_end+0xfffde728>
   458c8:	8140038f 	ldh	r5,14(r16)
   458cc:	8809883a 	mov	r4,r17
   458d0:	0049c0c0 	call	49c0c <_isatty_r>
   458d4:	103fe226 	beq	r2,zero,45860 <__alt_data_end+0xfffde760>
   458d8:	8080030b 	ldhu	r2,12(r16)
   458dc:	10800054 	ori	r2,r2,1
   458e0:	8080030d 	sth	r2,12(r16)
   458e4:	003fde06 	br	45860 <__alt_data_end+0xfffde760>
   458e8:	8080030b 	ldhu	r2,12(r16)
   458ec:	10c0800c 	andi	r3,r2,512
   458f0:	183fdb1e 	bne	r3,zero,45860 <__alt_data_end+0xfffde760>
   458f4:	10800094 	ori	r2,r2,2
   458f8:	80c010c4 	addi	r3,r16,67
   458fc:	8080030d 	sth	r2,12(r16)
   45900:	00800044 	movi	r2,1
   45904:	80c00015 	stw	r3,0(r16)
   45908:	80c00415 	stw	r3,16(r16)
   4590c:	80800515 	stw	r2,20(r16)
   45910:	003fd306 	br	45860 <__alt_data_end+0xfffde760>
   45914:	04810004 	movi	r18,1024
   45918:	003fc306 	br	45828 <__alt_data_end+0xfffde728>
   4591c:	0027883a 	mov	r19,zero
   45920:	04810004 	movi	r18,1024
   45924:	003fc006 	br	45828 <__alt_data_end+0xfffde728>

00045928 <_malloc_r>:
   45928:	defff504 	addi	sp,sp,-44
   4592c:	dc800315 	stw	r18,12(sp)
   45930:	dfc00a15 	stw	ra,40(sp)
   45934:	df000915 	stw	fp,36(sp)
   45938:	ddc00815 	stw	r23,32(sp)
   4593c:	dd800715 	stw	r22,28(sp)
   45940:	dd400615 	stw	r21,24(sp)
   45944:	dd000515 	stw	r20,20(sp)
   45948:	dcc00415 	stw	r19,16(sp)
   4594c:	dc400215 	stw	r17,8(sp)
   45950:	dc000115 	stw	r16,4(sp)
   45954:	288002c4 	addi	r2,r5,11
   45958:	00c00584 	movi	r3,22
   4595c:	2025883a 	mov	r18,r4
   45960:	18807f2e 	bgeu	r3,r2,45b60 <_malloc_r+0x238>
   45964:	047ffe04 	movi	r17,-8
   45968:	1462703a 	and	r17,r2,r17
   4596c:	8800a316 	blt	r17,zero,45bfc <_malloc_r+0x2d4>
   45970:	8940a236 	bltu	r17,r5,45bfc <_malloc_r+0x2d4>
   45974:	004d59c0 	call	4d59c <__malloc_lock>
   45978:	00807dc4 	movi	r2,503
   4597c:	1441e92e 	bgeu	r2,r17,46124 <_malloc_r+0x7fc>
   45980:	8804d27a 	srli	r2,r17,9
   45984:	1000a126 	beq	r2,zero,45c0c <_malloc_r+0x2e4>
   45988:	00c00104 	movi	r3,4
   4598c:	18811e36 	bltu	r3,r2,45e08 <_malloc_r+0x4e0>
   45990:	8804d1ba 	srli	r2,r17,6
   45994:	12000e44 	addi	r8,r2,57
   45998:	11c00e04 	addi	r7,r2,56
   4599c:	4209883a 	add	r4,r8,r8
   459a0:	04c00174 	movhi	r19,5
   459a4:	2109883a 	add	r4,r4,r4
   459a8:	9cc04e04 	addi	r19,r19,312
   459ac:	2109883a 	add	r4,r4,r4
   459b0:	9909883a 	add	r4,r19,r4
   459b4:	24000117 	ldw	r16,4(r4)
   459b8:	213ffe04 	addi	r4,r4,-8
   459bc:	24009726 	beq	r4,r16,45c1c <_malloc_r+0x2f4>
   459c0:	80800117 	ldw	r2,4(r16)
   459c4:	01bfff04 	movi	r6,-4
   459c8:	014003c4 	movi	r5,15
   459cc:	1184703a 	and	r2,r2,r6
   459d0:	1447c83a 	sub	r3,r2,r17
   459d4:	28c00716 	blt	r5,r3,459f4 <_malloc_r+0xcc>
   459d8:	1800920e 	bge	r3,zero,45c24 <_malloc_r+0x2fc>
   459dc:	84000317 	ldw	r16,12(r16)
   459e0:	24008e26 	beq	r4,r16,45c1c <_malloc_r+0x2f4>
   459e4:	80800117 	ldw	r2,4(r16)
   459e8:	1184703a 	and	r2,r2,r6
   459ec:	1447c83a 	sub	r3,r2,r17
   459f0:	28fff90e 	bge	r5,r3,459d8 <__alt_data_end+0xfffde8d8>
   459f4:	3809883a 	mov	r4,r7
   459f8:	01800174 	movhi	r6,5
   459fc:	9c000417 	ldw	r16,16(r19)
   45a00:	31804e04 	addi	r6,r6,312
   45a04:	32000204 	addi	r8,r6,8
   45a08:	82013426 	beq	r16,r8,45edc <_malloc_r+0x5b4>
   45a0c:	80c00117 	ldw	r3,4(r16)
   45a10:	00bfff04 	movi	r2,-4
   45a14:	188e703a 	and	r7,r3,r2
   45a18:	3c45c83a 	sub	r2,r7,r17
   45a1c:	00c003c4 	movi	r3,15
   45a20:	18811f16 	blt	r3,r2,45ea0 <_malloc_r+0x578>
   45a24:	32000515 	stw	r8,20(r6)
   45a28:	32000415 	stw	r8,16(r6)
   45a2c:	10007f0e 	bge	r2,zero,45c2c <_malloc_r+0x304>
   45a30:	00807fc4 	movi	r2,511
   45a34:	11c0fd36 	bltu	r2,r7,45e2c <_malloc_r+0x504>
   45a38:	3806d0fa 	srli	r3,r7,3
   45a3c:	01c00044 	movi	r7,1
   45a40:	30800117 	ldw	r2,4(r6)
   45a44:	19400044 	addi	r5,r3,1
   45a48:	294b883a 	add	r5,r5,r5
   45a4c:	1807d0ba 	srai	r3,r3,2
   45a50:	294b883a 	add	r5,r5,r5
   45a54:	294b883a 	add	r5,r5,r5
   45a58:	298b883a 	add	r5,r5,r6
   45a5c:	38c6983a 	sll	r3,r7,r3
   45a60:	29c00017 	ldw	r7,0(r5)
   45a64:	2a7ffe04 	addi	r9,r5,-8
   45a68:	1886b03a 	or	r3,r3,r2
   45a6c:	82400315 	stw	r9,12(r16)
   45a70:	81c00215 	stw	r7,8(r16)
   45a74:	30c00115 	stw	r3,4(r6)
   45a78:	2c000015 	stw	r16,0(r5)
   45a7c:	3c000315 	stw	r16,12(r7)
   45a80:	2005d0ba 	srai	r2,r4,2
   45a84:	01400044 	movi	r5,1
   45a88:	288a983a 	sll	r5,r5,r2
   45a8c:	19406f36 	bltu	r3,r5,45c4c <_malloc_r+0x324>
   45a90:	28c4703a 	and	r2,r5,r3
   45a94:	10000a1e 	bne	r2,zero,45ac0 <_malloc_r+0x198>
   45a98:	00bfff04 	movi	r2,-4
   45a9c:	294b883a 	add	r5,r5,r5
   45aa0:	2088703a 	and	r4,r4,r2
   45aa4:	28c4703a 	and	r2,r5,r3
   45aa8:	21000104 	addi	r4,r4,4
   45aac:	1000041e 	bne	r2,zero,45ac0 <_malloc_r+0x198>
   45ab0:	294b883a 	add	r5,r5,r5
   45ab4:	28c4703a 	and	r2,r5,r3
   45ab8:	21000104 	addi	r4,r4,4
   45abc:	103ffc26 	beq	r2,zero,45ab0 <__alt_data_end+0xfffde9b0>
   45ac0:	02bfff04 	movi	r10,-4
   45ac4:	024003c4 	movi	r9,15
   45ac8:	21800044 	addi	r6,r4,1
   45acc:	318d883a 	add	r6,r6,r6
   45ad0:	318d883a 	add	r6,r6,r6
   45ad4:	318d883a 	add	r6,r6,r6
   45ad8:	998d883a 	add	r6,r19,r6
   45adc:	333ffe04 	addi	r12,r6,-8
   45ae0:	2017883a 	mov	r11,r4
   45ae4:	31800104 	addi	r6,r6,4
   45ae8:	34000017 	ldw	r16,0(r6)
   45aec:	31fffd04 	addi	r7,r6,-12
   45af0:	81c0041e 	bne	r16,r7,45b04 <_malloc_r+0x1dc>
   45af4:	0000fb06 	br	45ee4 <_malloc_r+0x5bc>
   45af8:	1801030e 	bge	r3,zero,45f08 <_malloc_r+0x5e0>
   45afc:	84000317 	ldw	r16,12(r16)
   45b00:	81c0f826 	beq	r16,r7,45ee4 <_malloc_r+0x5bc>
   45b04:	80800117 	ldw	r2,4(r16)
   45b08:	1284703a 	and	r2,r2,r10
   45b0c:	1447c83a 	sub	r3,r2,r17
   45b10:	48fff90e 	bge	r9,r3,45af8 <__alt_data_end+0xfffde9f8>
   45b14:	80800317 	ldw	r2,12(r16)
   45b18:	81000217 	ldw	r4,8(r16)
   45b1c:	89400054 	ori	r5,r17,1
   45b20:	81400115 	stw	r5,4(r16)
   45b24:	20800315 	stw	r2,12(r4)
   45b28:	11000215 	stw	r4,8(r2)
   45b2c:	8463883a 	add	r17,r16,r17
   45b30:	9c400515 	stw	r17,20(r19)
   45b34:	9c400415 	stw	r17,16(r19)
   45b38:	18800054 	ori	r2,r3,1
   45b3c:	88800115 	stw	r2,4(r17)
   45b40:	8a000315 	stw	r8,12(r17)
   45b44:	8a000215 	stw	r8,8(r17)
   45b48:	88e3883a 	add	r17,r17,r3
   45b4c:	88c00015 	stw	r3,0(r17)
   45b50:	9009883a 	mov	r4,r18
   45b54:	004d5c00 	call	4d5c0 <__malloc_unlock>
   45b58:	80800204 	addi	r2,r16,8
   45b5c:	00001b06 	br	45bcc <_malloc_r+0x2a4>
   45b60:	04400404 	movi	r17,16
   45b64:	89402536 	bltu	r17,r5,45bfc <_malloc_r+0x2d4>
   45b68:	004d59c0 	call	4d59c <__malloc_lock>
   45b6c:	00800184 	movi	r2,6
   45b70:	01000084 	movi	r4,2
   45b74:	04c00174 	movhi	r19,5
   45b78:	1085883a 	add	r2,r2,r2
   45b7c:	9cc04e04 	addi	r19,r19,312
   45b80:	1085883a 	add	r2,r2,r2
   45b84:	9885883a 	add	r2,r19,r2
   45b88:	14000117 	ldw	r16,4(r2)
   45b8c:	10fffe04 	addi	r3,r2,-8
   45b90:	80c0d926 	beq	r16,r3,45ef8 <_malloc_r+0x5d0>
   45b94:	80c00117 	ldw	r3,4(r16)
   45b98:	81000317 	ldw	r4,12(r16)
   45b9c:	00bfff04 	movi	r2,-4
   45ba0:	1884703a 	and	r2,r3,r2
   45ba4:	81400217 	ldw	r5,8(r16)
   45ba8:	8085883a 	add	r2,r16,r2
   45bac:	10c00117 	ldw	r3,4(r2)
   45bb0:	29000315 	stw	r4,12(r5)
   45bb4:	21400215 	stw	r5,8(r4)
   45bb8:	18c00054 	ori	r3,r3,1
   45bbc:	10c00115 	stw	r3,4(r2)
   45bc0:	9009883a 	mov	r4,r18
   45bc4:	004d5c00 	call	4d5c0 <__malloc_unlock>
   45bc8:	80800204 	addi	r2,r16,8
   45bcc:	dfc00a17 	ldw	ra,40(sp)
   45bd0:	df000917 	ldw	fp,36(sp)
   45bd4:	ddc00817 	ldw	r23,32(sp)
   45bd8:	dd800717 	ldw	r22,28(sp)
   45bdc:	dd400617 	ldw	r21,24(sp)
   45be0:	dd000517 	ldw	r20,20(sp)
   45be4:	dcc00417 	ldw	r19,16(sp)
   45be8:	dc800317 	ldw	r18,12(sp)
   45bec:	dc400217 	ldw	r17,8(sp)
   45bf0:	dc000117 	ldw	r16,4(sp)
   45bf4:	dec00b04 	addi	sp,sp,44
   45bf8:	f800283a 	ret
   45bfc:	00800304 	movi	r2,12
   45c00:	90800015 	stw	r2,0(r18)
   45c04:	0005883a 	mov	r2,zero
   45c08:	003ff006 	br	45bcc <__alt_data_end+0xfffdeacc>
   45c0c:	01002004 	movi	r4,128
   45c10:	02001004 	movi	r8,64
   45c14:	01c00fc4 	movi	r7,63
   45c18:	003f6106 	br	459a0 <__alt_data_end+0xfffde8a0>
   45c1c:	4009883a 	mov	r4,r8
   45c20:	003f7506 	br	459f8 <__alt_data_end+0xfffde8f8>
   45c24:	81000317 	ldw	r4,12(r16)
   45c28:	003fde06 	br	45ba4 <__alt_data_end+0xfffdeaa4>
   45c2c:	81c5883a 	add	r2,r16,r7
   45c30:	11400117 	ldw	r5,4(r2)
   45c34:	9009883a 	mov	r4,r18
   45c38:	29400054 	ori	r5,r5,1
   45c3c:	11400115 	stw	r5,4(r2)
   45c40:	004d5c00 	call	4d5c0 <__malloc_unlock>
   45c44:	80800204 	addi	r2,r16,8
   45c48:	003fe006 	br	45bcc <__alt_data_end+0xfffdeacc>
   45c4c:	9c000217 	ldw	r16,8(r19)
   45c50:	00bfff04 	movi	r2,-4
   45c54:	85800117 	ldw	r22,4(r16)
   45c58:	b0ac703a 	and	r22,r22,r2
   45c5c:	b4400336 	bltu	r22,r17,45c6c <_malloc_r+0x344>
   45c60:	b445c83a 	sub	r2,r22,r17
   45c64:	00c003c4 	movi	r3,15
   45c68:	18805d16 	blt	r3,r2,45de0 <_malloc_r+0x4b8>
   45c6c:	05c00174 	movhi	r23,5
   45c70:	00800174 	movhi	r2,5
   45c74:	108ca204 	addi	r2,r2,12936
   45c78:	bdc5d504 	addi	r23,r23,5972
   45c7c:	15400017 	ldw	r21,0(r2)
   45c80:	b8c00017 	ldw	r3,0(r23)
   45c84:	00bfffc4 	movi	r2,-1
   45c88:	858d883a 	add	r6,r16,r22
   45c8c:	8d6b883a 	add	r21,r17,r21
   45c90:	1880ea26 	beq	r3,r2,4603c <_malloc_r+0x714>
   45c94:	ad4403c4 	addi	r21,r21,4111
   45c98:	00bc0004 	movi	r2,-4096
   45c9c:	a8aa703a 	and	r21,r21,r2
   45ca0:	a80b883a 	mov	r5,r21
   45ca4:	9009883a 	mov	r4,r18
   45ca8:	d9800015 	stw	r6,0(sp)
   45cac:	0047d200 	call	47d20 <_sbrk_r>
   45cb0:	1029883a 	mov	r20,r2
   45cb4:	00bfffc4 	movi	r2,-1
   45cb8:	d9800017 	ldw	r6,0(sp)
   45cbc:	a080e826 	beq	r20,r2,46060 <_malloc_r+0x738>
   45cc0:	a180a636 	bltu	r20,r6,45f5c <_malloc_r+0x634>
   45cc4:	07000174 	movhi	fp,5
   45cc8:	e70cab04 	addi	fp,fp,12972
   45ccc:	e0800017 	ldw	r2,0(fp)
   45cd0:	a887883a 	add	r3,r21,r2
   45cd4:	e0c00015 	stw	r3,0(fp)
   45cd8:	3500e626 	beq	r6,r20,46074 <_malloc_r+0x74c>
   45cdc:	b9000017 	ldw	r4,0(r23)
   45ce0:	00bfffc4 	movi	r2,-1
   45ce4:	2080ee26 	beq	r4,r2,460a0 <_malloc_r+0x778>
   45ce8:	a185c83a 	sub	r2,r20,r6
   45cec:	10c5883a 	add	r2,r2,r3
   45cf0:	e0800015 	stw	r2,0(fp)
   45cf4:	a0c001cc 	andi	r3,r20,7
   45cf8:	1800bc26 	beq	r3,zero,45fec <_malloc_r+0x6c4>
   45cfc:	a0e9c83a 	sub	r20,r20,r3
   45d00:	00840204 	movi	r2,4104
   45d04:	a5000204 	addi	r20,r20,8
   45d08:	10c7c83a 	sub	r3,r2,r3
   45d0c:	a545883a 	add	r2,r20,r21
   45d10:	1083ffcc 	andi	r2,r2,4095
   45d14:	18abc83a 	sub	r21,r3,r2
   45d18:	a80b883a 	mov	r5,r21
   45d1c:	9009883a 	mov	r4,r18
   45d20:	0047d200 	call	47d20 <_sbrk_r>
   45d24:	00ffffc4 	movi	r3,-1
   45d28:	10c0e126 	beq	r2,r3,460b0 <_malloc_r+0x788>
   45d2c:	1505c83a 	sub	r2,r2,r20
   45d30:	1545883a 	add	r2,r2,r21
   45d34:	10800054 	ori	r2,r2,1
   45d38:	e0c00017 	ldw	r3,0(fp)
   45d3c:	9d000215 	stw	r20,8(r19)
   45d40:	a0800115 	stw	r2,4(r20)
   45d44:	a8c7883a 	add	r3,r21,r3
   45d48:	e0c00015 	stw	r3,0(fp)
   45d4c:	84c00e26 	beq	r16,r19,45d88 <_malloc_r+0x460>
   45d50:	018003c4 	movi	r6,15
   45d54:	3580a72e 	bgeu	r6,r22,45ff4 <_malloc_r+0x6cc>
   45d58:	81400117 	ldw	r5,4(r16)
   45d5c:	013ffe04 	movi	r4,-8
   45d60:	b0bffd04 	addi	r2,r22,-12
   45d64:	1104703a 	and	r2,r2,r4
   45d68:	2900004c 	andi	r4,r5,1
   45d6c:	2088b03a 	or	r4,r4,r2
   45d70:	81000115 	stw	r4,4(r16)
   45d74:	01400144 	movi	r5,5
   45d78:	8089883a 	add	r4,r16,r2
   45d7c:	21400115 	stw	r5,4(r4)
   45d80:	21400215 	stw	r5,8(r4)
   45d84:	3080cd36 	bltu	r6,r2,460bc <_malloc_r+0x794>
   45d88:	00800174 	movhi	r2,5
   45d8c:	108ca104 	addi	r2,r2,12932
   45d90:	11000017 	ldw	r4,0(r2)
   45d94:	20c0012e 	bgeu	r4,r3,45d9c <_malloc_r+0x474>
   45d98:	10c00015 	stw	r3,0(r2)
   45d9c:	00800174 	movhi	r2,5
   45da0:	108ca004 	addi	r2,r2,12928
   45da4:	11000017 	ldw	r4,0(r2)
   45da8:	9c000217 	ldw	r16,8(r19)
   45dac:	20c0012e 	bgeu	r4,r3,45db4 <_malloc_r+0x48c>
   45db0:	10c00015 	stw	r3,0(r2)
   45db4:	80c00117 	ldw	r3,4(r16)
   45db8:	00bfff04 	movi	r2,-4
   45dbc:	1886703a 	and	r3,r3,r2
   45dc0:	1c45c83a 	sub	r2,r3,r17
   45dc4:	1c400236 	bltu	r3,r17,45dd0 <_malloc_r+0x4a8>
   45dc8:	00c003c4 	movi	r3,15
   45dcc:	18800416 	blt	r3,r2,45de0 <_malloc_r+0x4b8>
   45dd0:	9009883a 	mov	r4,r18
   45dd4:	004d5c00 	call	4d5c0 <__malloc_unlock>
   45dd8:	0005883a 	mov	r2,zero
   45ddc:	003f7b06 	br	45bcc <__alt_data_end+0xfffdeacc>
   45de0:	88c00054 	ori	r3,r17,1
   45de4:	80c00115 	stw	r3,4(r16)
   45de8:	8463883a 	add	r17,r16,r17
   45dec:	10800054 	ori	r2,r2,1
   45df0:	9c400215 	stw	r17,8(r19)
   45df4:	88800115 	stw	r2,4(r17)
   45df8:	9009883a 	mov	r4,r18
   45dfc:	004d5c00 	call	4d5c0 <__malloc_unlock>
   45e00:	80800204 	addi	r2,r16,8
   45e04:	003f7106 	br	45bcc <__alt_data_end+0xfffdeacc>
   45e08:	00c00504 	movi	r3,20
   45e0c:	18804a2e 	bgeu	r3,r2,45f38 <_malloc_r+0x610>
   45e10:	00c01504 	movi	r3,84
   45e14:	18806e36 	bltu	r3,r2,45fd0 <_malloc_r+0x6a8>
   45e18:	8804d33a 	srli	r2,r17,12
   45e1c:	12001bc4 	addi	r8,r2,111
   45e20:	11c01b84 	addi	r7,r2,110
   45e24:	4209883a 	add	r4,r8,r8
   45e28:	003edd06 	br	459a0 <__alt_data_end+0xfffde8a0>
   45e2c:	3804d27a 	srli	r2,r7,9
   45e30:	00c00104 	movi	r3,4
   45e34:	1880442e 	bgeu	r3,r2,45f48 <_malloc_r+0x620>
   45e38:	00c00504 	movi	r3,20
   45e3c:	18808136 	bltu	r3,r2,46044 <_malloc_r+0x71c>
   45e40:	11401704 	addi	r5,r2,92
   45e44:	10c016c4 	addi	r3,r2,91
   45e48:	294b883a 	add	r5,r5,r5
   45e4c:	294b883a 	add	r5,r5,r5
   45e50:	294b883a 	add	r5,r5,r5
   45e54:	994b883a 	add	r5,r19,r5
   45e58:	28800017 	ldw	r2,0(r5)
   45e5c:	01800174 	movhi	r6,5
   45e60:	297ffe04 	addi	r5,r5,-8
   45e64:	31804e04 	addi	r6,r6,312
   45e68:	28806526 	beq	r5,r2,46000 <_malloc_r+0x6d8>
   45e6c:	01bfff04 	movi	r6,-4
   45e70:	10c00117 	ldw	r3,4(r2)
   45e74:	1986703a 	and	r3,r3,r6
   45e78:	38c0022e 	bgeu	r7,r3,45e84 <_malloc_r+0x55c>
   45e7c:	10800217 	ldw	r2,8(r2)
   45e80:	28bffb1e 	bne	r5,r2,45e70 <__alt_data_end+0xfffded70>
   45e84:	11400317 	ldw	r5,12(r2)
   45e88:	98c00117 	ldw	r3,4(r19)
   45e8c:	81400315 	stw	r5,12(r16)
   45e90:	80800215 	stw	r2,8(r16)
   45e94:	2c000215 	stw	r16,8(r5)
   45e98:	14000315 	stw	r16,12(r2)
   45e9c:	003ef806 	br	45a80 <__alt_data_end+0xfffde980>
   45ea0:	88c00054 	ori	r3,r17,1
   45ea4:	80c00115 	stw	r3,4(r16)
   45ea8:	8463883a 	add	r17,r16,r17
   45eac:	34400515 	stw	r17,20(r6)
   45eb0:	34400415 	stw	r17,16(r6)
   45eb4:	10c00054 	ori	r3,r2,1
   45eb8:	8a000315 	stw	r8,12(r17)
   45ebc:	8a000215 	stw	r8,8(r17)
   45ec0:	88c00115 	stw	r3,4(r17)
   45ec4:	88a3883a 	add	r17,r17,r2
   45ec8:	88800015 	stw	r2,0(r17)
   45ecc:	9009883a 	mov	r4,r18
   45ed0:	004d5c00 	call	4d5c0 <__malloc_unlock>
   45ed4:	80800204 	addi	r2,r16,8
   45ed8:	003f3c06 	br	45bcc <__alt_data_end+0xfffdeacc>
   45edc:	30c00117 	ldw	r3,4(r6)
   45ee0:	003ee706 	br	45a80 <__alt_data_end+0xfffde980>
   45ee4:	5ac00044 	addi	r11,r11,1
   45ee8:	588000cc 	andi	r2,r11,3
   45eec:	31800204 	addi	r6,r6,8
   45ef0:	103efd1e 	bne	r2,zero,45ae8 <__alt_data_end+0xfffde9e8>
   45ef4:	00002406 	br	45f88 <_malloc_r+0x660>
   45ef8:	14000317 	ldw	r16,12(r2)
   45efc:	143f251e 	bne	r2,r16,45b94 <__alt_data_end+0xfffdea94>
   45f00:	21000084 	addi	r4,r4,2
   45f04:	003ebc06 	br	459f8 <__alt_data_end+0xfffde8f8>
   45f08:	8085883a 	add	r2,r16,r2
   45f0c:	10c00117 	ldw	r3,4(r2)
   45f10:	81000317 	ldw	r4,12(r16)
   45f14:	81400217 	ldw	r5,8(r16)
   45f18:	18c00054 	ori	r3,r3,1
   45f1c:	10c00115 	stw	r3,4(r2)
   45f20:	29000315 	stw	r4,12(r5)
   45f24:	21400215 	stw	r5,8(r4)
   45f28:	9009883a 	mov	r4,r18
   45f2c:	004d5c00 	call	4d5c0 <__malloc_unlock>
   45f30:	80800204 	addi	r2,r16,8
   45f34:	003f2506 	br	45bcc <__alt_data_end+0xfffdeacc>
   45f38:	12001704 	addi	r8,r2,92
   45f3c:	11c016c4 	addi	r7,r2,91
   45f40:	4209883a 	add	r4,r8,r8
   45f44:	003e9606 	br	459a0 <__alt_data_end+0xfffde8a0>
   45f48:	3804d1ba 	srli	r2,r7,6
   45f4c:	11400e44 	addi	r5,r2,57
   45f50:	10c00e04 	addi	r3,r2,56
   45f54:	294b883a 	add	r5,r5,r5
   45f58:	003fbc06 	br	45e4c <__alt_data_end+0xfffded4c>
   45f5c:	84ff5926 	beq	r16,r19,45cc4 <__alt_data_end+0xfffdebc4>
   45f60:	00800174 	movhi	r2,5
   45f64:	10804e04 	addi	r2,r2,312
   45f68:	14000217 	ldw	r16,8(r2)
   45f6c:	00bfff04 	movi	r2,-4
   45f70:	80c00117 	ldw	r3,4(r16)
   45f74:	1886703a 	and	r3,r3,r2
   45f78:	003f9106 	br	45dc0 <__alt_data_end+0xfffdecc0>
   45f7c:	60800217 	ldw	r2,8(r12)
   45f80:	213fffc4 	addi	r4,r4,-1
   45f84:	1300651e 	bne	r2,r12,4611c <_malloc_r+0x7f4>
   45f88:	208000cc 	andi	r2,r4,3
   45f8c:	633ffe04 	addi	r12,r12,-8
   45f90:	103ffa1e 	bne	r2,zero,45f7c <__alt_data_end+0xfffdee7c>
   45f94:	98800117 	ldw	r2,4(r19)
   45f98:	0146303a 	nor	r3,zero,r5
   45f9c:	1884703a 	and	r2,r3,r2
   45fa0:	98800115 	stw	r2,4(r19)
   45fa4:	294b883a 	add	r5,r5,r5
   45fa8:	117f2836 	bltu	r2,r5,45c4c <__alt_data_end+0xfffdeb4c>
   45fac:	283f2726 	beq	r5,zero,45c4c <__alt_data_end+0xfffdeb4c>
   45fb0:	2886703a 	and	r3,r5,r2
   45fb4:	5809883a 	mov	r4,r11
   45fb8:	183ec31e 	bne	r3,zero,45ac8 <__alt_data_end+0xfffde9c8>
   45fbc:	294b883a 	add	r5,r5,r5
   45fc0:	2886703a 	and	r3,r5,r2
   45fc4:	21000104 	addi	r4,r4,4
   45fc8:	183ffc26 	beq	r3,zero,45fbc <__alt_data_end+0xfffdeebc>
   45fcc:	003ebe06 	br	45ac8 <__alt_data_end+0xfffde9c8>
   45fd0:	00c05504 	movi	r3,340
   45fd4:	18801236 	bltu	r3,r2,46020 <_malloc_r+0x6f8>
   45fd8:	8804d3fa 	srli	r2,r17,15
   45fdc:	12001e04 	addi	r8,r2,120
   45fe0:	11c01dc4 	addi	r7,r2,119
   45fe4:	4209883a 	add	r4,r8,r8
   45fe8:	003e6d06 	br	459a0 <__alt_data_end+0xfffde8a0>
   45fec:	00c40004 	movi	r3,4096
   45ff0:	003f4606 	br	45d0c <__alt_data_end+0xfffdec0c>
   45ff4:	00800044 	movi	r2,1
   45ff8:	a0800115 	stw	r2,4(r20)
   45ffc:	003f7406 	br	45dd0 <__alt_data_end+0xfffdecd0>
   46000:	1805d0ba 	srai	r2,r3,2
   46004:	01c00044 	movi	r7,1
   46008:	30c00117 	ldw	r3,4(r6)
   4600c:	388e983a 	sll	r7,r7,r2
   46010:	2805883a 	mov	r2,r5
   46014:	38c6b03a 	or	r3,r7,r3
   46018:	30c00115 	stw	r3,4(r6)
   4601c:	003f9b06 	br	45e8c <__alt_data_end+0xfffded8c>
   46020:	00c15504 	movi	r3,1364
   46024:	18801a36 	bltu	r3,r2,46090 <_malloc_r+0x768>
   46028:	8804d4ba 	srli	r2,r17,18
   4602c:	12001f44 	addi	r8,r2,125
   46030:	11c01f04 	addi	r7,r2,124
   46034:	4209883a 	add	r4,r8,r8
   46038:	003e5906 	br	459a0 <__alt_data_end+0xfffde8a0>
   4603c:	ad400404 	addi	r21,r21,16
   46040:	003f1706 	br	45ca0 <__alt_data_end+0xfffdeba0>
   46044:	00c01504 	movi	r3,84
   46048:	18802336 	bltu	r3,r2,460d8 <_malloc_r+0x7b0>
   4604c:	3804d33a 	srli	r2,r7,12
   46050:	11401bc4 	addi	r5,r2,111
   46054:	10c01b84 	addi	r3,r2,110
   46058:	294b883a 	add	r5,r5,r5
   4605c:	003f7b06 	br	45e4c <__alt_data_end+0xfffded4c>
   46060:	9c000217 	ldw	r16,8(r19)
   46064:	00bfff04 	movi	r2,-4
   46068:	80c00117 	ldw	r3,4(r16)
   4606c:	1886703a 	and	r3,r3,r2
   46070:	003f5306 	br	45dc0 <__alt_data_end+0xfffdecc0>
   46074:	3083ffcc 	andi	r2,r6,4095
   46078:	103f181e 	bne	r2,zero,45cdc <__alt_data_end+0xfffdebdc>
   4607c:	99000217 	ldw	r4,8(r19)
   46080:	b545883a 	add	r2,r22,r21
   46084:	10800054 	ori	r2,r2,1
   46088:	20800115 	stw	r2,4(r4)
   4608c:	003f3e06 	br	45d88 <__alt_data_end+0xfffdec88>
   46090:	01003f84 	movi	r4,254
   46094:	02001fc4 	movi	r8,127
   46098:	01c01f84 	movi	r7,126
   4609c:	003e4006 	br	459a0 <__alt_data_end+0xfffde8a0>
   460a0:	00800174 	movhi	r2,5
   460a4:	1085d504 	addi	r2,r2,5972
   460a8:	15000015 	stw	r20,0(r2)
   460ac:	003f1106 	br	45cf4 <__alt_data_end+0xfffdebf4>
   460b0:	00800044 	movi	r2,1
   460b4:	002b883a 	mov	r21,zero
   460b8:	003f1f06 	br	45d38 <__alt_data_end+0xfffdec38>
   460bc:	81400204 	addi	r5,r16,8
   460c0:	9009883a 	mov	r4,r18
   460c4:	0044d3c0 	call	44d3c <_free_r>
   460c8:	00800174 	movhi	r2,5
   460cc:	108cab04 	addi	r2,r2,12972
   460d0:	10c00017 	ldw	r3,0(r2)
   460d4:	003f2c06 	br	45d88 <__alt_data_end+0xfffdec88>
   460d8:	00c05504 	movi	r3,340
   460dc:	18800536 	bltu	r3,r2,460f4 <_malloc_r+0x7cc>
   460e0:	3804d3fa 	srli	r2,r7,15
   460e4:	11401e04 	addi	r5,r2,120
   460e8:	10c01dc4 	addi	r3,r2,119
   460ec:	294b883a 	add	r5,r5,r5
   460f0:	003f5606 	br	45e4c <__alt_data_end+0xfffded4c>
   460f4:	00c15504 	movi	r3,1364
   460f8:	18800536 	bltu	r3,r2,46110 <_malloc_r+0x7e8>
   460fc:	3804d4ba 	srli	r2,r7,18
   46100:	11401f44 	addi	r5,r2,125
   46104:	10c01f04 	addi	r3,r2,124
   46108:	294b883a 	add	r5,r5,r5
   4610c:	003f4f06 	br	45e4c <__alt_data_end+0xfffded4c>
   46110:	01403f84 	movi	r5,254
   46114:	00c01f84 	movi	r3,126
   46118:	003f4c06 	br	45e4c <__alt_data_end+0xfffded4c>
   4611c:	98800117 	ldw	r2,4(r19)
   46120:	003fa006 	br	45fa4 <__alt_data_end+0xfffdeea4>
   46124:	8808d0fa 	srli	r4,r17,3
   46128:	20800044 	addi	r2,r4,1
   4612c:	1085883a 	add	r2,r2,r2
   46130:	003e9006 	br	45b74 <__alt_data_end+0xfffdea74>

00046134 <memchr>:
   46134:	208000cc 	andi	r2,r4,3
   46138:	280f883a 	mov	r7,r5
   4613c:	10003426 	beq	r2,zero,46210 <memchr+0xdc>
   46140:	30bfffc4 	addi	r2,r6,-1
   46144:	30001a26 	beq	r6,zero,461b0 <memchr+0x7c>
   46148:	20c00003 	ldbu	r3,0(r4)
   4614c:	29803fcc 	andi	r6,r5,255
   46150:	30c0051e 	bne	r6,r3,46168 <memchr+0x34>
   46154:	00001806 	br	461b8 <memchr+0x84>
   46158:	10001526 	beq	r2,zero,461b0 <memchr+0x7c>
   4615c:	20c00003 	ldbu	r3,0(r4)
   46160:	10bfffc4 	addi	r2,r2,-1
   46164:	30c01426 	beq	r6,r3,461b8 <memchr+0x84>
   46168:	21000044 	addi	r4,r4,1
   4616c:	20c000cc 	andi	r3,r4,3
   46170:	183ff91e 	bne	r3,zero,46158 <__alt_data_end+0xfffdf058>
   46174:	020000c4 	movi	r8,3
   46178:	40801136 	bltu	r8,r2,461c0 <memchr+0x8c>
   4617c:	10000c26 	beq	r2,zero,461b0 <memchr+0x7c>
   46180:	20c00003 	ldbu	r3,0(r4)
   46184:	29403fcc 	andi	r5,r5,255
   46188:	28c00b26 	beq	r5,r3,461b8 <memchr+0x84>
   4618c:	20c00044 	addi	r3,r4,1
   46190:	39803fcc 	andi	r6,r7,255
   46194:	2089883a 	add	r4,r4,r2
   46198:	00000306 	br	461a8 <memchr+0x74>
   4619c:	18c00044 	addi	r3,r3,1
   461a0:	197fffc3 	ldbu	r5,-1(r3)
   461a4:	31400526 	beq	r6,r5,461bc <memchr+0x88>
   461a8:	1805883a 	mov	r2,r3
   461ac:	20fffb1e 	bne	r4,r3,4619c <__alt_data_end+0xfffdf09c>
   461b0:	0005883a 	mov	r2,zero
   461b4:	f800283a 	ret
   461b8:	2005883a 	mov	r2,r4
   461bc:	f800283a 	ret
   461c0:	28c03fcc 	andi	r3,r5,255
   461c4:	1812923a 	slli	r9,r3,8
   461c8:	02ffbff4 	movhi	r11,65279
   461cc:	02a02074 	movhi	r10,32897
   461d0:	48d2b03a 	or	r9,r9,r3
   461d4:	4806943a 	slli	r3,r9,16
   461d8:	5affbfc4 	addi	r11,r11,-257
   461dc:	52a02004 	addi	r10,r10,-32640
   461e0:	48d2b03a 	or	r9,r9,r3
   461e4:	20c00017 	ldw	r3,0(r4)
   461e8:	48c6f03a 	xor	r3,r9,r3
   461ec:	1acd883a 	add	r6,r3,r11
   461f0:	00c6303a 	nor	r3,zero,r3
   461f4:	30c6703a 	and	r3,r6,r3
   461f8:	1a86703a 	and	r3,r3,r10
   461fc:	183fe01e 	bne	r3,zero,46180 <__alt_data_end+0xfffdf080>
   46200:	10bfff04 	addi	r2,r2,-4
   46204:	21000104 	addi	r4,r4,4
   46208:	40bff636 	bltu	r8,r2,461e4 <__alt_data_end+0xfffdf0e4>
   4620c:	003fdb06 	br	4617c <__alt_data_end+0xfffdf07c>
   46210:	3005883a 	mov	r2,r6
   46214:	003fd706 	br	46174 <__alt_data_end+0xfffdf074>

00046218 <memcpy>:
   46218:	defffd04 	addi	sp,sp,-12
   4621c:	dfc00215 	stw	ra,8(sp)
   46220:	dc400115 	stw	r17,4(sp)
   46224:	dc000015 	stw	r16,0(sp)
   46228:	00c003c4 	movi	r3,15
   4622c:	2005883a 	mov	r2,r4
   46230:	1980452e 	bgeu	r3,r6,46348 <memcpy+0x130>
   46234:	2906b03a 	or	r3,r5,r4
   46238:	18c000cc 	andi	r3,r3,3
   4623c:	1800441e 	bne	r3,zero,46350 <memcpy+0x138>
   46240:	347ffc04 	addi	r17,r6,-16
   46244:	8822d13a 	srli	r17,r17,4
   46248:	28c00104 	addi	r3,r5,4
   4624c:	23400104 	addi	r13,r4,4
   46250:	8820913a 	slli	r16,r17,4
   46254:	2b000204 	addi	r12,r5,8
   46258:	22c00204 	addi	r11,r4,8
   4625c:	84000504 	addi	r16,r16,20
   46260:	2a800304 	addi	r10,r5,12
   46264:	22400304 	addi	r9,r4,12
   46268:	2c21883a 	add	r16,r5,r16
   4626c:	2811883a 	mov	r8,r5
   46270:	200f883a 	mov	r7,r4
   46274:	41000017 	ldw	r4,0(r8)
   46278:	1fc00017 	ldw	ra,0(r3)
   4627c:	63c00017 	ldw	r15,0(r12)
   46280:	39000015 	stw	r4,0(r7)
   46284:	53800017 	ldw	r14,0(r10)
   46288:	6fc00015 	stw	ra,0(r13)
   4628c:	5bc00015 	stw	r15,0(r11)
   46290:	4b800015 	stw	r14,0(r9)
   46294:	18c00404 	addi	r3,r3,16
   46298:	39c00404 	addi	r7,r7,16
   4629c:	42000404 	addi	r8,r8,16
   462a0:	6b400404 	addi	r13,r13,16
   462a4:	63000404 	addi	r12,r12,16
   462a8:	5ac00404 	addi	r11,r11,16
   462ac:	52800404 	addi	r10,r10,16
   462b0:	4a400404 	addi	r9,r9,16
   462b4:	1c3fef1e 	bne	r3,r16,46274 <__alt_data_end+0xfffdf174>
   462b8:	89c00044 	addi	r7,r17,1
   462bc:	380e913a 	slli	r7,r7,4
   462c0:	310003cc 	andi	r4,r6,15
   462c4:	02c000c4 	movi	r11,3
   462c8:	11c7883a 	add	r3,r2,r7
   462cc:	29cb883a 	add	r5,r5,r7
   462d0:	5900212e 	bgeu	r11,r4,46358 <memcpy+0x140>
   462d4:	1813883a 	mov	r9,r3
   462d8:	2811883a 	mov	r8,r5
   462dc:	200f883a 	mov	r7,r4
   462e0:	42800017 	ldw	r10,0(r8)
   462e4:	4a400104 	addi	r9,r9,4
   462e8:	39ffff04 	addi	r7,r7,-4
   462ec:	4abfff15 	stw	r10,-4(r9)
   462f0:	42000104 	addi	r8,r8,4
   462f4:	59fffa36 	bltu	r11,r7,462e0 <__alt_data_end+0xfffdf1e0>
   462f8:	213fff04 	addi	r4,r4,-4
   462fc:	2008d0ba 	srli	r4,r4,2
   46300:	318000cc 	andi	r6,r6,3
   46304:	21000044 	addi	r4,r4,1
   46308:	2109883a 	add	r4,r4,r4
   4630c:	2109883a 	add	r4,r4,r4
   46310:	1907883a 	add	r3,r3,r4
   46314:	290b883a 	add	r5,r5,r4
   46318:	30000626 	beq	r6,zero,46334 <memcpy+0x11c>
   4631c:	198d883a 	add	r6,r3,r6
   46320:	29c00003 	ldbu	r7,0(r5)
   46324:	18c00044 	addi	r3,r3,1
   46328:	29400044 	addi	r5,r5,1
   4632c:	19ffffc5 	stb	r7,-1(r3)
   46330:	19bffb1e 	bne	r3,r6,46320 <__alt_data_end+0xfffdf220>
   46334:	dfc00217 	ldw	ra,8(sp)
   46338:	dc400117 	ldw	r17,4(sp)
   4633c:	dc000017 	ldw	r16,0(sp)
   46340:	dec00304 	addi	sp,sp,12
   46344:	f800283a 	ret
   46348:	2007883a 	mov	r3,r4
   4634c:	003ff206 	br	46318 <__alt_data_end+0xfffdf218>
   46350:	2007883a 	mov	r3,r4
   46354:	003ff106 	br	4631c <__alt_data_end+0xfffdf21c>
   46358:	200d883a 	mov	r6,r4
   4635c:	003fee06 	br	46318 <__alt_data_end+0xfffdf218>

00046360 <memmove>:
   46360:	2005883a 	mov	r2,r4
   46364:	29000b2e 	bgeu	r5,r4,46394 <memmove+0x34>
   46368:	298f883a 	add	r7,r5,r6
   4636c:	21c0092e 	bgeu	r4,r7,46394 <memmove+0x34>
   46370:	2187883a 	add	r3,r4,r6
   46374:	198bc83a 	sub	r5,r3,r6
   46378:	30004826 	beq	r6,zero,4649c <memmove+0x13c>
   4637c:	39ffffc4 	addi	r7,r7,-1
   46380:	39000003 	ldbu	r4,0(r7)
   46384:	18ffffc4 	addi	r3,r3,-1
   46388:	19000005 	stb	r4,0(r3)
   4638c:	28fffb1e 	bne	r5,r3,4637c <__alt_data_end+0xfffdf27c>
   46390:	f800283a 	ret
   46394:	00c003c4 	movi	r3,15
   46398:	1980412e 	bgeu	r3,r6,464a0 <memmove+0x140>
   4639c:	2886b03a 	or	r3,r5,r2
   463a0:	18c000cc 	andi	r3,r3,3
   463a4:	1800401e 	bne	r3,zero,464a8 <memmove+0x148>
   463a8:	33fffc04 	addi	r15,r6,-16
   463ac:	781ed13a 	srli	r15,r15,4
   463b0:	28c00104 	addi	r3,r5,4
   463b4:	13400104 	addi	r13,r2,4
   463b8:	781c913a 	slli	r14,r15,4
   463bc:	2b000204 	addi	r12,r5,8
   463c0:	12c00204 	addi	r11,r2,8
   463c4:	73800504 	addi	r14,r14,20
   463c8:	2a800304 	addi	r10,r5,12
   463cc:	12400304 	addi	r9,r2,12
   463d0:	2b9d883a 	add	r14,r5,r14
   463d4:	2811883a 	mov	r8,r5
   463d8:	100f883a 	mov	r7,r2
   463dc:	41000017 	ldw	r4,0(r8)
   463e0:	39c00404 	addi	r7,r7,16
   463e4:	18c00404 	addi	r3,r3,16
   463e8:	393ffc15 	stw	r4,-16(r7)
   463ec:	193ffc17 	ldw	r4,-16(r3)
   463f0:	6b400404 	addi	r13,r13,16
   463f4:	5ac00404 	addi	r11,r11,16
   463f8:	693ffc15 	stw	r4,-16(r13)
   463fc:	61000017 	ldw	r4,0(r12)
   46400:	4a400404 	addi	r9,r9,16
   46404:	42000404 	addi	r8,r8,16
   46408:	593ffc15 	stw	r4,-16(r11)
   4640c:	51000017 	ldw	r4,0(r10)
   46410:	63000404 	addi	r12,r12,16
   46414:	52800404 	addi	r10,r10,16
   46418:	493ffc15 	stw	r4,-16(r9)
   4641c:	1bbfef1e 	bne	r3,r14,463dc <__alt_data_end+0xfffdf2dc>
   46420:	79000044 	addi	r4,r15,1
   46424:	2008913a 	slli	r4,r4,4
   46428:	328003cc 	andi	r10,r6,15
   4642c:	02c000c4 	movi	r11,3
   46430:	1107883a 	add	r3,r2,r4
   46434:	290b883a 	add	r5,r5,r4
   46438:	5a801e2e 	bgeu	r11,r10,464b4 <memmove+0x154>
   4643c:	1813883a 	mov	r9,r3
   46440:	2811883a 	mov	r8,r5
   46444:	500f883a 	mov	r7,r10
   46448:	41000017 	ldw	r4,0(r8)
   4644c:	4a400104 	addi	r9,r9,4
   46450:	39ffff04 	addi	r7,r7,-4
   46454:	493fff15 	stw	r4,-4(r9)
   46458:	42000104 	addi	r8,r8,4
   4645c:	59fffa36 	bltu	r11,r7,46448 <__alt_data_end+0xfffdf348>
   46460:	513fff04 	addi	r4,r10,-4
   46464:	2008d0ba 	srli	r4,r4,2
   46468:	318000cc 	andi	r6,r6,3
   4646c:	21000044 	addi	r4,r4,1
   46470:	2109883a 	add	r4,r4,r4
   46474:	2109883a 	add	r4,r4,r4
   46478:	1907883a 	add	r3,r3,r4
   4647c:	290b883a 	add	r5,r5,r4
   46480:	30000b26 	beq	r6,zero,464b0 <memmove+0x150>
   46484:	198d883a 	add	r6,r3,r6
   46488:	29c00003 	ldbu	r7,0(r5)
   4648c:	18c00044 	addi	r3,r3,1
   46490:	29400044 	addi	r5,r5,1
   46494:	19ffffc5 	stb	r7,-1(r3)
   46498:	19bffb1e 	bne	r3,r6,46488 <__alt_data_end+0xfffdf388>
   4649c:	f800283a 	ret
   464a0:	1007883a 	mov	r3,r2
   464a4:	003ff606 	br	46480 <__alt_data_end+0xfffdf380>
   464a8:	1007883a 	mov	r3,r2
   464ac:	003ff506 	br	46484 <__alt_data_end+0xfffdf384>
   464b0:	f800283a 	ret
   464b4:	500d883a 	mov	r6,r10
   464b8:	003ff106 	br	46480 <__alt_data_end+0xfffdf380>

000464bc <memset>:
   464bc:	20c000cc 	andi	r3,r4,3
   464c0:	2005883a 	mov	r2,r4
   464c4:	18004426 	beq	r3,zero,465d8 <memset+0x11c>
   464c8:	31ffffc4 	addi	r7,r6,-1
   464cc:	30004026 	beq	r6,zero,465d0 <memset+0x114>
   464d0:	2813883a 	mov	r9,r5
   464d4:	200d883a 	mov	r6,r4
   464d8:	2007883a 	mov	r3,r4
   464dc:	00000406 	br	464f0 <memset+0x34>
   464e0:	3a3fffc4 	addi	r8,r7,-1
   464e4:	31800044 	addi	r6,r6,1
   464e8:	38003926 	beq	r7,zero,465d0 <memset+0x114>
   464ec:	400f883a 	mov	r7,r8
   464f0:	18c00044 	addi	r3,r3,1
   464f4:	32400005 	stb	r9,0(r6)
   464f8:	1a0000cc 	andi	r8,r3,3
   464fc:	403ff81e 	bne	r8,zero,464e0 <__alt_data_end+0xfffdf3e0>
   46500:	010000c4 	movi	r4,3
   46504:	21c02d2e 	bgeu	r4,r7,465bc <memset+0x100>
   46508:	29003fcc 	andi	r4,r5,255
   4650c:	200c923a 	slli	r6,r4,8
   46510:	3108b03a 	or	r4,r6,r4
   46514:	200c943a 	slli	r6,r4,16
   46518:	218cb03a 	or	r6,r4,r6
   4651c:	010003c4 	movi	r4,15
   46520:	21c0182e 	bgeu	r4,r7,46584 <memset+0xc8>
   46524:	3b3ffc04 	addi	r12,r7,-16
   46528:	6018d13a 	srli	r12,r12,4
   4652c:	1a000104 	addi	r8,r3,4
   46530:	1ac00204 	addi	r11,r3,8
   46534:	6008913a 	slli	r4,r12,4
   46538:	1a800304 	addi	r10,r3,12
   4653c:	1813883a 	mov	r9,r3
   46540:	21000504 	addi	r4,r4,20
   46544:	1909883a 	add	r4,r3,r4
   46548:	49800015 	stw	r6,0(r9)
   4654c:	41800015 	stw	r6,0(r8)
   46550:	59800015 	stw	r6,0(r11)
   46554:	51800015 	stw	r6,0(r10)
   46558:	42000404 	addi	r8,r8,16
   4655c:	4a400404 	addi	r9,r9,16
   46560:	5ac00404 	addi	r11,r11,16
   46564:	52800404 	addi	r10,r10,16
   46568:	413ff71e 	bne	r8,r4,46548 <__alt_data_end+0xfffdf448>
   4656c:	63000044 	addi	r12,r12,1
   46570:	6018913a 	slli	r12,r12,4
   46574:	39c003cc 	andi	r7,r7,15
   46578:	010000c4 	movi	r4,3
   4657c:	1b07883a 	add	r3,r3,r12
   46580:	21c00e2e 	bgeu	r4,r7,465bc <memset+0x100>
   46584:	1813883a 	mov	r9,r3
   46588:	3811883a 	mov	r8,r7
   4658c:	010000c4 	movi	r4,3
   46590:	49800015 	stw	r6,0(r9)
   46594:	423fff04 	addi	r8,r8,-4
   46598:	4a400104 	addi	r9,r9,4
   4659c:	223ffc36 	bltu	r4,r8,46590 <__alt_data_end+0xfffdf490>
   465a0:	393fff04 	addi	r4,r7,-4
   465a4:	2008d0ba 	srli	r4,r4,2
   465a8:	39c000cc 	andi	r7,r7,3
   465ac:	21000044 	addi	r4,r4,1
   465b0:	2109883a 	add	r4,r4,r4
   465b4:	2109883a 	add	r4,r4,r4
   465b8:	1907883a 	add	r3,r3,r4
   465bc:	38000526 	beq	r7,zero,465d4 <memset+0x118>
   465c0:	19cf883a 	add	r7,r3,r7
   465c4:	19400005 	stb	r5,0(r3)
   465c8:	18c00044 	addi	r3,r3,1
   465cc:	38fffd1e 	bne	r7,r3,465c4 <__alt_data_end+0xfffdf4c4>
   465d0:	f800283a 	ret
   465d4:	f800283a 	ret
   465d8:	2007883a 	mov	r3,r4
   465dc:	300f883a 	mov	r7,r6
   465e0:	003fc706 	br	46500 <__alt_data_end+0xfffdf400>

000465e4 <_Balloc>:
   465e4:	20801317 	ldw	r2,76(r4)
   465e8:	defffc04 	addi	sp,sp,-16
   465ec:	dc400115 	stw	r17,4(sp)
   465f0:	dc000015 	stw	r16,0(sp)
   465f4:	dfc00315 	stw	ra,12(sp)
   465f8:	dc800215 	stw	r18,8(sp)
   465fc:	2023883a 	mov	r17,r4
   46600:	2821883a 	mov	r16,r5
   46604:	10000f26 	beq	r2,zero,46644 <_Balloc+0x60>
   46608:	8407883a 	add	r3,r16,r16
   4660c:	18c7883a 	add	r3,r3,r3
   46610:	10c7883a 	add	r3,r2,r3
   46614:	18800017 	ldw	r2,0(r3)
   46618:	10001126 	beq	r2,zero,46660 <_Balloc+0x7c>
   4661c:	11000017 	ldw	r4,0(r2)
   46620:	19000015 	stw	r4,0(r3)
   46624:	10000415 	stw	zero,16(r2)
   46628:	10000315 	stw	zero,12(r2)
   4662c:	dfc00317 	ldw	ra,12(sp)
   46630:	dc800217 	ldw	r18,8(sp)
   46634:	dc400117 	ldw	r17,4(sp)
   46638:	dc000017 	ldw	r16,0(sp)
   4663c:	dec00404 	addi	sp,sp,16
   46640:	f800283a 	ret
   46644:	01800844 	movi	r6,33
   46648:	01400104 	movi	r5,4
   4664c:	00497e00 	call	497e0 <_calloc_r>
   46650:	88801315 	stw	r2,76(r17)
   46654:	103fec1e 	bne	r2,zero,46608 <__alt_data_end+0xfffdf508>
   46658:	0005883a 	mov	r2,zero
   4665c:	003ff306 	br	4662c <__alt_data_end+0xfffdf52c>
   46660:	01400044 	movi	r5,1
   46664:	2c24983a 	sll	r18,r5,r16
   46668:	8809883a 	mov	r4,r17
   4666c:	91800144 	addi	r6,r18,5
   46670:	318d883a 	add	r6,r6,r6
   46674:	318d883a 	add	r6,r6,r6
   46678:	00497e00 	call	497e0 <_calloc_r>
   4667c:	103ff626 	beq	r2,zero,46658 <__alt_data_end+0xfffdf558>
   46680:	14000115 	stw	r16,4(r2)
   46684:	14800215 	stw	r18,8(r2)
   46688:	003fe606 	br	46624 <__alt_data_end+0xfffdf524>

0004668c <_Bfree>:
   4668c:	28000826 	beq	r5,zero,466b0 <_Bfree+0x24>
   46690:	28c00117 	ldw	r3,4(r5)
   46694:	20801317 	ldw	r2,76(r4)
   46698:	18c7883a 	add	r3,r3,r3
   4669c:	18c7883a 	add	r3,r3,r3
   466a0:	10c5883a 	add	r2,r2,r3
   466a4:	10c00017 	ldw	r3,0(r2)
   466a8:	28c00015 	stw	r3,0(r5)
   466ac:	11400015 	stw	r5,0(r2)
   466b0:	f800283a 	ret

000466b4 <__multadd>:
   466b4:	defffa04 	addi	sp,sp,-24
   466b8:	dc800315 	stw	r18,12(sp)
   466bc:	dc400215 	stw	r17,8(sp)
   466c0:	dc000115 	stw	r16,4(sp)
   466c4:	2823883a 	mov	r17,r5
   466c8:	2c000417 	ldw	r16,16(r5)
   466cc:	dfc00515 	stw	ra,20(sp)
   466d0:	dcc00415 	stw	r19,16(sp)
   466d4:	2025883a 	mov	r18,r4
   466d8:	29400504 	addi	r5,r5,20
   466dc:	0011883a 	mov	r8,zero
   466e0:	28c00017 	ldw	r3,0(r5)
   466e4:	29400104 	addi	r5,r5,4
   466e8:	42000044 	addi	r8,r8,1
   466ec:	18bfffcc 	andi	r2,r3,65535
   466f0:	1185383a 	mul	r2,r2,r6
   466f4:	1806d43a 	srli	r3,r3,16
   466f8:	11cf883a 	add	r7,r2,r7
   466fc:	3808d43a 	srli	r4,r7,16
   46700:	1987383a 	mul	r3,r3,r6
   46704:	38bfffcc 	andi	r2,r7,65535
   46708:	1907883a 	add	r3,r3,r4
   4670c:	1808943a 	slli	r4,r3,16
   46710:	180ed43a 	srli	r7,r3,16
   46714:	2085883a 	add	r2,r4,r2
   46718:	28bfff15 	stw	r2,-4(r5)
   4671c:	443ff016 	blt	r8,r16,466e0 <__alt_data_end+0xfffdf5e0>
   46720:	38000926 	beq	r7,zero,46748 <__multadd+0x94>
   46724:	88800217 	ldw	r2,8(r17)
   46728:	80800f0e 	bge	r16,r2,46768 <__multadd+0xb4>
   4672c:	80800144 	addi	r2,r16,5
   46730:	1085883a 	add	r2,r2,r2
   46734:	1085883a 	add	r2,r2,r2
   46738:	8885883a 	add	r2,r17,r2
   4673c:	11c00015 	stw	r7,0(r2)
   46740:	84000044 	addi	r16,r16,1
   46744:	8c000415 	stw	r16,16(r17)
   46748:	8805883a 	mov	r2,r17
   4674c:	dfc00517 	ldw	ra,20(sp)
   46750:	dcc00417 	ldw	r19,16(sp)
   46754:	dc800317 	ldw	r18,12(sp)
   46758:	dc400217 	ldw	r17,8(sp)
   4675c:	dc000117 	ldw	r16,4(sp)
   46760:	dec00604 	addi	sp,sp,24
   46764:	f800283a 	ret
   46768:	89400117 	ldw	r5,4(r17)
   4676c:	9009883a 	mov	r4,r18
   46770:	d9c00015 	stw	r7,0(sp)
   46774:	29400044 	addi	r5,r5,1
   46778:	00465e40 	call	465e4 <_Balloc>
   4677c:	89800417 	ldw	r6,16(r17)
   46780:	89400304 	addi	r5,r17,12
   46784:	11000304 	addi	r4,r2,12
   46788:	31800084 	addi	r6,r6,2
   4678c:	318d883a 	add	r6,r6,r6
   46790:	318d883a 	add	r6,r6,r6
   46794:	1027883a 	mov	r19,r2
   46798:	00462180 	call	46218 <memcpy>
   4679c:	d9c00017 	ldw	r7,0(sp)
   467a0:	88000a26 	beq	r17,zero,467cc <__multadd+0x118>
   467a4:	88c00117 	ldw	r3,4(r17)
   467a8:	90801317 	ldw	r2,76(r18)
   467ac:	18c7883a 	add	r3,r3,r3
   467b0:	18c7883a 	add	r3,r3,r3
   467b4:	10c5883a 	add	r2,r2,r3
   467b8:	10c00017 	ldw	r3,0(r2)
   467bc:	88c00015 	stw	r3,0(r17)
   467c0:	14400015 	stw	r17,0(r2)
   467c4:	9823883a 	mov	r17,r19
   467c8:	003fd806 	br	4672c <__alt_data_end+0xfffdf62c>
   467cc:	9823883a 	mov	r17,r19
   467d0:	003fd606 	br	4672c <__alt_data_end+0xfffdf62c>

000467d4 <__s2b>:
   467d4:	defff904 	addi	sp,sp,-28
   467d8:	dc400115 	stw	r17,4(sp)
   467dc:	dc000015 	stw	r16,0(sp)
   467e0:	2023883a 	mov	r17,r4
   467e4:	2821883a 	mov	r16,r5
   467e8:	39000204 	addi	r4,r7,8
   467ec:	01400244 	movi	r5,9
   467f0:	dcc00315 	stw	r19,12(sp)
   467f4:	dc800215 	stw	r18,8(sp)
   467f8:	dfc00615 	stw	ra,24(sp)
   467fc:	dd400515 	stw	r21,20(sp)
   46800:	dd000415 	stw	r20,16(sp)
   46804:	3825883a 	mov	r18,r7
   46808:	3027883a 	mov	r19,r6
   4680c:	00405780 	call	40578 <__divsi3>
   46810:	00c00044 	movi	r3,1
   46814:	000b883a 	mov	r5,zero
   46818:	1880030e 	bge	r3,r2,46828 <__s2b+0x54>
   4681c:	18c7883a 	add	r3,r3,r3
   46820:	29400044 	addi	r5,r5,1
   46824:	18bffd16 	blt	r3,r2,4681c <__alt_data_end+0xfffdf71c>
   46828:	8809883a 	mov	r4,r17
   4682c:	00465e40 	call	465e4 <_Balloc>
   46830:	d8c00717 	ldw	r3,28(sp)
   46834:	10c00515 	stw	r3,20(r2)
   46838:	00c00044 	movi	r3,1
   4683c:	10c00415 	stw	r3,16(r2)
   46840:	00c00244 	movi	r3,9
   46844:	1cc0210e 	bge	r3,r19,468cc <__s2b+0xf8>
   46848:	80eb883a 	add	r21,r16,r3
   4684c:	a829883a 	mov	r20,r21
   46850:	84e1883a 	add	r16,r16,r19
   46854:	a1c00007 	ldb	r7,0(r20)
   46858:	01800284 	movi	r6,10
   4685c:	a5000044 	addi	r20,r20,1
   46860:	100b883a 	mov	r5,r2
   46864:	39fff404 	addi	r7,r7,-48
   46868:	8809883a 	mov	r4,r17
   4686c:	00466b40 	call	466b4 <__multadd>
   46870:	a43ff81e 	bne	r20,r16,46854 <__alt_data_end+0xfffdf754>
   46874:	ace1883a 	add	r16,r21,r19
   46878:	843ffe04 	addi	r16,r16,-8
   4687c:	9c800a0e 	bge	r19,r18,468a8 <__s2b+0xd4>
   46880:	94e5c83a 	sub	r18,r18,r19
   46884:	84a5883a 	add	r18,r16,r18
   46888:	81c00007 	ldb	r7,0(r16)
   4688c:	01800284 	movi	r6,10
   46890:	84000044 	addi	r16,r16,1
   46894:	100b883a 	mov	r5,r2
   46898:	39fff404 	addi	r7,r7,-48
   4689c:	8809883a 	mov	r4,r17
   468a0:	00466b40 	call	466b4 <__multadd>
   468a4:	84bff81e 	bne	r16,r18,46888 <__alt_data_end+0xfffdf788>
   468a8:	dfc00617 	ldw	ra,24(sp)
   468ac:	dd400517 	ldw	r21,20(sp)
   468b0:	dd000417 	ldw	r20,16(sp)
   468b4:	dcc00317 	ldw	r19,12(sp)
   468b8:	dc800217 	ldw	r18,8(sp)
   468bc:	dc400117 	ldw	r17,4(sp)
   468c0:	dc000017 	ldw	r16,0(sp)
   468c4:	dec00704 	addi	sp,sp,28
   468c8:	f800283a 	ret
   468cc:	84000284 	addi	r16,r16,10
   468d0:	1827883a 	mov	r19,r3
   468d4:	003fe906 	br	4687c <__alt_data_end+0xfffdf77c>

000468d8 <__hi0bits>:
   468d8:	20bfffec 	andhi	r2,r4,65535
   468dc:	1000141e 	bne	r2,zero,46930 <__hi0bits+0x58>
   468e0:	2008943a 	slli	r4,r4,16
   468e4:	00800404 	movi	r2,16
   468e8:	20ffc02c 	andhi	r3,r4,65280
   468ec:	1800021e 	bne	r3,zero,468f8 <__hi0bits+0x20>
   468f0:	2008923a 	slli	r4,r4,8
   468f4:	10800204 	addi	r2,r2,8
   468f8:	20fc002c 	andhi	r3,r4,61440
   468fc:	1800021e 	bne	r3,zero,46908 <__hi0bits+0x30>
   46900:	2008913a 	slli	r4,r4,4
   46904:	10800104 	addi	r2,r2,4
   46908:	20f0002c 	andhi	r3,r4,49152
   4690c:	1800031e 	bne	r3,zero,4691c <__hi0bits+0x44>
   46910:	2109883a 	add	r4,r4,r4
   46914:	10800084 	addi	r2,r2,2
   46918:	2109883a 	add	r4,r4,r4
   4691c:	20000316 	blt	r4,zero,4692c <__hi0bits+0x54>
   46920:	2110002c 	andhi	r4,r4,16384
   46924:	2000041e 	bne	r4,zero,46938 <__hi0bits+0x60>
   46928:	00800804 	movi	r2,32
   4692c:	f800283a 	ret
   46930:	0005883a 	mov	r2,zero
   46934:	003fec06 	br	468e8 <__alt_data_end+0xfffdf7e8>
   46938:	10800044 	addi	r2,r2,1
   4693c:	f800283a 	ret

00046940 <__lo0bits>:
   46940:	20c00017 	ldw	r3,0(r4)
   46944:	188001cc 	andi	r2,r3,7
   46948:	10000826 	beq	r2,zero,4696c <__lo0bits+0x2c>
   4694c:	1880004c 	andi	r2,r3,1
   46950:	1000211e 	bne	r2,zero,469d8 <__lo0bits+0x98>
   46954:	1880008c 	andi	r2,r3,2
   46958:	1000211e 	bne	r2,zero,469e0 <__lo0bits+0xa0>
   4695c:	1806d0ba 	srli	r3,r3,2
   46960:	00800084 	movi	r2,2
   46964:	20c00015 	stw	r3,0(r4)
   46968:	f800283a 	ret
   4696c:	18bfffcc 	andi	r2,r3,65535
   46970:	10001326 	beq	r2,zero,469c0 <__lo0bits+0x80>
   46974:	0005883a 	mov	r2,zero
   46978:	19403fcc 	andi	r5,r3,255
   4697c:	2800021e 	bne	r5,zero,46988 <__lo0bits+0x48>
   46980:	1806d23a 	srli	r3,r3,8
   46984:	10800204 	addi	r2,r2,8
   46988:	194003cc 	andi	r5,r3,15
   4698c:	2800021e 	bne	r5,zero,46998 <__lo0bits+0x58>
   46990:	1806d13a 	srli	r3,r3,4
   46994:	10800104 	addi	r2,r2,4
   46998:	194000cc 	andi	r5,r3,3
   4699c:	2800021e 	bne	r5,zero,469a8 <__lo0bits+0x68>
   469a0:	1806d0ba 	srli	r3,r3,2
   469a4:	10800084 	addi	r2,r2,2
   469a8:	1940004c 	andi	r5,r3,1
   469ac:	2800081e 	bne	r5,zero,469d0 <__lo0bits+0x90>
   469b0:	1806d07a 	srli	r3,r3,1
   469b4:	1800051e 	bne	r3,zero,469cc <__lo0bits+0x8c>
   469b8:	00800804 	movi	r2,32
   469bc:	f800283a 	ret
   469c0:	1806d43a 	srli	r3,r3,16
   469c4:	00800404 	movi	r2,16
   469c8:	003feb06 	br	46978 <__alt_data_end+0xfffdf878>
   469cc:	10800044 	addi	r2,r2,1
   469d0:	20c00015 	stw	r3,0(r4)
   469d4:	f800283a 	ret
   469d8:	0005883a 	mov	r2,zero
   469dc:	f800283a 	ret
   469e0:	1806d07a 	srli	r3,r3,1
   469e4:	00800044 	movi	r2,1
   469e8:	20c00015 	stw	r3,0(r4)
   469ec:	f800283a 	ret

000469f0 <__i2b>:
   469f0:	defffd04 	addi	sp,sp,-12
   469f4:	dc000015 	stw	r16,0(sp)
   469f8:	04000044 	movi	r16,1
   469fc:	dc400115 	stw	r17,4(sp)
   46a00:	2823883a 	mov	r17,r5
   46a04:	800b883a 	mov	r5,r16
   46a08:	dfc00215 	stw	ra,8(sp)
   46a0c:	00465e40 	call	465e4 <_Balloc>
   46a10:	14400515 	stw	r17,20(r2)
   46a14:	14000415 	stw	r16,16(r2)
   46a18:	dfc00217 	ldw	ra,8(sp)
   46a1c:	dc400117 	ldw	r17,4(sp)
   46a20:	dc000017 	ldw	r16,0(sp)
   46a24:	dec00304 	addi	sp,sp,12
   46a28:	f800283a 	ret

00046a2c <__multiply>:
   46a2c:	defffa04 	addi	sp,sp,-24
   46a30:	dcc00315 	stw	r19,12(sp)
   46a34:	dc800215 	stw	r18,8(sp)
   46a38:	34c00417 	ldw	r19,16(r6)
   46a3c:	2c800417 	ldw	r18,16(r5)
   46a40:	dd000415 	stw	r20,16(sp)
   46a44:	dc400115 	stw	r17,4(sp)
   46a48:	dfc00515 	stw	ra,20(sp)
   46a4c:	dc000015 	stw	r16,0(sp)
   46a50:	2829883a 	mov	r20,r5
   46a54:	3023883a 	mov	r17,r6
   46a58:	94c0050e 	bge	r18,r19,46a70 <__multiply+0x44>
   46a5c:	9007883a 	mov	r3,r18
   46a60:	3029883a 	mov	r20,r6
   46a64:	9825883a 	mov	r18,r19
   46a68:	2823883a 	mov	r17,r5
   46a6c:	1827883a 	mov	r19,r3
   46a70:	a0800217 	ldw	r2,8(r20)
   46a74:	94e1883a 	add	r16,r18,r19
   46a78:	a1400117 	ldw	r5,4(r20)
   46a7c:	1400010e 	bge	r2,r16,46a84 <__multiply+0x58>
   46a80:	29400044 	addi	r5,r5,1
   46a84:	00465e40 	call	465e4 <_Balloc>
   46a88:	8415883a 	add	r10,r16,r16
   46a8c:	12c00504 	addi	r11,r2,20
   46a90:	5295883a 	add	r10,r10,r10
   46a94:	5a95883a 	add	r10,r11,r10
   46a98:	5807883a 	mov	r3,r11
   46a9c:	5a80032e 	bgeu	r11,r10,46aac <__multiply+0x80>
   46aa0:	18000015 	stw	zero,0(r3)
   46aa4:	18c00104 	addi	r3,r3,4
   46aa8:	1abffd36 	bltu	r3,r10,46aa0 <__alt_data_end+0xfffdf9a0>
   46aac:	9ce7883a 	add	r19,r19,r19
   46ab0:	94a5883a 	add	r18,r18,r18
   46ab4:	89800504 	addi	r6,r17,20
   46ab8:	9ce7883a 	add	r19,r19,r19
   46abc:	a3400504 	addi	r13,r20,20
   46ac0:	94a5883a 	add	r18,r18,r18
   46ac4:	34d9883a 	add	r12,r6,r19
   46ac8:	6c93883a 	add	r9,r13,r18
   46acc:	3300422e 	bgeu	r6,r12,46bd8 <__multiply+0x1ac>
   46ad0:	37c00017 	ldw	ra,0(r6)
   46ad4:	fbffffcc 	andi	r15,ra,65535
   46ad8:	78001b26 	beq	r15,zero,46b48 <__multiply+0x11c>
   46adc:	5811883a 	mov	r8,r11
   46ae0:	681d883a 	mov	r14,r13
   46ae4:	000f883a 	mov	r7,zero
   46ae8:	71000017 	ldw	r4,0(r14)
   46aec:	40c00017 	ldw	r3,0(r8)
   46af0:	73800104 	addi	r14,r14,4
   46af4:	217fffcc 	andi	r5,r4,65535
   46af8:	2bcb383a 	mul	r5,r5,r15
   46afc:	2008d43a 	srli	r4,r4,16
   46b00:	1c7fffcc 	andi	r17,r3,65535
   46b04:	2c4b883a 	add	r5,r5,r17
   46b08:	29cb883a 	add	r5,r5,r7
   46b0c:	23c9383a 	mul	r4,r4,r15
   46b10:	1806d43a 	srli	r3,r3,16
   46b14:	280ed43a 	srli	r7,r5,16
   46b18:	297fffcc 	andi	r5,r5,65535
   46b1c:	20c7883a 	add	r3,r4,r3
   46b20:	19c7883a 	add	r3,r3,r7
   46b24:	1808943a 	slli	r4,r3,16
   46b28:	4023883a 	mov	r17,r8
   46b2c:	180ed43a 	srli	r7,r3,16
   46b30:	214ab03a 	or	r5,r4,r5
   46b34:	41400015 	stw	r5,0(r8)
   46b38:	42000104 	addi	r8,r8,4
   46b3c:	727fea36 	bltu	r14,r9,46ae8 <__alt_data_end+0xfffdf9e8>
   46b40:	89c00115 	stw	r7,4(r17)
   46b44:	37c00017 	ldw	ra,0(r6)
   46b48:	f83ed43a 	srli	ra,ra,16
   46b4c:	f8001f26 	beq	ra,zero,46bcc <__multiply+0x1a0>
   46b50:	58c00017 	ldw	r3,0(r11)
   46b54:	681d883a 	mov	r14,r13
   46b58:	581f883a 	mov	r15,r11
   46b5c:	1811883a 	mov	r8,r3
   46b60:	5825883a 	mov	r18,r11
   46b64:	000f883a 	mov	r7,zero
   46b68:	00000106 	br	46b70 <__multiply+0x144>
   46b6c:	8825883a 	mov	r18,r17
   46b70:	7140000b 	ldhu	r5,0(r14)
   46b74:	4010d43a 	srli	r8,r8,16
   46b78:	193fffcc 	andi	r4,r3,65535
   46b7c:	2fcb383a 	mul	r5,r5,ra
   46b80:	7bc00104 	addi	r15,r15,4
   46b84:	73800104 	addi	r14,r14,4
   46b88:	2a0b883a 	add	r5,r5,r8
   46b8c:	29cb883a 	add	r5,r5,r7
   46b90:	2806943a 	slli	r3,r5,16
   46b94:	94400104 	addi	r17,r18,4
   46b98:	280ad43a 	srli	r5,r5,16
   46b9c:	1908b03a 	or	r4,r3,r4
   46ba0:	793fff15 	stw	r4,-4(r15)
   46ba4:	70ffff17 	ldw	r3,-4(r14)
   46ba8:	8a000017 	ldw	r8,0(r17)
   46bac:	1806d43a 	srli	r3,r3,16
   46bb0:	413fffcc 	andi	r4,r8,65535
   46bb4:	1fc7383a 	mul	r3,r3,ra
   46bb8:	1907883a 	add	r3,r3,r4
   46bbc:	1947883a 	add	r3,r3,r5
   46bc0:	180ed43a 	srli	r7,r3,16
   46bc4:	727fe936 	bltu	r14,r9,46b6c <__alt_data_end+0xfffdfa6c>
   46bc8:	90c00115 	stw	r3,4(r18)
   46bcc:	31800104 	addi	r6,r6,4
   46bd0:	5ac00104 	addi	r11,r11,4
   46bd4:	333fbe36 	bltu	r6,r12,46ad0 <__alt_data_end+0xfffdf9d0>
   46bd8:	0400090e 	bge	zero,r16,46c00 <__multiply+0x1d4>
   46bdc:	50ffff17 	ldw	r3,-4(r10)
   46be0:	52bfff04 	addi	r10,r10,-4
   46be4:	18000326 	beq	r3,zero,46bf4 <__multiply+0x1c8>
   46be8:	00000506 	br	46c00 <__multiply+0x1d4>
   46bec:	50c00017 	ldw	r3,0(r10)
   46bf0:	1800031e 	bne	r3,zero,46c00 <__multiply+0x1d4>
   46bf4:	843fffc4 	addi	r16,r16,-1
   46bf8:	52bfff04 	addi	r10,r10,-4
   46bfc:	803ffb1e 	bne	r16,zero,46bec <__alt_data_end+0xfffdfaec>
   46c00:	14000415 	stw	r16,16(r2)
   46c04:	dfc00517 	ldw	ra,20(sp)
   46c08:	dd000417 	ldw	r20,16(sp)
   46c0c:	dcc00317 	ldw	r19,12(sp)
   46c10:	dc800217 	ldw	r18,8(sp)
   46c14:	dc400117 	ldw	r17,4(sp)
   46c18:	dc000017 	ldw	r16,0(sp)
   46c1c:	dec00604 	addi	sp,sp,24
   46c20:	f800283a 	ret

00046c24 <__pow5mult>:
   46c24:	defffa04 	addi	sp,sp,-24
   46c28:	dcc00315 	stw	r19,12(sp)
   46c2c:	dc000015 	stw	r16,0(sp)
   46c30:	dfc00515 	stw	ra,20(sp)
   46c34:	dd000415 	stw	r20,16(sp)
   46c38:	dc800215 	stw	r18,8(sp)
   46c3c:	dc400115 	stw	r17,4(sp)
   46c40:	308000cc 	andi	r2,r6,3
   46c44:	3021883a 	mov	r16,r6
   46c48:	2027883a 	mov	r19,r4
   46c4c:	10002f1e 	bne	r2,zero,46d0c <__pow5mult+0xe8>
   46c50:	2825883a 	mov	r18,r5
   46c54:	8021d0ba 	srai	r16,r16,2
   46c58:	80001a26 	beq	r16,zero,46cc4 <__pow5mult+0xa0>
   46c5c:	9c401217 	ldw	r17,72(r19)
   46c60:	8800061e 	bne	r17,zero,46c7c <__pow5mult+0x58>
   46c64:	00003406 	br	46d38 <__pow5mult+0x114>
   46c68:	8021d07a 	srai	r16,r16,1
   46c6c:	80001526 	beq	r16,zero,46cc4 <__pow5mult+0xa0>
   46c70:	88800017 	ldw	r2,0(r17)
   46c74:	10001c26 	beq	r2,zero,46ce8 <__pow5mult+0xc4>
   46c78:	1023883a 	mov	r17,r2
   46c7c:	8080004c 	andi	r2,r16,1
   46c80:	103ff926 	beq	r2,zero,46c68 <__alt_data_end+0xfffdfb68>
   46c84:	880d883a 	mov	r6,r17
   46c88:	900b883a 	mov	r5,r18
   46c8c:	9809883a 	mov	r4,r19
   46c90:	0046a2c0 	call	46a2c <__multiply>
   46c94:	90001b26 	beq	r18,zero,46d04 <__pow5mult+0xe0>
   46c98:	91000117 	ldw	r4,4(r18)
   46c9c:	98c01317 	ldw	r3,76(r19)
   46ca0:	8021d07a 	srai	r16,r16,1
   46ca4:	2109883a 	add	r4,r4,r4
   46ca8:	2109883a 	add	r4,r4,r4
   46cac:	1907883a 	add	r3,r3,r4
   46cb0:	19000017 	ldw	r4,0(r3)
   46cb4:	91000015 	stw	r4,0(r18)
   46cb8:	1c800015 	stw	r18,0(r3)
   46cbc:	1025883a 	mov	r18,r2
   46cc0:	803feb1e 	bne	r16,zero,46c70 <__alt_data_end+0xfffdfb70>
   46cc4:	9005883a 	mov	r2,r18
   46cc8:	dfc00517 	ldw	ra,20(sp)
   46ccc:	dd000417 	ldw	r20,16(sp)
   46cd0:	dcc00317 	ldw	r19,12(sp)
   46cd4:	dc800217 	ldw	r18,8(sp)
   46cd8:	dc400117 	ldw	r17,4(sp)
   46cdc:	dc000017 	ldw	r16,0(sp)
   46ce0:	dec00604 	addi	sp,sp,24
   46ce4:	f800283a 	ret
   46ce8:	880d883a 	mov	r6,r17
   46cec:	880b883a 	mov	r5,r17
   46cf0:	9809883a 	mov	r4,r19
   46cf4:	0046a2c0 	call	46a2c <__multiply>
   46cf8:	88800015 	stw	r2,0(r17)
   46cfc:	10000015 	stw	zero,0(r2)
   46d00:	003fdd06 	br	46c78 <__alt_data_end+0xfffdfb78>
   46d04:	1025883a 	mov	r18,r2
   46d08:	003fd706 	br	46c68 <__alt_data_end+0xfffdfb68>
   46d0c:	10bfffc4 	addi	r2,r2,-1
   46d10:	1085883a 	add	r2,r2,r2
   46d14:	00c00174 	movhi	r3,5
   46d18:	18fe8b04 	addi	r3,r3,-1492
   46d1c:	1085883a 	add	r2,r2,r2
   46d20:	1885883a 	add	r2,r3,r2
   46d24:	11800017 	ldw	r6,0(r2)
   46d28:	000f883a 	mov	r7,zero
   46d2c:	00466b40 	call	466b4 <__multadd>
   46d30:	1025883a 	mov	r18,r2
   46d34:	003fc706 	br	46c54 <__alt_data_end+0xfffdfb54>
   46d38:	05000044 	movi	r20,1
   46d3c:	a00b883a 	mov	r5,r20
   46d40:	9809883a 	mov	r4,r19
   46d44:	00465e40 	call	465e4 <_Balloc>
   46d48:	1023883a 	mov	r17,r2
   46d4c:	00809c44 	movi	r2,625
   46d50:	88800515 	stw	r2,20(r17)
   46d54:	8d000415 	stw	r20,16(r17)
   46d58:	9c401215 	stw	r17,72(r19)
   46d5c:	88000015 	stw	zero,0(r17)
   46d60:	003fc606 	br	46c7c <__alt_data_end+0xfffdfb7c>

00046d64 <__lshift>:
   46d64:	defff904 	addi	sp,sp,-28
   46d68:	dd400515 	stw	r21,20(sp)
   46d6c:	dcc00315 	stw	r19,12(sp)
   46d70:	302bd17a 	srai	r21,r6,5
   46d74:	2cc00417 	ldw	r19,16(r5)
   46d78:	28800217 	ldw	r2,8(r5)
   46d7c:	dd000415 	stw	r20,16(sp)
   46d80:	ace7883a 	add	r19,r21,r19
   46d84:	dc800215 	stw	r18,8(sp)
   46d88:	dc400115 	stw	r17,4(sp)
   46d8c:	dc000015 	stw	r16,0(sp)
   46d90:	dfc00615 	stw	ra,24(sp)
   46d94:	9c000044 	addi	r16,r19,1
   46d98:	2823883a 	mov	r17,r5
   46d9c:	3029883a 	mov	r20,r6
   46da0:	2025883a 	mov	r18,r4
   46da4:	29400117 	ldw	r5,4(r5)
   46da8:	1400030e 	bge	r2,r16,46db8 <__lshift+0x54>
   46dac:	1085883a 	add	r2,r2,r2
   46db0:	29400044 	addi	r5,r5,1
   46db4:	143ffd16 	blt	r2,r16,46dac <__alt_data_end+0xfffdfcac>
   46db8:	9009883a 	mov	r4,r18
   46dbc:	00465e40 	call	465e4 <_Balloc>
   46dc0:	10c00504 	addi	r3,r2,20
   46dc4:	0540070e 	bge	zero,r21,46de4 <__lshift+0x80>
   46dc8:	ad6b883a 	add	r21,r21,r21
   46dcc:	ad6b883a 	add	r21,r21,r21
   46dd0:	1809883a 	mov	r4,r3
   46dd4:	1d47883a 	add	r3,r3,r21
   46dd8:	20000015 	stw	zero,0(r4)
   46ddc:	21000104 	addi	r4,r4,4
   46de0:	193ffd1e 	bne	r3,r4,46dd8 <__alt_data_end+0xfffdfcd8>
   46de4:	8a000417 	ldw	r8,16(r17)
   46de8:	89000504 	addi	r4,r17,20
   46dec:	a18007cc 	andi	r6,r20,31
   46df0:	4211883a 	add	r8,r8,r8
   46df4:	4211883a 	add	r8,r8,r8
   46df8:	2211883a 	add	r8,r4,r8
   46dfc:	30002326 	beq	r6,zero,46e8c <__lshift+0x128>
   46e00:	02400804 	movi	r9,32
   46e04:	4993c83a 	sub	r9,r9,r6
   46e08:	000b883a 	mov	r5,zero
   46e0c:	21c00017 	ldw	r7,0(r4)
   46e10:	1815883a 	mov	r10,r3
   46e14:	18c00104 	addi	r3,r3,4
   46e18:	398e983a 	sll	r7,r7,r6
   46e1c:	21000104 	addi	r4,r4,4
   46e20:	394ab03a 	or	r5,r7,r5
   46e24:	197fff15 	stw	r5,-4(r3)
   46e28:	217fff17 	ldw	r5,-4(r4)
   46e2c:	2a4ad83a 	srl	r5,r5,r9
   46e30:	223ff636 	bltu	r4,r8,46e0c <__alt_data_end+0xfffdfd0c>
   46e34:	51400115 	stw	r5,4(r10)
   46e38:	28001a1e 	bne	r5,zero,46ea4 <__lshift+0x140>
   46e3c:	843fffc4 	addi	r16,r16,-1
   46e40:	14000415 	stw	r16,16(r2)
   46e44:	88000826 	beq	r17,zero,46e68 <__lshift+0x104>
   46e48:	89000117 	ldw	r4,4(r17)
   46e4c:	90c01317 	ldw	r3,76(r18)
   46e50:	2109883a 	add	r4,r4,r4
   46e54:	2109883a 	add	r4,r4,r4
   46e58:	1907883a 	add	r3,r3,r4
   46e5c:	19000017 	ldw	r4,0(r3)
   46e60:	89000015 	stw	r4,0(r17)
   46e64:	1c400015 	stw	r17,0(r3)
   46e68:	dfc00617 	ldw	ra,24(sp)
   46e6c:	dd400517 	ldw	r21,20(sp)
   46e70:	dd000417 	ldw	r20,16(sp)
   46e74:	dcc00317 	ldw	r19,12(sp)
   46e78:	dc800217 	ldw	r18,8(sp)
   46e7c:	dc400117 	ldw	r17,4(sp)
   46e80:	dc000017 	ldw	r16,0(sp)
   46e84:	dec00704 	addi	sp,sp,28
   46e88:	f800283a 	ret
   46e8c:	21400017 	ldw	r5,0(r4)
   46e90:	18c00104 	addi	r3,r3,4
   46e94:	21000104 	addi	r4,r4,4
   46e98:	197fff15 	stw	r5,-4(r3)
   46e9c:	223ffb36 	bltu	r4,r8,46e8c <__alt_data_end+0xfffdfd8c>
   46ea0:	003fe606 	br	46e3c <__alt_data_end+0xfffdfd3c>
   46ea4:	9c000084 	addi	r16,r19,2
   46ea8:	003fe406 	br	46e3c <__alt_data_end+0xfffdfd3c>

00046eac <__mcmp>:
   46eac:	20800417 	ldw	r2,16(r4)
   46eb0:	28c00417 	ldw	r3,16(r5)
   46eb4:	10c5c83a 	sub	r2,r2,r3
   46eb8:	1000111e 	bne	r2,zero,46f00 <__mcmp+0x54>
   46ebc:	18c7883a 	add	r3,r3,r3
   46ec0:	18c7883a 	add	r3,r3,r3
   46ec4:	21000504 	addi	r4,r4,20
   46ec8:	29400504 	addi	r5,r5,20
   46ecc:	20c5883a 	add	r2,r4,r3
   46ed0:	28cb883a 	add	r5,r5,r3
   46ed4:	00000106 	br	46edc <__mcmp+0x30>
   46ed8:	20800a2e 	bgeu	r4,r2,46f04 <__mcmp+0x58>
   46edc:	10bfff04 	addi	r2,r2,-4
   46ee0:	297fff04 	addi	r5,r5,-4
   46ee4:	11800017 	ldw	r6,0(r2)
   46ee8:	28c00017 	ldw	r3,0(r5)
   46eec:	30fffa26 	beq	r6,r3,46ed8 <__alt_data_end+0xfffdfdd8>
   46ef0:	30c00236 	bltu	r6,r3,46efc <__mcmp+0x50>
   46ef4:	00800044 	movi	r2,1
   46ef8:	f800283a 	ret
   46efc:	00bfffc4 	movi	r2,-1
   46f00:	f800283a 	ret
   46f04:	0005883a 	mov	r2,zero
   46f08:	f800283a 	ret

00046f0c <__mdiff>:
   46f0c:	28c00417 	ldw	r3,16(r5)
   46f10:	30800417 	ldw	r2,16(r6)
   46f14:	defffa04 	addi	sp,sp,-24
   46f18:	dcc00315 	stw	r19,12(sp)
   46f1c:	dc800215 	stw	r18,8(sp)
   46f20:	dfc00515 	stw	ra,20(sp)
   46f24:	dd000415 	stw	r20,16(sp)
   46f28:	dc400115 	stw	r17,4(sp)
   46f2c:	dc000015 	stw	r16,0(sp)
   46f30:	1887c83a 	sub	r3,r3,r2
   46f34:	2825883a 	mov	r18,r5
   46f38:	3027883a 	mov	r19,r6
   46f3c:	1800141e 	bne	r3,zero,46f90 <__mdiff+0x84>
   46f40:	1085883a 	add	r2,r2,r2
   46f44:	1085883a 	add	r2,r2,r2
   46f48:	2a000504 	addi	r8,r5,20
   46f4c:	34000504 	addi	r16,r6,20
   46f50:	4087883a 	add	r3,r8,r2
   46f54:	8085883a 	add	r2,r16,r2
   46f58:	00000106 	br	46f60 <__mdiff+0x54>
   46f5c:	40c0592e 	bgeu	r8,r3,470c4 <__mdiff+0x1b8>
   46f60:	18ffff04 	addi	r3,r3,-4
   46f64:	10bfff04 	addi	r2,r2,-4
   46f68:	19c00017 	ldw	r7,0(r3)
   46f6c:	11400017 	ldw	r5,0(r2)
   46f70:	397ffa26 	beq	r7,r5,46f5c <__alt_data_end+0xfffdfe5c>
   46f74:	3940592e 	bgeu	r7,r5,470dc <__mdiff+0x1d0>
   46f78:	9005883a 	mov	r2,r18
   46f7c:	4023883a 	mov	r17,r8
   46f80:	9825883a 	mov	r18,r19
   46f84:	05000044 	movi	r20,1
   46f88:	1027883a 	mov	r19,r2
   46f8c:	00000406 	br	46fa0 <__mdiff+0x94>
   46f90:	18005616 	blt	r3,zero,470ec <__mdiff+0x1e0>
   46f94:	34400504 	addi	r17,r6,20
   46f98:	2c000504 	addi	r16,r5,20
   46f9c:	0029883a 	mov	r20,zero
   46fa0:	91400117 	ldw	r5,4(r18)
   46fa4:	00465e40 	call	465e4 <_Balloc>
   46fa8:	92400417 	ldw	r9,16(r18)
   46fac:	9b000417 	ldw	r12,16(r19)
   46fb0:	12c00504 	addi	r11,r2,20
   46fb4:	4a51883a 	add	r8,r9,r9
   46fb8:	6319883a 	add	r12,r12,r12
   46fbc:	4211883a 	add	r8,r8,r8
   46fc0:	6319883a 	add	r12,r12,r12
   46fc4:	15000315 	stw	r20,12(r2)
   46fc8:	8211883a 	add	r8,r16,r8
   46fcc:	8b19883a 	add	r12,r17,r12
   46fd0:	0007883a 	mov	r3,zero
   46fd4:	81400017 	ldw	r5,0(r16)
   46fd8:	89c00017 	ldw	r7,0(r17)
   46fdc:	59800104 	addi	r6,r11,4
   46fe0:	293fffcc 	andi	r4,r5,65535
   46fe4:	20c7883a 	add	r3,r4,r3
   46fe8:	393fffcc 	andi	r4,r7,65535
   46fec:	1909c83a 	sub	r4,r3,r4
   46ff0:	280ad43a 	srli	r5,r5,16
   46ff4:	380ed43a 	srli	r7,r7,16
   46ff8:	2007d43a 	srai	r3,r4,16
   46ffc:	213fffcc 	andi	r4,r4,65535
   47000:	29cbc83a 	sub	r5,r5,r7
   47004:	28c7883a 	add	r3,r5,r3
   47008:	180a943a 	slli	r5,r3,16
   4700c:	8c400104 	addi	r17,r17,4
   47010:	84000104 	addi	r16,r16,4
   47014:	2908b03a 	or	r4,r5,r4
   47018:	59000015 	stw	r4,0(r11)
   4701c:	1807d43a 	srai	r3,r3,16
   47020:	3015883a 	mov	r10,r6
   47024:	3017883a 	mov	r11,r6
   47028:	8b3fea36 	bltu	r17,r12,46fd4 <__alt_data_end+0xfffdfed4>
   4702c:	8200162e 	bgeu	r16,r8,47088 <__mdiff+0x17c>
   47030:	8017883a 	mov	r11,r16
   47034:	59400017 	ldw	r5,0(r11)
   47038:	31800104 	addi	r6,r6,4
   4703c:	5ac00104 	addi	r11,r11,4
   47040:	293fffcc 	andi	r4,r5,65535
   47044:	20c7883a 	add	r3,r4,r3
   47048:	280ed43a 	srli	r7,r5,16
   4704c:	180bd43a 	srai	r5,r3,16
   47050:	193fffcc 	andi	r4,r3,65535
   47054:	3947883a 	add	r3,r7,r5
   47058:	180a943a 	slli	r5,r3,16
   4705c:	1807d43a 	srai	r3,r3,16
   47060:	2908b03a 	or	r4,r5,r4
   47064:	313fff15 	stw	r4,-4(r6)
   47068:	5a3ff236 	bltu	r11,r8,47034 <__alt_data_end+0xfffdff34>
   4706c:	0406303a 	nor	r3,zero,r16
   47070:	1a07883a 	add	r3,r3,r8
   47074:	1806d0ba 	srli	r3,r3,2
   47078:	18c00044 	addi	r3,r3,1
   4707c:	18c7883a 	add	r3,r3,r3
   47080:	18c7883a 	add	r3,r3,r3
   47084:	50d5883a 	add	r10,r10,r3
   47088:	50ffff04 	addi	r3,r10,-4
   4708c:	2000041e 	bne	r4,zero,470a0 <__mdiff+0x194>
   47090:	18ffff04 	addi	r3,r3,-4
   47094:	19000017 	ldw	r4,0(r3)
   47098:	4a7fffc4 	addi	r9,r9,-1
   4709c:	203ffc26 	beq	r4,zero,47090 <__alt_data_end+0xfffdff90>
   470a0:	12400415 	stw	r9,16(r2)
   470a4:	dfc00517 	ldw	ra,20(sp)
   470a8:	dd000417 	ldw	r20,16(sp)
   470ac:	dcc00317 	ldw	r19,12(sp)
   470b0:	dc800217 	ldw	r18,8(sp)
   470b4:	dc400117 	ldw	r17,4(sp)
   470b8:	dc000017 	ldw	r16,0(sp)
   470bc:	dec00604 	addi	sp,sp,24
   470c0:	f800283a 	ret
   470c4:	000b883a 	mov	r5,zero
   470c8:	00465e40 	call	465e4 <_Balloc>
   470cc:	00c00044 	movi	r3,1
   470d0:	10c00415 	stw	r3,16(r2)
   470d4:	10000515 	stw	zero,20(r2)
   470d8:	003ff206 	br	470a4 <__alt_data_end+0xfffdffa4>
   470dc:	8023883a 	mov	r17,r16
   470e0:	0029883a 	mov	r20,zero
   470e4:	4021883a 	mov	r16,r8
   470e8:	003fad06 	br	46fa0 <__alt_data_end+0xfffdfea0>
   470ec:	9005883a 	mov	r2,r18
   470f0:	94400504 	addi	r17,r18,20
   470f4:	9c000504 	addi	r16,r19,20
   470f8:	9825883a 	mov	r18,r19
   470fc:	05000044 	movi	r20,1
   47100:	1027883a 	mov	r19,r2
   47104:	003fa606 	br	46fa0 <__alt_data_end+0xfffdfea0>

00047108 <__ulp>:
   47108:	295ffc2c 	andhi	r5,r5,32752
   4710c:	00bf3034 	movhi	r2,64704
   47110:	2887883a 	add	r3,r5,r2
   47114:	00c0020e 	bge	zero,r3,47120 <__ulp+0x18>
   47118:	0005883a 	mov	r2,zero
   4711c:	f800283a 	ret
   47120:	00c7c83a 	sub	r3,zero,r3
   47124:	1807d53a 	srai	r3,r3,20
   47128:	008004c4 	movi	r2,19
   4712c:	10c00b0e 	bge	r2,r3,4715c <__ulp+0x54>
   47130:	18bffb04 	addi	r2,r3,-20
   47134:	01000784 	movi	r4,30
   47138:	0007883a 	mov	r3,zero
   4713c:	20800516 	blt	r4,r2,47154 <__ulp+0x4c>
   47140:	010007c4 	movi	r4,31
   47144:	2089c83a 	sub	r4,r4,r2
   47148:	00800044 	movi	r2,1
   4714c:	1104983a 	sll	r2,r2,r4
   47150:	f800283a 	ret
   47154:	00800044 	movi	r2,1
   47158:	f800283a 	ret
   4715c:	01400234 	movhi	r5,8
   47160:	28c7d83a 	sra	r3,r5,r3
   47164:	0005883a 	mov	r2,zero
   47168:	f800283a 	ret

0004716c <__b2d>:
   4716c:	defffa04 	addi	sp,sp,-24
   47170:	dc000015 	stw	r16,0(sp)
   47174:	24000417 	ldw	r16,16(r4)
   47178:	dc400115 	stw	r17,4(sp)
   4717c:	24400504 	addi	r17,r4,20
   47180:	8421883a 	add	r16,r16,r16
   47184:	8421883a 	add	r16,r16,r16
   47188:	8c21883a 	add	r16,r17,r16
   4718c:	dc800215 	stw	r18,8(sp)
   47190:	84bfff17 	ldw	r18,-4(r16)
   47194:	dd000415 	stw	r20,16(sp)
   47198:	dcc00315 	stw	r19,12(sp)
   4719c:	9009883a 	mov	r4,r18
   471a0:	2829883a 	mov	r20,r5
   471a4:	dfc00515 	stw	ra,20(sp)
   471a8:	00468d80 	call	468d8 <__hi0bits>
   471ac:	00c00804 	movi	r3,32
   471b0:	1889c83a 	sub	r4,r3,r2
   471b4:	a1000015 	stw	r4,0(r20)
   471b8:	01000284 	movi	r4,10
   471bc:	84ffff04 	addi	r19,r16,-4
   471c0:	20801216 	blt	r4,r2,4720c <__b2d+0xa0>
   471c4:	018002c4 	movi	r6,11
   471c8:	308dc83a 	sub	r6,r6,r2
   471cc:	9186d83a 	srl	r3,r18,r6
   471d0:	18cffc34 	orhi	r3,r3,16368
   471d4:	8cc0212e 	bgeu	r17,r19,4725c <__b2d+0xf0>
   471d8:	813ffe17 	ldw	r4,-8(r16)
   471dc:	218cd83a 	srl	r6,r4,r6
   471e0:	10800544 	addi	r2,r2,21
   471e4:	9084983a 	sll	r2,r18,r2
   471e8:	1184b03a 	or	r2,r2,r6
   471ec:	dfc00517 	ldw	ra,20(sp)
   471f0:	dd000417 	ldw	r20,16(sp)
   471f4:	dcc00317 	ldw	r19,12(sp)
   471f8:	dc800217 	ldw	r18,8(sp)
   471fc:	dc400117 	ldw	r17,4(sp)
   47200:	dc000017 	ldw	r16,0(sp)
   47204:	dec00604 	addi	sp,sp,24
   47208:	f800283a 	ret
   4720c:	8cc00f2e 	bgeu	r17,r19,4724c <__b2d+0xe0>
   47210:	117ffd44 	addi	r5,r2,-11
   47214:	80bffe17 	ldw	r2,-8(r16)
   47218:	28000e26 	beq	r5,zero,47254 <__b2d+0xe8>
   4721c:	1949c83a 	sub	r4,r3,r5
   47220:	9164983a 	sll	r18,r18,r5
   47224:	1106d83a 	srl	r3,r2,r4
   47228:	81bffe04 	addi	r6,r16,-8
   4722c:	948ffc34 	orhi	r18,r18,16368
   47230:	90c6b03a 	or	r3,r18,r3
   47234:	89800e2e 	bgeu	r17,r6,47270 <__b2d+0x104>
   47238:	81bffd17 	ldw	r6,-12(r16)
   4723c:	1144983a 	sll	r2,r2,r5
   47240:	310ad83a 	srl	r5,r6,r4
   47244:	2884b03a 	or	r2,r5,r2
   47248:	003fe806 	br	471ec <__alt_data_end+0xfffe00ec>
   4724c:	10bffd44 	addi	r2,r2,-11
   47250:	1000041e 	bne	r2,zero,47264 <__b2d+0xf8>
   47254:	90cffc34 	orhi	r3,r18,16368
   47258:	003fe406 	br	471ec <__alt_data_end+0xfffe00ec>
   4725c:	000d883a 	mov	r6,zero
   47260:	003fdf06 	br	471e0 <__alt_data_end+0xfffe00e0>
   47264:	90a4983a 	sll	r18,r18,r2
   47268:	0005883a 	mov	r2,zero
   4726c:	003ff906 	br	47254 <__alt_data_end+0xfffe0154>
   47270:	1144983a 	sll	r2,r2,r5
   47274:	003fdd06 	br	471ec <__alt_data_end+0xfffe00ec>

00047278 <__d2b>:
   47278:	defff804 	addi	sp,sp,-32
   4727c:	dc000215 	stw	r16,8(sp)
   47280:	3021883a 	mov	r16,r6
   47284:	dc400315 	stw	r17,12(sp)
   47288:	8022907a 	slli	r17,r16,1
   4728c:	dd000615 	stw	r20,24(sp)
   47290:	2829883a 	mov	r20,r5
   47294:	01400044 	movi	r5,1
   47298:	dcc00515 	stw	r19,20(sp)
   4729c:	dc800415 	stw	r18,16(sp)
   472a0:	dfc00715 	stw	ra,28(sp)
   472a4:	3825883a 	mov	r18,r7
   472a8:	8822d57a 	srli	r17,r17,21
   472ac:	00465e40 	call	465e4 <_Balloc>
   472b0:	1027883a 	mov	r19,r2
   472b4:	00800434 	movhi	r2,16
   472b8:	10bfffc4 	addi	r2,r2,-1
   472bc:	808c703a 	and	r6,r16,r2
   472c0:	88000126 	beq	r17,zero,472c8 <__d2b+0x50>
   472c4:	31800434 	orhi	r6,r6,16
   472c8:	d9800015 	stw	r6,0(sp)
   472cc:	a0002426 	beq	r20,zero,47360 <__d2b+0xe8>
   472d0:	d9000104 	addi	r4,sp,4
   472d4:	dd000115 	stw	r20,4(sp)
   472d8:	00469400 	call	46940 <__lo0bits>
   472dc:	d8c00017 	ldw	r3,0(sp)
   472e0:	10002f1e 	bne	r2,zero,473a0 <__d2b+0x128>
   472e4:	d9000117 	ldw	r4,4(sp)
   472e8:	99000515 	stw	r4,20(r19)
   472ec:	1821003a 	cmpeq	r16,r3,zero
   472f0:	01000084 	movi	r4,2
   472f4:	2421c83a 	sub	r16,r4,r16
   472f8:	98c00615 	stw	r3,24(r19)
   472fc:	9c000415 	stw	r16,16(r19)
   47300:	88001f1e 	bne	r17,zero,47380 <__d2b+0x108>
   47304:	10bef384 	addi	r2,r2,-1074
   47308:	90800015 	stw	r2,0(r18)
   4730c:	00900034 	movhi	r2,16384
   47310:	10bfffc4 	addi	r2,r2,-1
   47314:	8085883a 	add	r2,r16,r2
   47318:	1085883a 	add	r2,r2,r2
   4731c:	1085883a 	add	r2,r2,r2
   47320:	9885883a 	add	r2,r19,r2
   47324:	11000517 	ldw	r4,20(r2)
   47328:	8020917a 	slli	r16,r16,5
   4732c:	00468d80 	call	468d8 <__hi0bits>
   47330:	d8c00817 	ldw	r3,32(sp)
   47334:	8085c83a 	sub	r2,r16,r2
   47338:	18800015 	stw	r2,0(r3)
   4733c:	9805883a 	mov	r2,r19
   47340:	dfc00717 	ldw	ra,28(sp)
   47344:	dd000617 	ldw	r20,24(sp)
   47348:	dcc00517 	ldw	r19,20(sp)
   4734c:	dc800417 	ldw	r18,16(sp)
   47350:	dc400317 	ldw	r17,12(sp)
   47354:	dc000217 	ldw	r16,8(sp)
   47358:	dec00804 	addi	sp,sp,32
   4735c:	f800283a 	ret
   47360:	d809883a 	mov	r4,sp
   47364:	00469400 	call	46940 <__lo0bits>
   47368:	d8c00017 	ldw	r3,0(sp)
   4736c:	04000044 	movi	r16,1
   47370:	9c000415 	stw	r16,16(r19)
   47374:	98c00515 	stw	r3,20(r19)
   47378:	10800804 	addi	r2,r2,32
   4737c:	883fe126 	beq	r17,zero,47304 <__alt_data_end+0xfffe0204>
   47380:	00c00d44 	movi	r3,53
   47384:	8c7ef344 	addi	r17,r17,-1075
   47388:	88a3883a 	add	r17,r17,r2
   4738c:	1885c83a 	sub	r2,r3,r2
   47390:	d8c00817 	ldw	r3,32(sp)
   47394:	94400015 	stw	r17,0(r18)
   47398:	18800015 	stw	r2,0(r3)
   4739c:	003fe706 	br	4733c <__alt_data_end+0xfffe023c>
   473a0:	01000804 	movi	r4,32
   473a4:	2089c83a 	sub	r4,r4,r2
   473a8:	1908983a 	sll	r4,r3,r4
   473ac:	d9400117 	ldw	r5,4(sp)
   473b0:	1886d83a 	srl	r3,r3,r2
   473b4:	2148b03a 	or	r4,r4,r5
   473b8:	99000515 	stw	r4,20(r19)
   473bc:	d8c00015 	stw	r3,0(sp)
   473c0:	003fca06 	br	472ec <__alt_data_end+0xfffe01ec>

000473c4 <__ratio>:
   473c4:	defff904 	addi	sp,sp,-28
   473c8:	dc400315 	stw	r17,12(sp)
   473cc:	2823883a 	mov	r17,r5
   473d0:	d9400104 	addi	r5,sp,4
   473d4:	dfc00615 	stw	ra,24(sp)
   473d8:	dcc00515 	stw	r19,20(sp)
   473dc:	dc800415 	stw	r18,16(sp)
   473e0:	2027883a 	mov	r19,r4
   473e4:	dc000215 	stw	r16,8(sp)
   473e8:	004716c0 	call	4716c <__b2d>
   473ec:	d80b883a 	mov	r5,sp
   473f0:	8809883a 	mov	r4,r17
   473f4:	1025883a 	mov	r18,r2
   473f8:	1821883a 	mov	r16,r3
   473fc:	004716c0 	call	4716c <__b2d>
   47400:	8a000417 	ldw	r8,16(r17)
   47404:	99000417 	ldw	r4,16(r19)
   47408:	d9400117 	ldw	r5,4(sp)
   4740c:	2209c83a 	sub	r4,r4,r8
   47410:	2010917a 	slli	r8,r4,5
   47414:	d9000017 	ldw	r4,0(sp)
   47418:	2909c83a 	sub	r4,r5,r4
   4741c:	4109883a 	add	r4,r8,r4
   47420:	01000e0e 	bge	zero,r4,4745c <__ratio+0x98>
   47424:	2008953a 	slli	r4,r4,20
   47428:	2421883a 	add	r16,r4,r16
   4742c:	100d883a 	mov	r6,r2
   47430:	180f883a 	mov	r7,r3
   47434:	9009883a 	mov	r4,r18
   47438:	800b883a 	mov	r5,r16
   4743c:	004b2640 	call	4b264 <__divdf3>
   47440:	dfc00617 	ldw	ra,24(sp)
   47444:	dcc00517 	ldw	r19,20(sp)
   47448:	dc800417 	ldw	r18,16(sp)
   4744c:	dc400317 	ldw	r17,12(sp)
   47450:	dc000217 	ldw	r16,8(sp)
   47454:	dec00704 	addi	sp,sp,28
   47458:	f800283a 	ret
   4745c:	2008953a 	slli	r4,r4,20
   47460:	1907c83a 	sub	r3,r3,r4
   47464:	003ff106 	br	4742c <__alt_data_end+0xfffe032c>

00047468 <_mprec_log10>:
   47468:	defffe04 	addi	sp,sp,-8
   4746c:	dc000015 	stw	r16,0(sp)
   47470:	dfc00115 	stw	ra,4(sp)
   47474:	008005c4 	movi	r2,23
   47478:	2021883a 	mov	r16,r4
   4747c:	11000d0e 	bge	r2,r4,474b4 <_mprec_log10+0x4c>
   47480:	0005883a 	mov	r2,zero
   47484:	00cffc34 	movhi	r3,16368
   47488:	843fffc4 	addi	r16,r16,-1
   4748c:	000d883a 	mov	r6,zero
   47490:	01d00934 	movhi	r7,16420
   47494:	1009883a 	mov	r4,r2
   47498:	180b883a 	mov	r5,r3
   4749c:	004bda40 	call	4bda4 <__muldf3>
   474a0:	803ff91e 	bne	r16,zero,47488 <__alt_data_end+0xfffe0388>
   474a4:	dfc00117 	ldw	ra,4(sp)
   474a8:	dc000017 	ldw	r16,0(sp)
   474ac:	dec00204 	addi	sp,sp,8
   474b0:	f800283a 	ret
   474b4:	202090fa 	slli	r16,r4,3
   474b8:	00800174 	movhi	r2,5
   474bc:	10bea204 	addi	r2,r2,-1400
   474c0:	1421883a 	add	r16,r2,r16
   474c4:	80800017 	ldw	r2,0(r16)
   474c8:	80c00117 	ldw	r3,4(r16)
   474cc:	dfc00117 	ldw	ra,4(sp)
   474d0:	dc000017 	ldw	r16,0(sp)
   474d4:	dec00204 	addi	sp,sp,8
   474d8:	f800283a 	ret

000474dc <__copybits>:
   474dc:	297fffc4 	addi	r5,r5,-1
   474e0:	280fd17a 	srai	r7,r5,5
   474e4:	30c00417 	ldw	r3,16(r6)
   474e8:	30800504 	addi	r2,r6,20
   474ec:	39c00044 	addi	r7,r7,1
   474f0:	18c7883a 	add	r3,r3,r3
   474f4:	39cf883a 	add	r7,r7,r7
   474f8:	18c7883a 	add	r3,r3,r3
   474fc:	39cf883a 	add	r7,r7,r7
   47500:	10c7883a 	add	r3,r2,r3
   47504:	21cf883a 	add	r7,r4,r7
   47508:	10c00d2e 	bgeu	r2,r3,47540 <__copybits+0x64>
   4750c:	200b883a 	mov	r5,r4
   47510:	12000017 	ldw	r8,0(r2)
   47514:	29400104 	addi	r5,r5,4
   47518:	10800104 	addi	r2,r2,4
   4751c:	2a3fff15 	stw	r8,-4(r5)
   47520:	10fffb36 	bltu	r2,r3,47510 <__alt_data_end+0xfffe0410>
   47524:	1985c83a 	sub	r2,r3,r6
   47528:	10bffac4 	addi	r2,r2,-21
   4752c:	1004d0ba 	srli	r2,r2,2
   47530:	10800044 	addi	r2,r2,1
   47534:	1085883a 	add	r2,r2,r2
   47538:	1085883a 	add	r2,r2,r2
   4753c:	2089883a 	add	r4,r4,r2
   47540:	21c0032e 	bgeu	r4,r7,47550 <__copybits+0x74>
   47544:	20000015 	stw	zero,0(r4)
   47548:	21000104 	addi	r4,r4,4
   4754c:	21fffd36 	bltu	r4,r7,47544 <__alt_data_end+0xfffe0444>
   47550:	f800283a 	ret

00047554 <__any_on>:
   47554:	20c00417 	ldw	r3,16(r4)
   47558:	2805d17a 	srai	r2,r5,5
   4755c:	21000504 	addi	r4,r4,20
   47560:	18800d0e 	bge	r3,r2,47598 <__any_on+0x44>
   47564:	18c7883a 	add	r3,r3,r3
   47568:	18c7883a 	add	r3,r3,r3
   4756c:	20c7883a 	add	r3,r4,r3
   47570:	20c0192e 	bgeu	r4,r3,475d8 <__any_on+0x84>
   47574:	18bfff17 	ldw	r2,-4(r3)
   47578:	18ffff04 	addi	r3,r3,-4
   4757c:	1000041e 	bne	r2,zero,47590 <__any_on+0x3c>
   47580:	20c0142e 	bgeu	r4,r3,475d4 <__any_on+0x80>
   47584:	18ffff04 	addi	r3,r3,-4
   47588:	19400017 	ldw	r5,0(r3)
   4758c:	283ffc26 	beq	r5,zero,47580 <__alt_data_end+0xfffe0480>
   47590:	00800044 	movi	r2,1
   47594:	f800283a 	ret
   47598:	10c00a0e 	bge	r2,r3,475c4 <__any_on+0x70>
   4759c:	1085883a 	add	r2,r2,r2
   475a0:	1085883a 	add	r2,r2,r2
   475a4:	294007cc 	andi	r5,r5,31
   475a8:	2087883a 	add	r3,r4,r2
   475ac:	283ff026 	beq	r5,zero,47570 <__alt_data_end+0xfffe0470>
   475b0:	19800017 	ldw	r6,0(r3)
   475b4:	3144d83a 	srl	r2,r6,r5
   475b8:	114a983a 	sll	r5,r2,r5
   475bc:	317ff41e 	bne	r6,r5,47590 <__alt_data_end+0xfffe0490>
   475c0:	003feb06 	br	47570 <__alt_data_end+0xfffe0470>
   475c4:	1085883a 	add	r2,r2,r2
   475c8:	1085883a 	add	r2,r2,r2
   475cc:	2087883a 	add	r3,r4,r2
   475d0:	003fe706 	br	47570 <__alt_data_end+0xfffe0470>
   475d4:	f800283a 	ret
   475d8:	0005883a 	mov	r2,zero
   475dc:	f800283a 	ret

000475e0 <_putc_r>:
   475e0:	defffc04 	addi	sp,sp,-16
   475e4:	dc000215 	stw	r16,8(sp)
   475e8:	dfc00315 	stw	ra,12(sp)
   475ec:	2021883a 	mov	r16,r4
   475f0:	20000226 	beq	r4,zero,475fc <_putc_r+0x1c>
   475f4:	20800e17 	ldw	r2,56(r4)
   475f8:	10001b26 	beq	r2,zero,47668 <_putc_r+0x88>
   475fc:	30800217 	ldw	r2,8(r6)
   47600:	10bfffc4 	addi	r2,r2,-1
   47604:	30800215 	stw	r2,8(r6)
   47608:	10000a16 	blt	r2,zero,47634 <_putc_r+0x54>
   4760c:	30800017 	ldw	r2,0(r6)
   47610:	11400005 	stb	r5,0(r2)
   47614:	30800017 	ldw	r2,0(r6)
   47618:	10c00044 	addi	r3,r2,1
   4761c:	30c00015 	stw	r3,0(r6)
   47620:	10800003 	ldbu	r2,0(r2)
   47624:	dfc00317 	ldw	ra,12(sp)
   47628:	dc000217 	ldw	r16,8(sp)
   4762c:	dec00404 	addi	sp,sp,16
   47630:	f800283a 	ret
   47634:	30c00617 	ldw	r3,24(r6)
   47638:	10c00616 	blt	r2,r3,47654 <_putc_r+0x74>
   4763c:	30800017 	ldw	r2,0(r6)
   47640:	00c00284 	movi	r3,10
   47644:	11400005 	stb	r5,0(r2)
   47648:	30800017 	ldw	r2,0(r6)
   4764c:	11400003 	ldbu	r5,0(r2)
   47650:	28fff11e 	bne	r5,r3,47618 <__alt_data_end+0xfffe0518>
   47654:	8009883a 	mov	r4,r16
   47658:	dfc00317 	ldw	ra,12(sp)
   4765c:	dc000217 	ldw	r16,8(sp)
   47660:	dec00404 	addi	sp,sp,16
   47664:	00495d41 	jmpi	495d4 <__swbuf_r>
   47668:	d9400015 	stw	r5,0(sp)
   4766c:	d9800115 	stw	r6,4(sp)
   47670:	0044bc80 	call	44bc8 <__sinit>
   47674:	d9800117 	ldw	r6,4(sp)
   47678:	d9400017 	ldw	r5,0(sp)
   4767c:	003fdf06 	br	475fc <__alt_data_end+0xfffe04fc>

00047680 <putc>:
   47680:	00800174 	movhi	r2,5
   47684:	defffc04 	addi	sp,sp,-16
   47688:	1085d304 	addi	r2,r2,5964
   4768c:	dc000115 	stw	r16,4(sp)
   47690:	14000017 	ldw	r16,0(r2)
   47694:	dc400215 	stw	r17,8(sp)
   47698:	dfc00315 	stw	ra,12(sp)
   4769c:	2023883a 	mov	r17,r4
   476a0:	80000226 	beq	r16,zero,476ac <putc+0x2c>
   476a4:	80800e17 	ldw	r2,56(r16)
   476a8:	10001a26 	beq	r2,zero,47714 <putc+0x94>
   476ac:	28800217 	ldw	r2,8(r5)
   476b0:	10bfffc4 	addi	r2,r2,-1
   476b4:	28800215 	stw	r2,8(r5)
   476b8:	10000b16 	blt	r2,zero,476e8 <putc+0x68>
   476bc:	28800017 	ldw	r2,0(r5)
   476c0:	14400005 	stb	r17,0(r2)
   476c4:	28800017 	ldw	r2,0(r5)
   476c8:	10c00044 	addi	r3,r2,1
   476cc:	28c00015 	stw	r3,0(r5)
   476d0:	10800003 	ldbu	r2,0(r2)
   476d4:	dfc00317 	ldw	ra,12(sp)
   476d8:	dc400217 	ldw	r17,8(sp)
   476dc:	dc000117 	ldw	r16,4(sp)
   476e0:	dec00404 	addi	sp,sp,16
   476e4:	f800283a 	ret
   476e8:	28c00617 	ldw	r3,24(r5)
   476ec:	10c00e16 	blt	r2,r3,47728 <putc+0xa8>
   476f0:	28800017 	ldw	r2,0(r5)
   476f4:	01000284 	movi	r4,10
   476f8:	14400005 	stb	r17,0(r2)
   476fc:	28800017 	ldw	r2,0(r5)
   47700:	10c00003 	ldbu	r3,0(r2)
   47704:	193ff01e 	bne	r3,r4,476c8 <__alt_data_end+0xfffe05c8>
   47708:	280d883a 	mov	r6,r5
   4770c:	180b883a 	mov	r5,r3
   47710:	00000706 	br	47730 <putc+0xb0>
   47714:	8009883a 	mov	r4,r16
   47718:	d9400015 	stw	r5,0(sp)
   4771c:	0044bc80 	call	44bc8 <__sinit>
   47720:	d9400017 	ldw	r5,0(sp)
   47724:	003fe106 	br	476ac <__alt_data_end+0xfffe05ac>
   47728:	280d883a 	mov	r6,r5
   4772c:	880b883a 	mov	r5,r17
   47730:	8009883a 	mov	r4,r16
   47734:	dfc00317 	ldw	ra,12(sp)
   47738:	dc400217 	ldw	r17,8(sp)
   4773c:	dc000117 	ldw	r16,4(sp)
   47740:	dec00404 	addi	sp,sp,16
   47744:	00495d41 	jmpi	495d4 <__swbuf_r>

00047748 <_realloc_r>:
   47748:	defff604 	addi	sp,sp,-40
   4774c:	dc800215 	stw	r18,8(sp)
   47750:	dfc00915 	stw	ra,36(sp)
   47754:	df000815 	stw	fp,32(sp)
   47758:	ddc00715 	stw	r23,28(sp)
   4775c:	dd800615 	stw	r22,24(sp)
   47760:	dd400515 	stw	r21,20(sp)
   47764:	dd000415 	stw	r20,16(sp)
   47768:	dcc00315 	stw	r19,12(sp)
   4776c:	dc400115 	stw	r17,4(sp)
   47770:	dc000015 	stw	r16,0(sp)
   47774:	3025883a 	mov	r18,r6
   47778:	2800b726 	beq	r5,zero,47a58 <_realloc_r+0x310>
   4777c:	282b883a 	mov	r21,r5
   47780:	2029883a 	mov	r20,r4
   47784:	004d59c0 	call	4d59c <__malloc_lock>
   47788:	a8bfff17 	ldw	r2,-4(r21)
   4778c:	043fff04 	movi	r16,-4
   47790:	90c002c4 	addi	r3,r18,11
   47794:	01000584 	movi	r4,22
   47798:	acfffe04 	addi	r19,r21,-8
   4779c:	1420703a 	and	r16,r2,r16
   477a0:	20c0332e 	bgeu	r4,r3,47870 <_realloc_r+0x128>
   477a4:	047ffe04 	movi	r17,-8
   477a8:	1c62703a 	and	r17,r3,r17
   477ac:	8807883a 	mov	r3,r17
   477b0:	88005816 	blt	r17,zero,47914 <_realloc_r+0x1cc>
   477b4:	8c805736 	bltu	r17,r18,47914 <_realloc_r+0x1cc>
   477b8:	80c0300e 	bge	r16,r3,4787c <_realloc_r+0x134>
   477bc:	07000174 	movhi	fp,5
   477c0:	e7004e04 	addi	fp,fp,312
   477c4:	e1c00217 	ldw	r7,8(fp)
   477c8:	9c09883a 	add	r4,r19,r16
   477cc:	22000117 	ldw	r8,4(r4)
   477d0:	21c06326 	beq	r4,r7,47960 <_realloc_r+0x218>
   477d4:	017fff84 	movi	r5,-2
   477d8:	414a703a 	and	r5,r8,r5
   477dc:	214b883a 	add	r5,r4,r5
   477e0:	29800117 	ldw	r6,4(r5)
   477e4:	3180004c 	andi	r6,r6,1
   477e8:	30003f26 	beq	r6,zero,478e8 <_realloc_r+0x1a0>
   477ec:	1080004c 	andi	r2,r2,1
   477f0:	10008326 	beq	r2,zero,47a00 <_realloc_r+0x2b8>
   477f4:	900b883a 	mov	r5,r18
   477f8:	a009883a 	mov	r4,r20
   477fc:	00459280 	call	45928 <_malloc_r>
   47800:	1025883a 	mov	r18,r2
   47804:	10011e26 	beq	r2,zero,47c80 <_realloc_r+0x538>
   47808:	a93fff17 	ldw	r4,-4(r21)
   4780c:	10fffe04 	addi	r3,r2,-8
   47810:	00bfff84 	movi	r2,-2
   47814:	2084703a 	and	r2,r4,r2
   47818:	9885883a 	add	r2,r19,r2
   4781c:	1880ee26 	beq	r3,r2,47bd8 <_realloc_r+0x490>
   47820:	81bfff04 	addi	r6,r16,-4
   47824:	00800904 	movi	r2,36
   47828:	1180b836 	bltu	r2,r6,47b0c <_realloc_r+0x3c4>
   4782c:	00c004c4 	movi	r3,19
   47830:	19809636 	bltu	r3,r6,47a8c <_realloc_r+0x344>
   47834:	9005883a 	mov	r2,r18
   47838:	a807883a 	mov	r3,r21
   4783c:	19000017 	ldw	r4,0(r3)
   47840:	11000015 	stw	r4,0(r2)
   47844:	19000117 	ldw	r4,4(r3)
   47848:	11000115 	stw	r4,4(r2)
   4784c:	18c00217 	ldw	r3,8(r3)
   47850:	10c00215 	stw	r3,8(r2)
   47854:	a80b883a 	mov	r5,r21
   47858:	a009883a 	mov	r4,r20
   4785c:	0044d3c0 	call	44d3c <_free_r>
   47860:	a009883a 	mov	r4,r20
   47864:	004d5c00 	call	4d5c0 <__malloc_unlock>
   47868:	9005883a 	mov	r2,r18
   4786c:	00001206 	br	478b8 <_realloc_r+0x170>
   47870:	00c00404 	movi	r3,16
   47874:	1823883a 	mov	r17,r3
   47878:	003fce06 	br	477b4 <__alt_data_end+0xfffe06b4>
   4787c:	a825883a 	mov	r18,r21
   47880:	8445c83a 	sub	r2,r16,r17
   47884:	00c003c4 	movi	r3,15
   47888:	18802636 	bltu	r3,r2,47924 <_realloc_r+0x1dc>
   4788c:	99800117 	ldw	r6,4(r19)
   47890:	9c07883a 	add	r3,r19,r16
   47894:	3180004c 	andi	r6,r6,1
   47898:	3420b03a 	or	r16,r6,r16
   4789c:	9c000115 	stw	r16,4(r19)
   478a0:	18800117 	ldw	r2,4(r3)
   478a4:	10800054 	ori	r2,r2,1
   478a8:	18800115 	stw	r2,4(r3)
   478ac:	a009883a 	mov	r4,r20
   478b0:	004d5c00 	call	4d5c0 <__malloc_unlock>
   478b4:	9005883a 	mov	r2,r18
   478b8:	dfc00917 	ldw	ra,36(sp)
   478bc:	df000817 	ldw	fp,32(sp)
   478c0:	ddc00717 	ldw	r23,28(sp)
   478c4:	dd800617 	ldw	r22,24(sp)
   478c8:	dd400517 	ldw	r21,20(sp)
   478cc:	dd000417 	ldw	r20,16(sp)
   478d0:	dcc00317 	ldw	r19,12(sp)
   478d4:	dc800217 	ldw	r18,8(sp)
   478d8:	dc400117 	ldw	r17,4(sp)
   478dc:	dc000017 	ldw	r16,0(sp)
   478e0:	dec00a04 	addi	sp,sp,40
   478e4:	f800283a 	ret
   478e8:	017fff04 	movi	r5,-4
   478ec:	414a703a 	and	r5,r8,r5
   478f0:	814d883a 	add	r6,r16,r5
   478f4:	30c01f16 	blt	r6,r3,47974 <_realloc_r+0x22c>
   478f8:	20800317 	ldw	r2,12(r4)
   478fc:	20c00217 	ldw	r3,8(r4)
   47900:	a825883a 	mov	r18,r21
   47904:	3021883a 	mov	r16,r6
   47908:	18800315 	stw	r2,12(r3)
   4790c:	10c00215 	stw	r3,8(r2)
   47910:	003fdb06 	br	47880 <__alt_data_end+0xfffe0780>
   47914:	00800304 	movi	r2,12
   47918:	a0800015 	stw	r2,0(r20)
   4791c:	0005883a 	mov	r2,zero
   47920:	003fe506 	br	478b8 <__alt_data_end+0xfffe07b8>
   47924:	98c00117 	ldw	r3,4(r19)
   47928:	9c4b883a 	add	r5,r19,r17
   4792c:	11000054 	ori	r4,r2,1
   47930:	18c0004c 	andi	r3,r3,1
   47934:	1c62b03a 	or	r17,r3,r17
   47938:	9c400115 	stw	r17,4(r19)
   4793c:	29000115 	stw	r4,4(r5)
   47940:	2885883a 	add	r2,r5,r2
   47944:	10c00117 	ldw	r3,4(r2)
   47948:	29400204 	addi	r5,r5,8
   4794c:	a009883a 	mov	r4,r20
   47950:	18c00054 	ori	r3,r3,1
   47954:	10c00115 	stw	r3,4(r2)
   47958:	0044d3c0 	call	44d3c <_free_r>
   4795c:	003fd306 	br	478ac <__alt_data_end+0xfffe07ac>
   47960:	017fff04 	movi	r5,-4
   47964:	414a703a 	and	r5,r8,r5
   47968:	89800404 	addi	r6,r17,16
   4796c:	8151883a 	add	r8,r16,r5
   47970:	4180590e 	bge	r8,r6,47ad8 <_realloc_r+0x390>
   47974:	1080004c 	andi	r2,r2,1
   47978:	103f9e1e 	bne	r2,zero,477f4 <__alt_data_end+0xfffe06f4>
   4797c:	adbffe17 	ldw	r22,-8(r21)
   47980:	00bfff04 	movi	r2,-4
   47984:	9dadc83a 	sub	r22,r19,r22
   47988:	b1800117 	ldw	r6,4(r22)
   4798c:	3084703a 	and	r2,r6,r2
   47990:	20002026 	beq	r4,zero,47a14 <_realloc_r+0x2cc>
   47994:	80af883a 	add	r23,r16,r2
   47998:	b96f883a 	add	r23,r23,r5
   4799c:	21c05f26 	beq	r4,r7,47b1c <_realloc_r+0x3d4>
   479a0:	b8c01c16 	blt	r23,r3,47a14 <_realloc_r+0x2cc>
   479a4:	20800317 	ldw	r2,12(r4)
   479a8:	20c00217 	ldw	r3,8(r4)
   479ac:	81bfff04 	addi	r6,r16,-4
   479b0:	01000904 	movi	r4,36
   479b4:	18800315 	stw	r2,12(r3)
   479b8:	10c00215 	stw	r3,8(r2)
   479bc:	b0c00217 	ldw	r3,8(r22)
   479c0:	b0800317 	ldw	r2,12(r22)
   479c4:	b4800204 	addi	r18,r22,8
   479c8:	18800315 	stw	r2,12(r3)
   479cc:	10c00215 	stw	r3,8(r2)
   479d0:	21801b36 	bltu	r4,r6,47a40 <_realloc_r+0x2f8>
   479d4:	008004c4 	movi	r2,19
   479d8:	1180352e 	bgeu	r2,r6,47ab0 <_realloc_r+0x368>
   479dc:	a8800017 	ldw	r2,0(r21)
   479e0:	b0800215 	stw	r2,8(r22)
   479e4:	a8800117 	ldw	r2,4(r21)
   479e8:	b0800315 	stw	r2,12(r22)
   479ec:	008006c4 	movi	r2,27
   479f0:	11807f36 	bltu	r2,r6,47bf0 <_realloc_r+0x4a8>
   479f4:	b0800404 	addi	r2,r22,16
   479f8:	ad400204 	addi	r21,r21,8
   479fc:	00002d06 	br	47ab4 <_realloc_r+0x36c>
   47a00:	adbffe17 	ldw	r22,-8(r21)
   47a04:	00bfff04 	movi	r2,-4
   47a08:	9dadc83a 	sub	r22,r19,r22
   47a0c:	b1000117 	ldw	r4,4(r22)
   47a10:	2084703a 	and	r2,r4,r2
   47a14:	b03f7726 	beq	r22,zero,477f4 <__alt_data_end+0xfffe06f4>
   47a18:	80af883a 	add	r23,r16,r2
   47a1c:	b8ff7516 	blt	r23,r3,477f4 <__alt_data_end+0xfffe06f4>
   47a20:	b0800317 	ldw	r2,12(r22)
   47a24:	b0c00217 	ldw	r3,8(r22)
   47a28:	81bfff04 	addi	r6,r16,-4
   47a2c:	01000904 	movi	r4,36
   47a30:	18800315 	stw	r2,12(r3)
   47a34:	10c00215 	stw	r3,8(r2)
   47a38:	b4800204 	addi	r18,r22,8
   47a3c:	21bfe52e 	bgeu	r4,r6,479d4 <__alt_data_end+0xfffe08d4>
   47a40:	a80b883a 	mov	r5,r21
   47a44:	9009883a 	mov	r4,r18
   47a48:	00463600 	call	46360 <memmove>
   47a4c:	b821883a 	mov	r16,r23
   47a50:	b027883a 	mov	r19,r22
   47a54:	003f8a06 	br	47880 <__alt_data_end+0xfffe0780>
   47a58:	300b883a 	mov	r5,r6
   47a5c:	dfc00917 	ldw	ra,36(sp)
   47a60:	df000817 	ldw	fp,32(sp)
   47a64:	ddc00717 	ldw	r23,28(sp)
   47a68:	dd800617 	ldw	r22,24(sp)
   47a6c:	dd400517 	ldw	r21,20(sp)
   47a70:	dd000417 	ldw	r20,16(sp)
   47a74:	dcc00317 	ldw	r19,12(sp)
   47a78:	dc800217 	ldw	r18,8(sp)
   47a7c:	dc400117 	ldw	r17,4(sp)
   47a80:	dc000017 	ldw	r16,0(sp)
   47a84:	dec00a04 	addi	sp,sp,40
   47a88:	00459281 	jmpi	45928 <_malloc_r>
   47a8c:	a8c00017 	ldw	r3,0(r21)
   47a90:	90c00015 	stw	r3,0(r18)
   47a94:	a8c00117 	ldw	r3,4(r21)
   47a98:	90c00115 	stw	r3,4(r18)
   47a9c:	00c006c4 	movi	r3,27
   47aa0:	19804536 	bltu	r3,r6,47bb8 <_realloc_r+0x470>
   47aa4:	90800204 	addi	r2,r18,8
   47aa8:	a8c00204 	addi	r3,r21,8
   47aac:	003f6306 	br	4783c <__alt_data_end+0xfffe073c>
   47ab0:	9005883a 	mov	r2,r18
   47ab4:	a8c00017 	ldw	r3,0(r21)
   47ab8:	b821883a 	mov	r16,r23
   47abc:	b027883a 	mov	r19,r22
   47ac0:	10c00015 	stw	r3,0(r2)
   47ac4:	a8c00117 	ldw	r3,4(r21)
   47ac8:	10c00115 	stw	r3,4(r2)
   47acc:	a8c00217 	ldw	r3,8(r21)
   47ad0:	10c00215 	stw	r3,8(r2)
   47ad4:	003f6a06 	br	47880 <__alt_data_end+0xfffe0780>
   47ad8:	9c67883a 	add	r19,r19,r17
   47adc:	4445c83a 	sub	r2,r8,r17
   47ae0:	e4c00215 	stw	r19,8(fp)
   47ae4:	10800054 	ori	r2,r2,1
   47ae8:	98800115 	stw	r2,4(r19)
   47aec:	a8bfff17 	ldw	r2,-4(r21)
   47af0:	a009883a 	mov	r4,r20
   47af4:	1080004c 	andi	r2,r2,1
   47af8:	1462b03a 	or	r17,r2,r17
   47afc:	ac7fff15 	stw	r17,-4(r21)
   47b00:	004d5c00 	call	4d5c0 <__malloc_unlock>
   47b04:	a805883a 	mov	r2,r21
   47b08:	003f6b06 	br	478b8 <__alt_data_end+0xfffe07b8>
   47b0c:	a80b883a 	mov	r5,r21
   47b10:	9009883a 	mov	r4,r18
   47b14:	00463600 	call	46360 <memmove>
   47b18:	003f4e06 	br	47854 <__alt_data_end+0xfffe0754>
   47b1c:	89000404 	addi	r4,r17,16
   47b20:	b93fbc16 	blt	r23,r4,47a14 <__alt_data_end+0xfffe0914>
   47b24:	b0800317 	ldw	r2,12(r22)
   47b28:	b0c00217 	ldw	r3,8(r22)
   47b2c:	81bfff04 	addi	r6,r16,-4
   47b30:	01000904 	movi	r4,36
   47b34:	18800315 	stw	r2,12(r3)
   47b38:	10c00215 	stw	r3,8(r2)
   47b3c:	b4800204 	addi	r18,r22,8
   47b40:	21804336 	bltu	r4,r6,47c50 <_realloc_r+0x508>
   47b44:	008004c4 	movi	r2,19
   47b48:	11803f2e 	bgeu	r2,r6,47c48 <_realloc_r+0x500>
   47b4c:	a8800017 	ldw	r2,0(r21)
   47b50:	b0800215 	stw	r2,8(r22)
   47b54:	a8800117 	ldw	r2,4(r21)
   47b58:	b0800315 	stw	r2,12(r22)
   47b5c:	008006c4 	movi	r2,27
   47b60:	11803f36 	bltu	r2,r6,47c60 <_realloc_r+0x518>
   47b64:	b0800404 	addi	r2,r22,16
   47b68:	ad400204 	addi	r21,r21,8
   47b6c:	a8c00017 	ldw	r3,0(r21)
   47b70:	10c00015 	stw	r3,0(r2)
   47b74:	a8c00117 	ldw	r3,4(r21)
   47b78:	10c00115 	stw	r3,4(r2)
   47b7c:	a8c00217 	ldw	r3,8(r21)
   47b80:	10c00215 	stw	r3,8(r2)
   47b84:	b447883a 	add	r3,r22,r17
   47b88:	bc45c83a 	sub	r2,r23,r17
   47b8c:	e0c00215 	stw	r3,8(fp)
   47b90:	10800054 	ori	r2,r2,1
   47b94:	18800115 	stw	r2,4(r3)
   47b98:	b0800117 	ldw	r2,4(r22)
   47b9c:	a009883a 	mov	r4,r20
   47ba0:	1080004c 	andi	r2,r2,1
   47ba4:	1462b03a 	or	r17,r2,r17
   47ba8:	b4400115 	stw	r17,4(r22)
   47bac:	004d5c00 	call	4d5c0 <__malloc_unlock>
   47bb0:	9005883a 	mov	r2,r18
   47bb4:	003f4006 	br	478b8 <__alt_data_end+0xfffe07b8>
   47bb8:	a8c00217 	ldw	r3,8(r21)
   47bbc:	90c00215 	stw	r3,8(r18)
   47bc0:	a8c00317 	ldw	r3,12(r21)
   47bc4:	90c00315 	stw	r3,12(r18)
   47bc8:	30801126 	beq	r6,r2,47c10 <_realloc_r+0x4c8>
   47bcc:	90800404 	addi	r2,r18,16
   47bd0:	a8c00404 	addi	r3,r21,16
   47bd4:	003f1906 	br	4783c <__alt_data_end+0xfffe073c>
   47bd8:	90ffff17 	ldw	r3,-4(r18)
   47bdc:	00bfff04 	movi	r2,-4
   47be0:	a825883a 	mov	r18,r21
   47be4:	1884703a 	and	r2,r3,r2
   47be8:	80a1883a 	add	r16,r16,r2
   47bec:	003f2406 	br	47880 <__alt_data_end+0xfffe0780>
   47bf0:	a8800217 	ldw	r2,8(r21)
   47bf4:	b0800415 	stw	r2,16(r22)
   47bf8:	a8800317 	ldw	r2,12(r21)
   47bfc:	b0800515 	stw	r2,20(r22)
   47c00:	31000a26 	beq	r6,r4,47c2c <_realloc_r+0x4e4>
   47c04:	b0800604 	addi	r2,r22,24
   47c08:	ad400404 	addi	r21,r21,16
   47c0c:	003fa906 	br	47ab4 <__alt_data_end+0xfffe09b4>
   47c10:	a9000417 	ldw	r4,16(r21)
   47c14:	90800604 	addi	r2,r18,24
   47c18:	a8c00604 	addi	r3,r21,24
   47c1c:	91000415 	stw	r4,16(r18)
   47c20:	a9000517 	ldw	r4,20(r21)
   47c24:	91000515 	stw	r4,20(r18)
   47c28:	003f0406 	br	4783c <__alt_data_end+0xfffe073c>
   47c2c:	a8c00417 	ldw	r3,16(r21)
   47c30:	ad400604 	addi	r21,r21,24
   47c34:	b0800804 	addi	r2,r22,32
   47c38:	b0c00615 	stw	r3,24(r22)
   47c3c:	a8ffff17 	ldw	r3,-4(r21)
   47c40:	b0c00715 	stw	r3,28(r22)
   47c44:	003f9b06 	br	47ab4 <__alt_data_end+0xfffe09b4>
   47c48:	9005883a 	mov	r2,r18
   47c4c:	003fc706 	br	47b6c <__alt_data_end+0xfffe0a6c>
   47c50:	a80b883a 	mov	r5,r21
   47c54:	9009883a 	mov	r4,r18
   47c58:	00463600 	call	46360 <memmove>
   47c5c:	003fc906 	br	47b84 <__alt_data_end+0xfffe0a84>
   47c60:	a8800217 	ldw	r2,8(r21)
   47c64:	b0800415 	stw	r2,16(r22)
   47c68:	a8800317 	ldw	r2,12(r21)
   47c6c:	b0800515 	stw	r2,20(r22)
   47c70:	31000726 	beq	r6,r4,47c90 <_realloc_r+0x548>
   47c74:	b0800604 	addi	r2,r22,24
   47c78:	ad400404 	addi	r21,r21,16
   47c7c:	003fbb06 	br	47b6c <__alt_data_end+0xfffe0a6c>
   47c80:	a009883a 	mov	r4,r20
   47c84:	004d5c00 	call	4d5c0 <__malloc_unlock>
   47c88:	0005883a 	mov	r2,zero
   47c8c:	003f0a06 	br	478b8 <__alt_data_end+0xfffe07b8>
   47c90:	a8c00417 	ldw	r3,16(r21)
   47c94:	ad400604 	addi	r21,r21,24
   47c98:	b0800804 	addi	r2,r22,32
   47c9c:	b0c00615 	stw	r3,24(r22)
   47ca0:	a8ffff17 	ldw	r3,-4(r21)
   47ca4:	b0c00715 	stw	r3,28(r22)
   47ca8:	003fb006 	br	47b6c <__alt_data_end+0xfffe0a6c>

00047cac <__fpclassifyd>:
   47cac:	00a00034 	movhi	r2,32768
   47cb0:	10bfffc4 	addi	r2,r2,-1
   47cb4:	2884703a 	and	r2,r5,r2
   47cb8:	10000726 	beq	r2,zero,47cd8 <__fpclassifyd+0x2c>
   47cbc:	00fffc34 	movhi	r3,65520
   47cc0:	019ff834 	movhi	r6,32736
   47cc4:	28c7883a 	add	r3,r5,r3
   47cc8:	31bfffc4 	addi	r6,r6,-1
   47ccc:	30c00536 	bltu	r6,r3,47ce4 <__fpclassifyd+0x38>
   47cd0:	00800104 	movi	r2,4
   47cd4:	f800283a 	ret
   47cd8:	2000021e 	bne	r4,zero,47ce4 <__fpclassifyd+0x38>
   47cdc:	00800084 	movi	r2,2
   47ce0:	f800283a 	ret
   47ce4:	00dffc34 	movhi	r3,32752
   47ce8:	019ff834 	movhi	r6,32736
   47cec:	28cb883a 	add	r5,r5,r3
   47cf0:	31bfffc4 	addi	r6,r6,-1
   47cf4:	317ff62e 	bgeu	r6,r5,47cd0 <__alt_data_end+0xfffe0bd0>
   47cf8:	01400434 	movhi	r5,16
   47cfc:	297fffc4 	addi	r5,r5,-1
   47d00:	28800236 	bltu	r5,r2,47d0c <__fpclassifyd+0x60>
   47d04:	008000c4 	movi	r2,3
   47d08:	f800283a 	ret
   47d0c:	10c00226 	beq	r2,r3,47d18 <__fpclassifyd+0x6c>
   47d10:	0005883a 	mov	r2,zero
   47d14:	f800283a 	ret
   47d18:	2005003a 	cmpeq	r2,r4,zero
   47d1c:	f800283a 	ret

00047d20 <_sbrk_r>:
   47d20:	defffd04 	addi	sp,sp,-12
   47d24:	dc000015 	stw	r16,0(sp)
   47d28:	04000174 	movhi	r16,5
   47d2c:	dc400115 	stw	r17,4(sp)
   47d30:	840ca304 	addi	r16,r16,12940
   47d34:	2023883a 	mov	r17,r4
   47d38:	2809883a 	mov	r4,r5
   47d3c:	dfc00215 	stw	ra,8(sp)
   47d40:	80000015 	stw	zero,0(r16)
   47d44:	004d7800 	call	4d780 <sbrk>
   47d48:	00ffffc4 	movi	r3,-1
   47d4c:	10c00526 	beq	r2,r3,47d64 <_sbrk_r+0x44>
   47d50:	dfc00217 	ldw	ra,8(sp)
   47d54:	dc400117 	ldw	r17,4(sp)
   47d58:	dc000017 	ldw	r16,0(sp)
   47d5c:	dec00304 	addi	sp,sp,12
   47d60:	f800283a 	ret
   47d64:	80c00017 	ldw	r3,0(r16)
   47d68:	183ff926 	beq	r3,zero,47d50 <__alt_data_end+0xfffe0c50>
   47d6c:	88c00015 	stw	r3,0(r17)
   47d70:	003ff706 	br	47d50 <__alt_data_end+0xfffe0c50>

00047d74 <__sread>:
   47d74:	defffe04 	addi	sp,sp,-8
   47d78:	dc000015 	stw	r16,0(sp)
   47d7c:	2821883a 	mov	r16,r5
   47d80:	2940038f 	ldh	r5,14(r5)
   47d84:	dfc00115 	stw	ra,4(sp)
   47d88:	0049cc00 	call	49cc0 <_read_r>
   47d8c:	10000716 	blt	r2,zero,47dac <__sread+0x38>
   47d90:	80c01417 	ldw	r3,80(r16)
   47d94:	1887883a 	add	r3,r3,r2
   47d98:	80c01415 	stw	r3,80(r16)
   47d9c:	dfc00117 	ldw	ra,4(sp)
   47da0:	dc000017 	ldw	r16,0(sp)
   47da4:	dec00204 	addi	sp,sp,8
   47da8:	f800283a 	ret
   47dac:	80c0030b 	ldhu	r3,12(r16)
   47db0:	18fbffcc 	andi	r3,r3,61439
   47db4:	80c0030d 	sth	r3,12(r16)
   47db8:	dfc00117 	ldw	ra,4(sp)
   47dbc:	dc000017 	ldw	r16,0(sp)
   47dc0:	dec00204 	addi	sp,sp,8
   47dc4:	f800283a 	ret

00047dc8 <__seofread>:
   47dc8:	0005883a 	mov	r2,zero
   47dcc:	f800283a 	ret

00047dd0 <__swrite>:
   47dd0:	2880030b 	ldhu	r2,12(r5)
   47dd4:	defffb04 	addi	sp,sp,-20
   47dd8:	dcc00315 	stw	r19,12(sp)
   47ddc:	dc800215 	stw	r18,8(sp)
   47de0:	dc400115 	stw	r17,4(sp)
   47de4:	dc000015 	stw	r16,0(sp)
   47de8:	dfc00415 	stw	ra,16(sp)
   47dec:	10c0400c 	andi	r3,r2,256
   47df0:	2821883a 	mov	r16,r5
   47df4:	2023883a 	mov	r17,r4
   47df8:	3025883a 	mov	r18,r6
   47dfc:	3827883a 	mov	r19,r7
   47e00:	18000526 	beq	r3,zero,47e18 <__swrite+0x48>
   47e04:	2940038f 	ldh	r5,14(r5)
   47e08:	01c00084 	movi	r7,2
   47e0c:	000d883a 	mov	r6,zero
   47e10:	0049c600 	call	49c60 <_lseek_r>
   47e14:	8080030b 	ldhu	r2,12(r16)
   47e18:	8140038f 	ldh	r5,14(r16)
   47e1c:	10bbffcc 	andi	r2,r2,61439
   47e20:	980f883a 	mov	r7,r19
   47e24:	900d883a 	mov	r6,r18
   47e28:	8809883a 	mov	r4,r17
   47e2c:	8080030d 	sth	r2,12(r16)
   47e30:	dfc00417 	ldw	ra,16(sp)
   47e34:	dcc00317 	ldw	r19,12(sp)
   47e38:	dc800217 	ldw	r18,8(sp)
   47e3c:	dc400117 	ldw	r17,4(sp)
   47e40:	dc000017 	ldw	r16,0(sp)
   47e44:	dec00504 	addi	sp,sp,20
   47e48:	004972c1 	jmpi	4972c <_write_r>

00047e4c <__sseek>:
   47e4c:	defffe04 	addi	sp,sp,-8
   47e50:	dc000015 	stw	r16,0(sp)
   47e54:	2821883a 	mov	r16,r5
   47e58:	2940038f 	ldh	r5,14(r5)
   47e5c:	dfc00115 	stw	ra,4(sp)
   47e60:	0049c600 	call	49c60 <_lseek_r>
   47e64:	00ffffc4 	movi	r3,-1
   47e68:	10c00826 	beq	r2,r3,47e8c <__sseek+0x40>
   47e6c:	80c0030b 	ldhu	r3,12(r16)
   47e70:	80801415 	stw	r2,80(r16)
   47e74:	18c40014 	ori	r3,r3,4096
   47e78:	80c0030d 	sth	r3,12(r16)
   47e7c:	dfc00117 	ldw	ra,4(sp)
   47e80:	dc000017 	ldw	r16,0(sp)
   47e84:	dec00204 	addi	sp,sp,8
   47e88:	f800283a 	ret
   47e8c:	80c0030b 	ldhu	r3,12(r16)
   47e90:	18fbffcc 	andi	r3,r3,61439
   47e94:	80c0030d 	sth	r3,12(r16)
   47e98:	dfc00117 	ldw	ra,4(sp)
   47e9c:	dc000017 	ldw	r16,0(sp)
   47ea0:	dec00204 	addi	sp,sp,8
   47ea4:	f800283a 	ret

00047ea8 <__sclose>:
   47ea8:	2940038f 	ldh	r5,14(r5)
   47eac:	004978c1 	jmpi	4978c <_close_r>

00047eb0 <strcmp>:
   47eb0:	2144b03a 	or	r2,r4,r5
   47eb4:	108000cc 	andi	r2,r2,3
   47eb8:	1000171e 	bne	r2,zero,47f18 <strcmp+0x68>
   47ebc:	20800017 	ldw	r2,0(r4)
   47ec0:	28c00017 	ldw	r3,0(r5)
   47ec4:	10c0141e 	bne	r2,r3,47f18 <strcmp+0x68>
   47ec8:	027fbff4 	movhi	r9,65279
   47ecc:	4a7fbfc4 	addi	r9,r9,-257
   47ed0:	0086303a 	nor	r3,zero,r2
   47ed4:	02202074 	movhi	r8,32897
   47ed8:	1245883a 	add	r2,r2,r9
   47edc:	42202004 	addi	r8,r8,-32640
   47ee0:	10c4703a 	and	r2,r2,r3
   47ee4:	1204703a 	and	r2,r2,r8
   47ee8:	10000226 	beq	r2,zero,47ef4 <strcmp+0x44>
   47eec:	00002306 	br	47f7c <strcmp+0xcc>
   47ef0:	1000221e 	bne	r2,zero,47f7c <strcmp+0xcc>
   47ef4:	21000104 	addi	r4,r4,4
   47ef8:	20c00017 	ldw	r3,0(r4)
   47efc:	29400104 	addi	r5,r5,4
   47f00:	29800017 	ldw	r6,0(r5)
   47f04:	1a4f883a 	add	r7,r3,r9
   47f08:	00c4303a 	nor	r2,zero,r3
   47f0c:	3884703a 	and	r2,r7,r2
   47f10:	1204703a 	and	r2,r2,r8
   47f14:	19bff626 	beq	r3,r6,47ef0 <__alt_data_end+0xfffe0df0>
   47f18:	20800003 	ldbu	r2,0(r4)
   47f1c:	10c03fcc 	andi	r3,r2,255
   47f20:	18c0201c 	xori	r3,r3,128
   47f24:	18ffe004 	addi	r3,r3,-128
   47f28:	18000c26 	beq	r3,zero,47f5c <strcmp+0xac>
   47f2c:	29800007 	ldb	r6,0(r5)
   47f30:	19800326 	beq	r3,r6,47f40 <strcmp+0x90>
   47f34:	00001306 	br	47f84 <strcmp+0xd4>
   47f38:	29800007 	ldb	r6,0(r5)
   47f3c:	11800b1e 	bne	r2,r6,47f6c <strcmp+0xbc>
   47f40:	21000044 	addi	r4,r4,1
   47f44:	20c00003 	ldbu	r3,0(r4)
   47f48:	29400044 	addi	r5,r5,1
   47f4c:	18803fcc 	andi	r2,r3,255
   47f50:	1080201c 	xori	r2,r2,128
   47f54:	10bfe004 	addi	r2,r2,-128
   47f58:	103ff71e 	bne	r2,zero,47f38 <__alt_data_end+0xfffe0e38>
   47f5c:	0007883a 	mov	r3,zero
   47f60:	28800003 	ldbu	r2,0(r5)
   47f64:	1885c83a 	sub	r2,r3,r2
   47f68:	f800283a 	ret
   47f6c:	28800003 	ldbu	r2,0(r5)
   47f70:	18c03fcc 	andi	r3,r3,255
   47f74:	1885c83a 	sub	r2,r3,r2
   47f78:	f800283a 	ret
   47f7c:	0005883a 	mov	r2,zero
   47f80:	f800283a 	ret
   47f84:	10c03fcc 	andi	r3,r2,255
   47f88:	003ff506 	br	47f60 <__alt_data_end+0xfffe0e60>

00047f8c <__sprint_r.part.0>:
   47f8c:	28801917 	ldw	r2,100(r5)
   47f90:	defff604 	addi	sp,sp,-40
   47f94:	dd400515 	stw	r21,20(sp)
   47f98:	dfc00915 	stw	ra,36(sp)
   47f9c:	df000815 	stw	fp,32(sp)
   47fa0:	ddc00715 	stw	r23,28(sp)
   47fa4:	dd800615 	stw	r22,24(sp)
   47fa8:	dd000415 	stw	r20,16(sp)
   47fac:	dcc00315 	stw	r19,12(sp)
   47fb0:	dc800215 	stw	r18,8(sp)
   47fb4:	dc400115 	stw	r17,4(sp)
   47fb8:	dc000015 	stw	r16,0(sp)
   47fbc:	1088000c 	andi	r2,r2,8192
   47fc0:	302b883a 	mov	r21,r6
   47fc4:	10002e26 	beq	r2,zero,48080 <__sprint_r.part.0+0xf4>
   47fc8:	30800217 	ldw	r2,8(r6)
   47fcc:	35800017 	ldw	r22,0(r6)
   47fd0:	10002926 	beq	r2,zero,48078 <__sprint_r.part.0+0xec>
   47fd4:	2827883a 	mov	r19,r5
   47fd8:	2029883a 	mov	r20,r4
   47fdc:	b5c00104 	addi	r23,r22,4
   47fe0:	04bfffc4 	movi	r18,-1
   47fe4:	bc400017 	ldw	r17,0(r23)
   47fe8:	b4000017 	ldw	r16,0(r22)
   47fec:	0039883a 	mov	fp,zero
   47ff0:	8822d0ba 	srli	r17,r17,2
   47ff4:	8800031e 	bne	r17,zero,48004 <__sprint_r.part.0+0x78>
   47ff8:	00001806 	br	4805c <__sprint_r.part.0+0xd0>
   47ffc:	84000104 	addi	r16,r16,4
   48000:	8f001526 	beq	r17,fp,48058 <__sprint_r.part.0+0xcc>
   48004:	81400017 	ldw	r5,0(r16)
   48008:	980d883a 	mov	r6,r19
   4800c:	a009883a 	mov	r4,r20
   48010:	0049b0c0 	call	49b0c <_fputwc_r>
   48014:	e7000044 	addi	fp,fp,1
   48018:	14bff81e 	bne	r2,r18,47ffc <__alt_data_end+0xfffe0efc>
   4801c:	9005883a 	mov	r2,r18
   48020:	a8000215 	stw	zero,8(r21)
   48024:	a8000115 	stw	zero,4(r21)
   48028:	dfc00917 	ldw	ra,36(sp)
   4802c:	df000817 	ldw	fp,32(sp)
   48030:	ddc00717 	ldw	r23,28(sp)
   48034:	dd800617 	ldw	r22,24(sp)
   48038:	dd400517 	ldw	r21,20(sp)
   4803c:	dd000417 	ldw	r20,16(sp)
   48040:	dcc00317 	ldw	r19,12(sp)
   48044:	dc800217 	ldw	r18,8(sp)
   48048:	dc400117 	ldw	r17,4(sp)
   4804c:	dc000017 	ldw	r16,0(sp)
   48050:	dec00a04 	addi	sp,sp,40
   48054:	f800283a 	ret
   48058:	a8800217 	ldw	r2,8(r21)
   4805c:	8c63883a 	add	r17,r17,r17
   48060:	8c63883a 	add	r17,r17,r17
   48064:	1445c83a 	sub	r2,r2,r17
   48068:	a8800215 	stw	r2,8(r21)
   4806c:	b5800204 	addi	r22,r22,8
   48070:	bdc00204 	addi	r23,r23,8
   48074:	103fdb1e 	bne	r2,zero,47fe4 <__alt_data_end+0xfffe0ee4>
   48078:	0005883a 	mov	r2,zero
   4807c:	003fe806 	br	48020 <__alt_data_end+0xfffe0f20>
   48080:	004504c0 	call	4504c <__sfvwrite_r>
   48084:	003fe606 	br	48020 <__alt_data_end+0xfffe0f20>

00048088 <__sprint_r>:
   48088:	30c00217 	ldw	r3,8(r6)
   4808c:	18000126 	beq	r3,zero,48094 <__sprint_r+0xc>
   48090:	0047f8c1 	jmpi	47f8c <__sprint_r.part.0>
   48094:	30000115 	stw	zero,4(r6)
   48098:	0005883a 	mov	r2,zero
   4809c:	f800283a 	ret

000480a0 <___vfiprintf_internal_r>:
   480a0:	deffc904 	addi	sp,sp,-220
   480a4:	df003515 	stw	fp,212(sp)
   480a8:	dd003115 	stw	r20,196(sp)
   480ac:	dfc03615 	stw	ra,216(sp)
   480b0:	ddc03415 	stw	r23,208(sp)
   480b4:	dd803315 	stw	r22,204(sp)
   480b8:	dd403215 	stw	r21,200(sp)
   480bc:	dcc03015 	stw	r19,192(sp)
   480c0:	dc802f15 	stw	r18,188(sp)
   480c4:	dc402e15 	stw	r17,184(sp)
   480c8:	dc002d15 	stw	r16,180(sp)
   480cc:	d9002015 	stw	r4,128(sp)
   480d0:	d9c02215 	stw	r7,136(sp)
   480d4:	2829883a 	mov	r20,r5
   480d8:	3039883a 	mov	fp,r6
   480dc:	20000226 	beq	r4,zero,480e8 <___vfiprintf_internal_r+0x48>
   480e0:	20800e17 	ldw	r2,56(r4)
   480e4:	1000cf26 	beq	r2,zero,48424 <___vfiprintf_internal_r+0x384>
   480e8:	a080030b 	ldhu	r2,12(r20)
   480ec:	10c8000c 	andi	r3,r2,8192
   480f0:	1800061e 	bne	r3,zero,4810c <___vfiprintf_internal_r+0x6c>
   480f4:	a1001917 	ldw	r4,100(r20)
   480f8:	00f7ffc4 	movi	r3,-8193
   480fc:	10880014 	ori	r2,r2,8192
   48100:	20c6703a 	and	r3,r4,r3
   48104:	a080030d 	sth	r2,12(r20)
   48108:	a0c01915 	stw	r3,100(r20)
   4810c:	10c0020c 	andi	r3,r2,8
   48110:	1800a926 	beq	r3,zero,483b8 <___vfiprintf_internal_r+0x318>
   48114:	a0c00417 	ldw	r3,16(r20)
   48118:	1800a726 	beq	r3,zero,483b8 <___vfiprintf_internal_r+0x318>
   4811c:	1080068c 	andi	r2,r2,26
   48120:	00c00284 	movi	r3,10
   48124:	10c0ac26 	beq	r2,r3,483d8 <___vfiprintf_internal_r+0x338>
   48128:	da801a04 	addi	r10,sp,104
   4812c:	da801e15 	stw	r10,120(sp)
   48130:	d8801e17 	ldw	r2,120(sp)
   48134:	da8019c4 	addi	r10,sp,103
   48138:	05800174 	movhi	r22,5
   4813c:	05c00174 	movhi	r23,5
   48140:	da801f15 	stw	r10,124(sp)
   48144:	1295c83a 	sub	r10,r2,r10
   48148:	b5bed804 	addi	r22,r22,-1184
   4814c:	bdfed404 	addi	r23,r23,-1200
   48150:	dec01a15 	stw	sp,104(sp)
   48154:	d8001c15 	stw	zero,112(sp)
   48158:	d8001b15 	stw	zero,108(sp)
   4815c:	d8002615 	stw	zero,152(sp)
   48160:	d8002315 	stw	zero,140(sp)
   48164:	da802715 	stw	r10,156(sp)
   48168:	d811883a 	mov	r8,sp
   4816c:	dd002115 	stw	r20,132(sp)
   48170:	e021883a 	mov	r16,fp
   48174:	80800007 	ldb	r2,0(r16)
   48178:	1003ea26 	beq	r2,zero,49124 <___vfiprintf_internal_r+0x1084>
   4817c:	00c00944 	movi	r3,37
   48180:	8025883a 	mov	r18,r16
   48184:	10c0021e 	bne	r2,r3,48190 <___vfiprintf_internal_r+0xf0>
   48188:	00001606 	br	481e4 <___vfiprintf_internal_r+0x144>
   4818c:	10c00326 	beq	r2,r3,4819c <___vfiprintf_internal_r+0xfc>
   48190:	94800044 	addi	r18,r18,1
   48194:	90800007 	ldb	r2,0(r18)
   48198:	103ffc1e 	bne	r2,zero,4818c <__alt_data_end+0xfffe108c>
   4819c:	9423c83a 	sub	r17,r18,r16
   481a0:	88001026 	beq	r17,zero,481e4 <___vfiprintf_internal_r+0x144>
   481a4:	d8c01c17 	ldw	r3,112(sp)
   481a8:	d8801b17 	ldw	r2,108(sp)
   481ac:	44000015 	stw	r16,0(r8)
   481b0:	88c7883a 	add	r3,r17,r3
   481b4:	10800044 	addi	r2,r2,1
   481b8:	44400115 	stw	r17,4(r8)
   481bc:	d8c01c15 	stw	r3,112(sp)
   481c0:	d8801b15 	stw	r2,108(sp)
   481c4:	010001c4 	movi	r4,7
   481c8:	2080760e 	bge	r4,r2,483a4 <___vfiprintf_internal_r+0x304>
   481cc:	1803821e 	bne	r3,zero,48fd8 <___vfiprintf_internal_r+0xf38>
   481d0:	da802317 	ldw	r10,140(sp)
   481d4:	d8001b15 	stw	zero,108(sp)
   481d8:	d811883a 	mov	r8,sp
   481dc:	5455883a 	add	r10,r10,r17
   481e0:	da802315 	stw	r10,140(sp)
   481e4:	90800007 	ldb	r2,0(r18)
   481e8:	10044626 	beq	r2,zero,49304 <___vfiprintf_internal_r+0x1264>
   481ec:	90c00047 	ldb	r3,1(r18)
   481f0:	94000044 	addi	r16,r18,1
   481f4:	d8001d85 	stb	zero,118(sp)
   481f8:	0009883a 	mov	r4,zero
   481fc:	000f883a 	mov	r7,zero
   48200:	027fffc4 	movi	r9,-1
   48204:	0023883a 	mov	r17,zero
   48208:	0029883a 	mov	r20,zero
   4820c:	01401604 	movi	r5,88
   48210:	01800244 	movi	r6,9
   48214:	03400a84 	movi	r13,42
   48218:	03001b04 	movi	r12,108
   4821c:	84000044 	addi	r16,r16,1
   48220:	18bff804 	addi	r2,r3,-32
   48224:	28827336 	bltu	r5,r2,48bf4 <___vfiprintf_internal_r+0xb54>
   48228:	100490ba 	slli	r2,r2,2
   4822c:	02800174 	movhi	r10,5
   48230:	52a09004 	addi	r10,r10,-32192
   48234:	1285883a 	add	r2,r2,r10
   48238:	10800017 	ldw	r2,0(r2)
   4823c:	1000683a 	jmp	r2
   48240:	00048928 	cmpgeui	zero,zero,4644
   48244:	00048bf4 	movhi	zero,4655
   48248:	00048bf4 	movhi	zero,4655
   4824c:	00048948 	cmpgei	zero,zero,4645
   48250:	00048bf4 	movhi	zero,4655
   48254:	00048bf4 	movhi	zero,4655
   48258:	00048bf4 	movhi	zero,4655
   4825c:	00048bf4 	movhi	zero,4655
   48260:	00048bf4 	movhi	zero,4655
   48264:	00048bf4 	movhi	zero,4655
   48268:	00048b30 	cmpltui	zero,zero,4652
   4826c:	00048b4c 	andi	zero,zero,4653
   48270:	00048bf4 	movhi	zero,4655
   48274:	00048434 	movhi	zero,4624
   48278:	00048b5c 	xori	zero,zero,4653
   4827c:	00048bf4 	movhi	zero,4655
   48280:	00048954 	movui	zero,4645
   48284:	00048960 	cmpeqi	zero,zero,4645
   48288:	00048960 	cmpeqi	zero,zero,4645
   4828c:	00048960 	cmpeqi	zero,zero,4645
   48290:	00048960 	cmpeqi	zero,zero,4645
   48294:	00048960 	cmpeqi	zero,zero,4645
   48298:	00048960 	cmpeqi	zero,zero,4645
   4829c:	00048960 	cmpeqi	zero,zero,4645
   482a0:	00048960 	cmpeqi	zero,zero,4645
   482a4:	00048960 	cmpeqi	zero,zero,4645
   482a8:	00048bf4 	movhi	zero,4655
   482ac:	00048bf4 	movhi	zero,4655
   482b0:	00048bf4 	movhi	zero,4655
   482b4:	00048bf4 	movhi	zero,4655
   482b8:	00048bf4 	movhi	zero,4655
   482bc:	00048bf4 	movhi	zero,4655
   482c0:	00048bf4 	movhi	zero,4655
   482c4:	00048bf4 	movhi	zero,4655
   482c8:	00048bf4 	movhi	zero,4655
   482cc:	00048bf4 	movhi	zero,4655
   482d0:	0004898c 	andi	zero,zero,4646
   482d4:	00048bf4 	movhi	zero,4655
   482d8:	00048bf4 	movhi	zero,4655
   482dc:	00048bf4 	movhi	zero,4655
   482e0:	00048bf4 	movhi	zero,4655
   482e4:	00048bf4 	movhi	zero,4655
   482e8:	00048bf4 	movhi	zero,4655
   482ec:	00048bf4 	movhi	zero,4655
   482f0:	00048bf4 	movhi	zero,4655
   482f4:	00048bf4 	movhi	zero,4655
   482f8:	00048bf4 	movhi	zero,4655
   482fc:	000489c4 	movi	zero,4647
   48300:	00048bf4 	movhi	zero,4655
   48304:	00048bf4 	movhi	zero,4655
   48308:	00048bf4 	movhi	zero,4655
   4830c:	00048bf4 	movhi	zero,4655
   48310:	00048bf4 	movhi	zero,4655
   48314:	00048a1c 	xori	zero,zero,4648
   48318:	00048bf4 	movhi	zero,4655
   4831c:	00048bf4 	movhi	zero,4655
   48320:	00048a8c 	andi	zero,zero,4650
   48324:	00048bf4 	movhi	zero,4655
   48328:	00048bf4 	movhi	zero,4655
   4832c:	00048bf4 	movhi	zero,4655
   48330:	00048bf4 	movhi	zero,4655
   48334:	00048bf4 	movhi	zero,4655
   48338:	00048bf4 	movhi	zero,4655
   4833c:	00048bf4 	movhi	zero,4655
   48340:	00048bf4 	movhi	zero,4655
   48344:	00048bf4 	movhi	zero,4655
   48348:	00048bf4 	movhi	zero,4655
   4834c:	00048838 	rdprs	zero,zero,4640
   48350:	00048864 	muli	zero,zero,4641
   48354:	00048bf4 	movhi	zero,4655
   48358:	00048bf4 	movhi	zero,4655
   4835c:	00048bf4 	movhi	zero,4655
   48360:	00048b9c 	xori	zero,zero,4654
   48364:	00048864 	muli	zero,zero,4641
   48368:	00048bf4 	movhi	zero,4655
   4836c:	00048bf4 	movhi	zero,4655
   48370:	000486f8 	rdprs	zero,zero,4635
   48374:	00048bf4 	movhi	zero,4655
   48378:	00048708 	cmpgei	zero,zero,4636
   4837c:	00048744 	movi	zero,4637
   48380:	00048440 	call	4844 <__alt_mem_onchip_memory2-0x3b7bc>
   48384:	000486ec 	andhi	zero,zero,4635
   48388:	00048bf4 	movhi	zero,4655
   4838c:	00048ac8 	cmpgei	zero,zero,4651
   48390:	00048bf4 	movhi	zero,4655
   48394:	00048b20 	cmpeqi	zero,zero,4652
   48398:	00048bf4 	movhi	zero,4655
   4839c:	00048bf4 	movhi	zero,4655
   483a0:	000487e4 	muli	zero,zero,4639
   483a4:	42000204 	addi	r8,r8,8
   483a8:	da802317 	ldw	r10,140(sp)
   483ac:	5455883a 	add	r10,r10,r17
   483b0:	da802315 	stw	r10,140(sp)
   483b4:	003f8b06 	br	481e4 <__alt_data_end+0xfffe10e4>
   483b8:	d9002017 	ldw	r4,128(sp)
   483bc:	a00b883a 	mov	r5,r20
   483c0:	0042bf40 	call	42bf4 <__swsetup_r>
   483c4:	1003b11e 	bne	r2,zero,4928c <___vfiprintf_internal_r+0x11ec>
   483c8:	a080030b 	ldhu	r2,12(r20)
   483cc:	00c00284 	movi	r3,10
   483d0:	1080068c 	andi	r2,r2,26
   483d4:	10ff541e 	bne	r2,r3,48128 <__alt_data_end+0xfffe1028>
   483d8:	a080038f 	ldh	r2,14(r20)
   483dc:	103f5216 	blt	r2,zero,48128 <__alt_data_end+0xfffe1028>
   483e0:	d9c02217 	ldw	r7,136(sp)
   483e4:	d9002017 	ldw	r4,128(sp)
   483e8:	e00d883a 	mov	r6,fp
   483ec:	a00b883a 	mov	r5,r20
   483f0:	00495180 	call	49518 <__sbprintf>
   483f4:	dfc03617 	ldw	ra,216(sp)
   483f8:	df003517 	ldw	fp,212(sp)
   483fc:	ddc03417 	ldw	r23,208(sp)
   48400:	dd803317 	ldw	r22,204(sp)
   48404:	dd403217 	ldw	r21,200(sp)
   48408:	dd003117 	ldw	r20,196(sp)
   4840c:	dcc03017 	ldw	r19,192(sp)
   48410:	dc802f17 	ldw	r18,188(sp)
   48414:	dc402e17 	ldw	r17,184(sp)
   48418:	dc002d17 	ldw	r16,180(sp)
   4841c:	dec03704 	addi	sp,sp,220
   48420:	f800283a 	ret
   48424:	0044bc80 	call	44bc8 <__sinit>
   48428:	003f2f06 	br	480e8 <__alt_data_end+0xfffe0fe8>
   4842c:	0463c83a 	sub	r17,zero,r17
   48430:	d8802215 	stw	r2,136(sp)
   48434:	a5000114 	ori	r20,r20,4
   48438:	80c00007 	ldb	r3,0(r16)
   4843c:	003f7706 	br	4821c <__alt_data_end+0xfffe111c>
   48440:	00800c04 	movi	r2,48
   48444:	da802217 	ldw	r10,136(sp)
   48448:	d8801d05 	stb	r2,116(sp)
   4844c:	00801e04 	movi	r2,120
   48450:	d8801d45 	stb	r2,117(sp)
   48454:	d8001d85 	stb	zero,118(sp)
   48458:	50c00104 	addi	r3,r10,4
   4845c:	54800017 	ldw	r18,0(r10)
   48460:	0027883a 	mov	r19,zero
   48464:	a0800094 	ori	r2,r20,2
   48468:	48030b16 	blt	r9,zero,49098 <___vfiprintf_internal_r+0xff8>
   4846c:	00bfdfc4 	movi	r2,-129
   48470:	a096703a 	and	r11,r20,r2
   48474:	d8c02215 	stw	r3,136(sp)
   48478:	5d000094 	ori	r20,r11,2
   4847c:	90032b1e 	bne	r18,zero,4912c <___vfiprintf_internal_r+0x108c>
   48480:	00800174 	movhi	r2,5
   48484:	10be7304 	addi	r2,r2,-1588
   48488:	d8802615 	stw	r2,152(sp)
   4848c:	0039883a 	mov	fp,zero
   48490:	48017b1e 	bne	r9,zero,48a80 <___vfiprintf_internal_r+0x9e0>
   48494:	0013883a 	mov	r9,zero
   48498:	0027883a 	mov	r19,zero
   4849c:	dd401a04 	addi	r21,sp,104
   484a0:	4825883a 	mov	r18,r9
   484a4:	4cc0010e 	bge	r9,r19,484ac <___vfiprintf_internal_r+0x40c>
   484a8:	9825883a 	mov	r18,r19
   484ac:	e7003fcc 	andi	fp,fp,255
   484b0:	e700201c 	xori	fp,fp,128
   484b4:	e73fe004 	addi	fp,fp,-128
   484b8:	e0000126 	beq	fp,zero,484c0 <___vfiprintf_internal_r+0x420>
   484bc:	94800044 	addi	r18,r18,1
   484c0:	a380008c 	andi	r14,r20,2
   484c4:	70000126 	beq	r14,zero,484cc <___vfiprintf_internal_r+0x42c>
   484c8:	94800084 	addi	r18,r18,2
   484cc:	a700210c 	andi	fp,r20,132
   484d0:	e001df1e 	bne	fp,zero,48c50 <___vfiprintf_internal_r+0xbb0>
   484d4:	8c87c83a 	sub	r3,r17,r18
   484d8:	00c1dd0e 	bge	zero,r3,48c50 <___vfiprintf_internal_r+0xbb0>
   484dc:	01c00404 	movi	r7,16
   484e0:	d8801c17 	ldw	r2,112(sp)
   484e4:	38c3ad0e 	bge	r7,r3,4939c <___vfiprintf_internal_r+0x12fc>
   484e8:	02800174 	movhi	r10,5
   484ec:	52bed804 	addi	r10,r10,-1184
   484f0:	dc002915 	stw	r16,164(sp)
   484f4:	d9801b17 	ldw	r6,108(sp)
   484f8:	da802415 	stw	r10,144(sp)
   484fc:	03c001c4 	movi	r15,7
   48500:	da402515 	stw	r9,148(sp)
   48504:	db802815 	stw	r14,160(sp)
   48508:	1821883a 	mov	r16,r3
   4850c:	00000506 	br	48524 <___vfiprintf_internal_r+0x484>
   48510:	31400084 	addi	r5,r6,2
   48514:	42000204 	addi	r8,r8,8
   48518:	200d883a 	mov	r6,r4
   4851c:	843ffc04 	addi	r16,r16,-16
   48520:	3c000d0e 	bge	r7,r16,48558 <___vfiprintf_internal_r+0x4b8>
   48524:	10800404 	addi	r2,r2,16
   48528:	31000044 	addi	r4,r6,1
   4852c:	45800015 	stw	r22,0(r8)
   48530:	41c00115 	stw	r7,4(r8)
   48534:	d8801c15 	stw	r2,112(sp)
   48538:	d9001b15 	stw	r4,108(sp)
   4853c:	793ff40e 	bge	r15,r4,48510 <__alt_data_end+0xfffe1410>
   48540:	1001b51e 	bne	r2,zero,48c18 <___vfiprintf_internal_r+0xb78>
   48544:	843ffc04 	addi	r16,r16,-16
   48548:	000d883a 	mov	r6,zero
   4854c:	01400044 	movi	r5,1
   48550:	d811883a 	mov	r8,sp
   48554:	3c3ff316 	blt	r7,r16,48524 <__alt_data_end+0xfffe1424>
   48558:	8007883a 	mov	r3,r16
   4855c:	da402517 	ldw	r9,148(sp)
   48560:	db802817 	ldw	r14,160(sp)
   48564:	dc002917 	ldw	r16,164(sp)
   48568:	da802417 	ldw	r10,144(sp)
   4856c:	1885883a 	add	r2,r3,r2
   48570:	40c00115 	stw	r3,4(r8)
   48574:	42800015 	stw	r10,0(r8)
   48578:	d8801c15 	stw	r2,112(sp)
   4857c:	d9401b15 	stw	r5,108(sp)
   48580:	00c001c4 	movi	r3,7
   48584:	19426016 	blt	r3,r5,48f08 <___vfiprintf_internal_r+0xe68>
   48588:	d8c01d87 	ldb	r3,118(sp)
   4858c:	42000204 	addi	r8,r8,8
   48590:	29000044 	addi	r4,r5,1
   48594:	1801b31e 	bne	r3,zero,48c64 <___vfiprintf_internal_r+0xbc4>
   48598:	7001c026 	beq	r14,zero,48c9c <___vfiprintf_internal_r+0xbfc>
   4859c:	d8c01d04 	addi	r3,sp,116
   485a0:	10800084 	addi	r2,r2,2
   485a4:	40c00015 	stw	r3,0(r8)
   485a8:	00c00084 	movi	r3,2
   485ac:	40c00115 	stw	r3,4(r8)
   485b0:	d8801c15 	stw	r2,112(sp)
   485b4:	d9001b15 	stw	r4,108(sp)
   485b8:	00c001c4 	movi	r3,7
   485bc:	1902650e 	bge	r3,r4,48f54 <___vfiprintf_internal_r+0xeb4>
   485c0:	10029a1e 	bne	r2,zero,4902c <___vfiprintf_internal_r+0xf8c>
   485c4:	00c02004 	movi	r3,128
   485c8:	01000044 	movi	r4,1
   485cc:	000b883a 	mov	r5,zero
   485d0:	d811883a 	mov	r8,sp
   485d4:	e0c1b31e 	bne	fp,r3,48ca4 <___vfiprintf_internal_r+0xc04>
   485d8:	8cb9c83a 	sub	fp,r17,r18
   485dc:	0701b10e 	bge	zero,fp,48ca4 <___vfiprintf_internal_r+0xc04>
   485e0:	01c00404 	movi	r7,16
   485e4:	3f03890e 	bge	r7,fp,4940c <___vfiprintf_internal_r+0x136c>
   485e8:	00c00174 	movhi	r3,5
   485ec:	18fed404 	addi	r3,r3,-1200
   485f0:	d8c02415 	stw	r3,144(sp)
   485f4:	8007883a 	mov	r3,r16
   485f8:	034001c4 	movi	r13,7
   485fc:	e021883a 	mov	r16,fp
   48600:	da402515 	stw	r9,148(sp)
   48604:	1839883a 	mov	fp,r3
   48608:	00000506 	br	48620 <___vfiprintf_internal_r+0x580>
   4860c:	29800084 	addi	r6,r5,2
   48610:	42000204 	addi	r8,r8,8
   48614:	180b883a 	mov	r5,r3
   48618:	843ffc04 	addi	r16,r16,-16
   4861c:	3c000d0e 	bge	r7,r16,48654 <___vfiprintf_internal_r+0x5b4>
   48620:	10800404 	addi	r2,r2,16
   48624:	28c00044 	addi	r3,r5,1
   48628:	45c00015 	stw	r23,0(r8)
   4862c:	41c00115 	stw	r7,4(r8)
   48630:	d8801c15 	stw	r2,112(sp)
   48634:	d8c01b15 	stw	r3,108(sp)
   48638:	68fff40e 	bge	r13,r3,4860c <__alt_data_end+0xfffe150c>
   4863c:	1002241e 	bne	r2,zero,48ed0 <___vfiprintf_internal_r+0xe30>
   48640:	843ffc04 	addi	r16,r16,-16
   48644:	01800044 	movi	r6,1
   48648:	000b883a 	mov	r5,zero
   4864c:	d811883a 	mov	r8,sp
   48650:	3c3ff316 	blt	r7,r16,48620 <__alt_data_end+0xfffe1520>
   48654:	da402517 	ldw	r9,148(sp)
   48658:	e007883a 	mov	r3,fp
   4865c:	8039883a 	mov	fp,r16
   48660:	1821883a 	mov	r16,r3
   48664:	d8c02417 	ldw	r3,144(sp)
   48668:	1705883a 	add	r2,r2,fp
   4866c:	47000115 	stw	fp,4(r8)
   48670:	40c00015 	stw	r3,0(r8)
   48674:	d8801c15 	stw	r2,112(sp)
   48678:	d9801b15 	stw	r6,108(sp)
   4867c:	00c001c4 	movi	r3,7
   48680:	19827616 	blt	r3,r6,4905c <___vfiprintf_internal_r+0xfbc>
   48684:	4cf9c83a 	sub	fp,r9,r19
   48688:	42000204 	addi	r8,r8,8
   4868c:	31000044 	addi	r4,r6,1
   48690:	300b883a 	mov	r5,r6
   48694:	07018516 	blt	zero,fp,48cac <___vfiprintf_internal_r+0xc0c>
   48698:	9885883a 	add	r2,r19,r2
   4869c:	45400015 	stw	r21,0(r8)
   486a0:	44c00115 	stw	r19,4(r8)
   486a4:	d8801c15 	stw	r2,112(sp)
   486a8:	d9001b15 	stw	r4,108(sp)
   486ac:	00c001c4 	movi	r3,7
   486b0:	1901dd0e 	bge	r3,r4,48e28 <___vfiprintf_internal_r+0xd88>
   486b4:	1002401e 	bne	r2,zero,48fb8 <___vfiprintf_internal_r+0xf18>
   486b8:	d8001b15 	stw	zero,108(sp)
   486bc:	a2c0010c 	andi	r11,r20,4
   486c0:	58000226 	beq	r11,zero,486cc <___vfiprintf_internal_r+0x62c>
   486c4:	8ca7c83a 	sub	r19,r17,r18
   486c8:	04c2f216 	blt	zero,r19,49294 <___vfiprintf_internal_r+0x11f4>
   486cc:	8c80010e 	bge	r17,r18,486d4 <___vfiprintf_internal_r+0x634>
   486d0:	9023883a 	mov	r17,r18
   486d4:	da802317 	ldw	r10,140(sp)
   486d8:	5455883a 	add	r10,r10,r17
   486dc:	da802315 	stw	r10,140(sp)
   486e0:	d8001b15 	stw	zero,108(sp)
   486e4:	d811883a 	mov	r8,sp
   486e8:	003ea206 	br	48174 <__alt_data_end+0xfffe1074>
   486ec:	a5000814 	ori	r20,r20,32
   486f0:	80c00007 	ldb	r3,0(r16)
   486f4:	003ec906 	br	4821c <__alt_data_end+0xfffe111c>
   486f8:	80c00007 	ldb	r3,0(r16)
   486fc:	1b030926 	beq	r3,r12,49324 <___vfiprintf_internal_r+0x1284>
   48700:	a5000414 	ori	r20,r20,16
   48704:	003ec506 	br	4821c <__alt_data_end+0xfffe111c>
   48708:	21003fcc 	andi	r4,r4,255
   4870c:	20035e1e 	bne	r4,zero,49488 <___vfiprintf_internal_r+0x13e8>
   48710:	a080080c 	andi	r2,r20,32
   48714:	1002a526 	beq	r2,zero,491ac <___vfiprintf_internal_r+0x110c>
   48718:	da802217 	ldw	r10,136(sp)
   4871c:	50800017 	ldw	r2,0(r10)
   48720:	da802317 	ldw	r10,140(sp)
   48724:	5007d7fa 	srai	r3,r10,31
   48728:	da802217 	ldw	r10,136(sp)
   4872c:	10c00115 	stw	r3,4(r2)
   48730:	52800104 	addi	r10,r10,4
   48734:	da802215 	stw	r10,136(sp)
   48738:	da802317 	ldw	r10,140(sp)
   4873c:	12800015 	stw	r10,0(r2)
   48740:	003e8c06 	br	48174 <__alt_data_end+0xfffe1074>
   48744:	21003fcc 	andi	r4,r4,255
   48748:	2003511e 	bne	r4,zero,49490 <___vfiprintf_internal_r+0x13f0>
   4874c:	a080080c 	andi	r2,r20,32
   48750:	1000a126 	beq	r2,zero,489d8 <___vfiprintf_internal_r+0x938>
   48754:	da802217 	ldw	r10,136(sp)
   48758:	d8001d85 	stb	zero,118(sp)
   4875c:	50800204 	addi	r2,r10,8
   48760:	54800017 	ldw	r18,0(r10)
   48764:	54c00117 	ldw	r19,4(r10)
   48768:	4802b416 	blt	r9,zero,4923c <___vfiprintf_internal_r+0x119c>
   4876c:	013fdfc4 	movi	r4,-129
   48770:	94c6b03a 	or	r3,r18,r19
   48774:	d8802215 	stw	r2,136(sp)
   48778:	a128703a 	and	r20,r20,r4
   4877c:	1800a226 	beq	r3,zero,48a08 <___vfiprintf_internal_r+0x968>
   48780:	0039883a 	mov	fp,zero
   48784:	dd401a04 	addi	r21,sp,104
   48788:	9006d0fa 	srli	r3,r18,3
   4878c:	9808977a 	slli	r4,r19,29
   48790:	9826d0fa 	srli	r19,r19,3
   48794:	948001cc 	andi	r18,r18,7
   48798:	90800c04 	addi	r2,r18,48
   4879c:	ad7fffc4 	addi	r21,r21,-1
   487a0:	20e4b03a 	or	r18,r4,r3
   487a4:	a8800005 	stb	r2,0(r21)
   487a8:	94c6b03a 	or	r3,r18,r19
   487ac:	183ff61e 	bne	r3,zero,48788 <__alt_data_end+0xfffe1688>
   487b0:	a0c0004c 	andi	r3,r20,1
   487b4:	18005926 	beq	r3,zero,4891c <___vfiprintf_internal_r+0x87c>
   487b8:	10803fcc 	andi	r2,r2,255
   487bc:	1080201c 	xori	r2,r2,128
   487c0:	10bfe004 	addi	r2,r2,-128
   487c4:	00c00c04 	movi	r3,48
   487c8:	10c05426 	beq	r2,r3,4891c <___vfiprintf_internal_r+0x87c>
   487cc:	da801e17 	ldw	r10,120(sp)
   487d0:	a8bfffc4 	addi	r2,r21,-1
   487d4:	a8ffffc5 	stb	r3,-1(r21)
   487d8:	50a7c83a 	sub	r19,r10,r2
   487dc:	102b883a 	mov	r21,r2
   487e0:	003f2f06 	br	484a0 <__alt_data_end+0xfffe13a0>
   487e4:	21003fcc 	andi	r4,r4,255
   487e8:	2003421e 	bne	r4,zero,494f4 <___vfiprintf_internal_r+0x1454>
   487ec:	00800174 	movhi	r2,5
   487f0:	10be7304 	addi	r2,r2,-1588
   487f4:	d8802615 	stw	r2,152(sp)
   487f8:	a080080c 	andi	r2,r20,32
   487fc:	1000aa26 	beq	r2,zero,48aa8 <___vfiprintf_internal_r+0xa08>
   48800:	da802217 	ldw	r10,136(sp)
   48804:	54800017 	ldw	r18,0(r10)
   48808:	54c00117 	ldw	r19,4(r10)
   4880c:	52800204 	addi	r10,r10,8
   48810:	da802215 	stw	r10,136(sp)
   48814:	a080004c 	andi	r2,r20,1
   48818:	1001d226 	beq	r2,zero,48f64 <___vfiprintf_internal_r+0xec4>
   4881c:	94c4b03a 	or	r2,r18,r19
   48820:	1002351e 	bne	r2,zero,490f8 <___vfiprintf_internal_r+0x1058>
   48824:	d8001d85 	stb	zero,118(sp)
   48828:	48022216 	blt	r9,zero,490b4 <___vfiprintf_internal_r+0x1014>
   4882c:	00bfdfc4 	movi	r2,-129
   48830:	a0a8703a 	and	r20,r20,r2
   48834:	003f1506 	br	4848c <__alt_data_end+0xfffe138c>
   48838:	da802217 	ldw	r10,136(sp)
   4883c:	04800044 	movi	r18,1
   48840:	d8001d85 	stb	zero,118(sp)
   48844:	50800017 	ldw	r2,0(r10)
   48848:	52800104 	addi	r10,r10,4
   4884c:	da802215 	stw	r10,136(sp)
   48850:	d8801005 	stb	r2,64(sp)
   48854:	9027883a 	mov	r19,r18
   48858:	dd401004 	addi	r21,sp,64
   4885c:	0013883a 	mov	r9,zero
   48860:	003f1706 	br	484c0 <__alt_data_end+0xfffe13c0>
   48864:	21003fcc 	andi	r4,r4,255
   48868:	2003201e 	bne	r4,zero,494ec <___vfiprintf_internal_r+0x144c>
   4886c:	a080080c 	andi	r2,r20,32
   48870:	10004b26 	beq	r2,zero,489a0 <___vfiprintf_internal_r+0x900>
   48874:	da802217 	ldw	r10,136(sp)
   48878:	50800117 	ldw	r2,4(r10)
   4887c:	54800017 	ldw	r18,0(r10)
   48880:	52800204 	addi	r10,r10,8
   48884:	da802215 	stw	r10,136(sp)
   48888:	1027883a 	mov	r19,r2
   4888c:	10022c16 	blt	r2,zero,49140 <___vfiprintf_internal_r+0x10a0>
   48890:	df001d83 	ldbu	fp,118(sp)
   48894:	48007216 	blt	r9,zero,48a60 <___vfiprintf_internal_r+0x9c0>
   48898:	00ffdfc4 	movi	r3,-129
   4889c:	94c4b03a 	or	r2,r18,r19
   488a0:	a0e8703a 	and	r20,r20,r3
   488a4:	1000cc26 	beq	r2,zero,48bd8 <___vfiprintf_internal_r+0xb38>
   488a8:	98021026 	beq	r19,zero,490ec <___vfiprintf_internal_r+0x104c>
   488ac:	dc402415 	stw	r17,144(sp)
   488b0:	dc002515 	stw	r16,148(sp)
   488b4:	9823883a 	mov	r17,r19
   488b8:	9021883a 	mov	r16,r18
   488bc:	dd401a04 	addi	r21,sp,104
   488c0:	4825883a 	mov	r18,r9
   488c4:	4027883a 	mov	r19,r8
   488c8:	8009883a 	mov	r4,r16
   488cc:	880b883a 	mov	r5,r17
   488d0:	01800284 	movi	r6,10
   488d4:	000f883a 	mov	r7,zero
   488d8:	004a4800 	call	4a480 <__umoddi3>
   488dc:	10800c04 	addi	r2,r2,48
   488e0:	ad7fffc4 	addi	r21,r21,-1
   488e4:	8009883a 	mov	r4,r16
   488e8:	880b883a 	mov	r5,r17
   488ec:	a8800005 	stb	r2,0(r21)
   488f0:	01800284 	movi	r6,10
   488f4:	000f883a 	mov	r7,zero
   488f8:	0049f080 	call	49f08 <__udivdi3>
   488fc:	1021883a 	mov	r16,r2
   48900:	10c4b03a 	or	r2,r2,r3
   48904:	1823883a 	mov	r17,r3
   48908:	103fef1e 	bne	r2,zero,488c8 <__alt_data_end+0xfffe17c8>
   4890c:	dc402417 	ldw	r17,144(sp)
   48910:	dc002517 	ldw	r16,148(sp)
   48914:	9013883a 	mov	r9,r18
   48918:	9811883a 	mov	r8,r19
   4891c:	da801e17 	ldw	r10,120(sp)
   48920:	5567c83a 	sub	r19,r10,r21
   48924:	003ede06 	br	484a0 <__alt_data_end+0xfffe13a0>
   48928:	38803fcc 	andi	r2,r7,255
   4892c:	1080201c 	xori	r2,r2,128
   48930:	10bfe004 	addi	r2,r2,-128
   48934:	1002371e 	bne	r2,zero,49214 <___vfiprintf_internal_r+0x1174>
   48938:	01000044 	movi	r4,1
   4893c:	01c00804 	movi	r7,32
   48940:	80c00007 	ldb	r3,0(r16)
   48944:	003e3506 	br	4821c <__alt_data_end+0xfffe111c>
   48948:	a5000054 	ori	r20,r20,1
   4894c:	80c00007 	ldb	r3,0(r16)
   48950:	003e3206 	br	4821c <__alt_data_end+0xfffe111c>
   48954:	a5002014 	ori	r20,r20,128
   48958:	80c00007 	ldb	r3,0(r16)
   4895c:	003e2f06 	br	4821c <__alt_data_end+0xfffe111c>
   48960:	8015883a 	mov	r10,r16
   48964:	0023883a 	mov	r17,zero
   48968:	18bff404 	addi	r2,r3,-48
   4896c:	50c00007 	ldb	r3,0(r10)
   48970:	8c4002a4 	muli	r17,r17,10
   48974:	84000044 	addi	r16,r16,1
   48978:	8015883a 	mov	r10,r16
   4897c:	1463883a 	add	r17,r2,r17
   48980:	18bff404 	addi	r2,r3,-48
   48984:	30bff92e 	bgeu	r6,r2,4896c <__alt_data_end+0xfffe186c>
   48988:	003e2506 	br	48220 <__alt_data_end+0xfffe1120>
   4898c:	21003fcc 	andi	r4,r4,255
   48990:	2002d41e 	bne	r4,zero,494e4 <___vfiprintf_internal_r+0x1444>
   48994:	a5000414 	ori	r20,r20,16
   48998:	a080080c 	andi	r2,r20,32
   4899c:	103fb51e 	bne	r2,zero,48874 <__alt_data_end+0xfffe1774>
   489a0:	a080040c 	andi	r2,r20,16
   489a4:	1001f826 	beq	r2,zero,49188 <___vfiprintf_internal_r+0x10e8>
   489a8:	da802217 	ldw	r10,136(sp)
   489ac:	54800017 	ldw	r18,0(r10)
   489b0:	52800104 	addi	r10,r10,4
   489b4:	da802215 	stw	r10,136(sp)
   489b8:	9027d7fa 	srai	r19,r18,31
   489bc:	9805883a 	mov	r2,r19
   489c0:	003fb206 	br	4888c <__alt_data_end+0xfffe178c>
   489c4:	21003fcc 	andi	r4,r4,255
   489c8:	2002c41e 	bne	r4,zero,494dc <___vfiprintf_internal_r+0x143c>
   489cc:	a5000414 	ori	r20,r20,16
   489d0:	a080080c 	andi	r2,r20,32
   489d4:	103f5f1e 	bne	r2,zero,48754 <__alt_data_end+0xfffe1654>
   489d8:	a080040c 	andi	r2,r20,16
   489dc:	10020f26 	beq	r2,zero,4921c <___vfiprintf_internal_r+0x117c>
   489e0:	da802217 	ldw	r10,136(sp)
   489e4:	d8001d85 	stb	zero,118(sp)
   489e8:	0027883a 	mov	r19,zero
   489ec:	50800104 	addi	r2,r10,4
   489f0:	54800017 	ldw	r18,0(r10)
   489f4:	48021116 	blt	r9,zero,4923c <___vfiprintf_internal_r+0x119c>
   489f8:	00ffdfc4 	movi	r3,-129
   489fc:	d8802215 	stw	r2,136(sp)
   48a00:	a0e8703a 	and	r20,r20,r3
   48a04:	903f5e1e 	bne	r18,zero,48780 <__alt_data_end+0xfffe1680>
   48a08:	0039883a 	mov	fp,zero
   48a0c:	4802a626 	beq	r9,zero,494a8 <___vfiprintf_internal_r+0x1408>
   48a10:	0025883a 	mov	r18,zero
   48a14:	0027883a 	mov	r19,zero
   48a18:	003f5a06 	br	48784 <__alt_data_end+0xfffe1684>
   48a1c:	21003fcc 	andi	r4,r4,255
   48a20:	20029f1e 	bne	r4,zero,494a0 <___vfiprintf_internal_r+0x1400>
   48a24:	a5000414 	ori	r20,r20,16
   48a28:	a080080c 	andi	r2,r20,32
   48a2c:	10005e1e 	bne	r2,zero,48ba8 <___vfiprintf_internal_r+0xb08>
   48a30:	a080040c 	andi	r2,r20,16
   48a34:	1001a21e 	bne	r2,zero,490c0 <___vfiprintf_internal_r+0x1020>
   48a38:	a080100c 	andi	r2,r20,64
   48a3c:	d8001d85 	stb	zero,118(sp)
   48a40:	da802217 	ldw	r10,136(sp)
   48a44:	1002231e 	bne	r2,zero,492d4 <___vfiprintf_internal_r+0x1234>
   48a48:	50800104 	addi	r2,r10,4
   48a4c:	54800017 	ldw	r18,0(r10)
   48a50:	0027883a 	mov	r19,zero
   48a54:	4801a00e 	bge	r9,zero,490d8 <___vfiprintf_internal_r+0x1038>
   48a58:	d8802215 	stw	r2,136(sp)
   48a5c:	0039883a 	mov	fp,zero
   48a60:	94c4b03a 	or	r2,r18,r19
   48a64:	103f901e 	bne	r2,zero,488a8 <__alt_data_end+0xfffe17a8>
   48a68:	00800044 	movi	r2,1
   48a6c:	10803fcc 	andi	r2,r2,255
   48a70:	00c00044 	movi	r3,1
   48a74:	10c05926 	beq	r2,r3,48bdc <___vfiprintf_internal_r+0xb3c>
   48a78:	00c00084 	movi	r3,2
   48a7c:	10ffe41e 	bne	r2,r3,48a10 <__alt_data_end+0xfffe1910>
   48a80:	0025883a 	mov	r18,zero
   48a84:	0027883a 	mov	r19,zero
   48a88:	00013d06 	br	48f80 <___vfiprintf_internal_r+0xee0>
   48a8c:	21003fcc 	andi	r4,r4,255
   48a90:	2002811e 	bne	r4,zero,49498 <___vfiprintf_internal_r+0x13f8>
   48a94:	00800174 	movhi	r2,5
   48a98:	10be6e04 	addi	r2,r2,-1608
   48a9c:	d8802615 	stw	r2,152(sp)
   48aa0:	a080080c 	andi	r2,r20,32
   48aa4:	103f561e 	bne	r2,zero,48800 <__alt_data_end+0xfffe1700>
   48aa8:	a080040c 	andi	r2,r20,16
   48aac:	1001d126 	beq	r2,zero,491f4 <___vfiprintf_internal_r+0x1154>
   48ab0:	da802217 	ldw	r10,136(sp)
   48ab4:	0027883a 	mov	r19,zero
   48ab8:	54800017 	ldw	r18,0(r10)
   48abc:	52800104 	addi	r10,r10,4
   48ac0:	da802215 	stw	r10,136(sp)
   48ac4:	003f5306 	br	48814 <__alt_data_end+0xfffe1714>
   48ac8:	da802217 	ldw	r10,136(sp)
   48acc:	d8001d85 	stb	zero,118(sp)
   48ad0:	55400017 	ldw	r21,0(r10)
   48ad4:	50c00104 	addi	r3,r10,4
   48ad8:	a8024226 	beq	r21,zero,493e4 <___vfiprintf_internal_r+0x1344>
   48adc:	48021816 	blt	r9,zero,49340 <___vfiprintf_internal_r+0x12a0>
   48ae0:	480d883a 	mov	r6,r9
   48ae4:	000b883a 	mov	r5,zero
   48ae8:	a809883a 	mov	r4,r21
   48aec:	d8c02a15 	stw	r3,168(sp)
   48af0:	da002b15 	stw	r8,172(sp)
   48af4:	da402c15 	stw	r9,176(sp)
   48af8:	00461340 	call	46134 <memchr>
   48afc:	d8c02a17 	ldw	r3,168(sp)
   48b00:	da002b17 	ldw	r8,172(sp)
   48b04:	da402c17 	ldw	r9,176(sp)
   48b08:	10024826 	beq	r2,zero,4942c <___vfiprintf_internal_r+0x138c>
   48b0c:	1567c83a 	sub	r19,r2,r21
   48b10:	df001d83 	ldbu	fp,118(sp)
   48b14:	d8c02215 	stw	r3,136(sp)
   48b18:	0013883a 	mov	r9,zero
   48b1c:	003e6006 	br	484a0 <__alt_data_end+0xfffe13a0>
   48b20:	21003fcc 	andi	r4,r4,255
   48b24:	203fc026 	beq	r4,zero,48a28 <__alt_data_end+0xfffe1928>
   48b28:	d9c01d85 	stb	r7,118(sp)
   48b2c:	003fbe06 	br	48a28 <__alt_data_end+0xfffe1928>
   48b30:	da802217 	ldw	r10,136(sp)
   48b34:	54400017 	ldw	r17,0(r10)
   48b38:	50800104 	addi	r2,r10,4
   48b3c:	883e3b16 	blt	r17,zero,4842c <__alt_data_end+0xfffe132c>
   48b40:	d8802215 	stw	r2,136(sp)
   48b44:	80c00007 	ldb	r3,0(r16)
   48b48:	003db406 	br	4821c <__alt_data_end+0xfffe111c>
   48b4c:	01000044 	movi	r4,1
   48b50:	01c00ac4 	movi	r7,43
   48b54:	80c00007 	ldb	r3,0(r16)
   48b58:	003db006 	br	4821c <__alt_data_end+0xfffe111c>
   48b5c:	80c00007 	ldb	r3,0(r16)
   48b60:	82800044 	addi	r10,r16,1
   48b64:	1b423c26 	beq	r3,r13,49458 <___vfiprintf_internal_r+0x13b8>
   48b68:	18bff404 	addi	r2,r3,-48
   48b6c:	0013883a 	mov	r9,zero
   48b70:	30822b36 	bltu	r6,r2,49420 <___vfiprintf_internal_r+0x1380>
   48b74:	50c00007 	ldb	r3,0(r10)
   48b78:	4a4002a4 	muli	r9,r9,10
   48b7c:	54000044 	addi	r16,r10,1
   48b80:	8015883a 	mov	r10,r16
   48b84:	4893883a 	add	r9,r9,r2
   48b88:	18bff404 	addi	r2,r3,-48
   48b8c:	30bff92e 	bgeu	r6,r2,48b74 <__alt_data_end+0xfffe1a74>
   48b90:	483da30e 	bge	r9,zero,48220 <__alt_data_end+0xfffe1120>
   48b94:	027fffc4 	movi	r9,-1
   48b98:	003da106 	br	48220 <__alt_data_end+0xfffe1120>
   48b9c:	a5001014 	ori	r20,r20,64
   48ba0:	80c00007 	ldb	r3,0(r16)
   48ba4:	003d9d06 	br	4821c <__alt_data_end+0xfffe111c>
   48ba8:	da802217 	ldw	r10,136(sp)
   48bac:	d8001d85 	stb	zero,118(sp)
   48bb0:	50c00204 	addi	r3,r10,8
   48bb4:	54800017 	ldw	r18,0(r10)
   48bb8:	54c00117 	ldw	r19,4(r10)
   48bbc:	4801ca16 	blt	r9,zero,492e8 <___vfiprintf_internal_r+0x1248>
   48bc0:	013fdfc4 	movi	r4,-129
   48bc4:	94c4b03a 	or	r2,r18,r19
   48bc8:	d8c02215 	stw	r3,136(sp)
   48bcc:	a128703a 	and	r20,r20,r4
   48bd0:	0039883a 	mov	fp,zero
   48bd4:	103f341e 	bne	r2,zero,488a8 <__alt_data_end+0xfffe17a8>
   48bd8:	483e2e26 	beq	r9,zero,48494 <__alt_data_end+0xfffe1394>
   48bdc:	0025883a 	mov	r18,zero
   48be0:	94800c04 	addi	r18,r18,48
   48be4:	dc8019c5 	stb	r18,103(sp)
   48be8:	dcc02717 	ldw	r19,156(sp)
   48bec:	dd4019c4 	addi	r21,sp,103
   48bf0:	003e2b06 	br	484a0 <__alt_data_end+0xfffe13a0>
   48bf4:	21003fcc 	andi	r4,r4,255
   48bf8:	2002361e 	bne	r4,zero,494d4 <___vfiprintf_internal_r+0x1434>
   48bfc:	1801c126 	beq	r3,zero,49304 <___vfiprintf_internal_r+0x1264>
   48c00:	04800044 	movi	r18,1
   48c04:	d8c01005 	stb	r3,64(sp)
   48c08:	d8001d85 	stb	zero,118(sp)
   48c0c:	9027883a 	mov	r19,r18
   48c10:	dd401004 	addi	r21,sp,64
   48c14:	003f1106 	br	4885c <__alt_data_end+0xfffe175c>
   48c18:	d9402117 	ldw	r5,132(sp)
   48c1c:	d9002017 	ldw	r4,128(sp)
   48c20:	d9801a04 	addi	r6,sp,104
   48c24:	d9c02b15 	stw	r7,172(sp)
   48c28:	dbc02a15 	stw	r15,168(sp)
   48c2c:	0047f8c0 	call	47f8c <__sprint_r.part.0>
   48c30:	d9c02b17 	ldw	r7,172(sp)
   48c34:	dbc02a17 	ldw	r15,168(sp)
   48c38:	10006d1e 	bne	r2,zero,48df0 <___vfiprintf_internal_r+0xd50>
   48c3c:	d9801b17 	ldw	r6,108(sp)
   48c40:	d8801c17 	ldw	r2,112(sp)
   48c44:	d811883a 	mov	r8,sp
   48c48:	31400044 	addi	r5,r6,1
   48c4c:	003e3306 	br	4851c <__alt_data_end+0xfffe141c>
   48c50:	d9401b17 	ldw	r5,108(sp)
   48c54:	d8801c17 	ldw	r2,112(sp)
   48c58:	29000044 	addi	r4,r5,1
   48c5c:	d8c01d87 	ldb	r3,118(sp)
   48c60:	183e4d26 	beq	r3,zero,48598 <__alt_data_end+0xfffe1498>
   48c64:	00c00044 	movi	r3,1
   48c68:	d9401d84 	addi	r5,sp,118
   48c6c:	10c5883a 	add	r2,r2,r3
   48c70:	41400015 	stw	r5,0(r8)
   48c74:	40c00115 	stw	r3,4(r8)
   48c78:	d8801c15 	stw	r2,112(sp)
   48c7c:	d9001b15 	stw	r4,108(sp)
   48c80:	014001c4 	movi	r5,7
   48c84:	2900a90e 	bge	r5,r4,48f2c <___vfiprintf_internal_r+0xe8c>
   48c88:	1000da1e 	bne	r2,zero,48ff4 <___vfiprintf_internal_r+0xf54>
   48c8c:	7000ab1e 	bne	r14,zero,48f3c <___vfiprintf_internal_r+0xe9c>
   48c90:	000b883a 	mov	r5,zero
   48c94:	1809883a 	mov	r4,r3
   48c98:	d811883a 	mov	r8,sp
   48c9c:	00c02004 	movi	r3,128
   48ca0:	e0fe4d26 	beq	fp,r3,485d8 <__alt_data_end+0xfffe14d8>
   48ca4:	4cf9c83a 	sub	fp,r9,r19
   48ca8:	073e7b0e 	bge	zero,fp,48698 <__alt_data_end+0xfffe1598>
   48cac:	01c00404 	movi	r7,16
   48cb0:	3f01900e 	bge	r7,fp,492f4 <___vfiprintf_internal_r+0x1254>
   48cb4:	00c00174 	movhi	r3,5
   48cb8:	18fed404 	addi	r3,r3,-1200
   48cbc:	d8c02415 	stw	r3,144(sp)
   48cc0:	034001c4 	movi	r13,7
   48cc4:	00000506 	br	48cdc <___vfiprintf_internal_r+0xc3c>
   48cc8:	29000084 	addi	r4,r5,2
   48ccc:	42000204 	addi	r8,r8,8
   48cd0:	180b883a 	mov	r5,r3
   48cd4:	e73ffc04 	addi	fp,fp,-16
   48cd8:	3f000d0e 	bge	r7,fp,48d10 <___vfiprintf_internal_r+0xc70>
   48cdc:	10800404 	addi	r2,r2,16
   48ce0:	28c00044 	addi	r3,r5,1
   48ce4:	45c00015 	stw	r23,0(r8)
   48ce8:	41c00115 	stw	r7,4(r8)
   48cec:	d8801c15 	stw	r2,112(sp)
   48cf0:	d8c01b15 	stw	r3,108(sp)
   48cf4:	68fff40e 	bge	r13,r3,48cc8 <__alt_data_end+0xfffe1bc8>
   48cf8:	1000101e 	bne	r2,zero,48d3c <___vfiprintf_internal_r+0xc9c>
   48cfc:	e73ffc04 	addi	fp,fp,-16
   48d00:	01000044 	movi	r4,1
   48d04:	000b883a 	mov	r5,zero
   48d08:	d811883a 	mov	r8,sp
   48d0c:	3f3ff316 	blt	r7,fp,48cdc <__alt_data_end+0xfffe1bdc>
   48d10:	da802417 	ldw	r10,144(sp)
   48d14:	1705883a 	add	r2,r2,fp
   48d18:	47000115 	stw	fp,4(r8)
   48d1c:	42800015 	stw	r10,0(r8)
   48d20:	d8801c15 	stw	r2,112(sp)
   48d24:	d9001b15 	stw	r4,108(sp)
   48d28:	00c001c4 	movi	r3,7
   48d2c:	19003616 	blt	r3,r4,48e08 <___vfiprintf_internal_r+0xd68>
   48d30:	42000204 	addi	r8,r8,8
   48d34:	21000044 	addi	r4,r4,1
   48d38:	003e5706 	br	48698 <__alt_data_end+0xfffe1598>
   48d3c:	d9402117 	ldw	r5,132(sp)
   48d40:	d9002017 	ldw	r4,128(sp)
   48d44:	d9801a04 	addi	r6,sp,104
   48d48:	d9c02b15 	stw	r7,172(sp)
   48d4c:	db402a15 	stw	r13,168(sp)
   48d50:	0047f8c0 	call	47f8c <__sprint_r.part.0>
   48d54:	d9c02b17 	ldw	r7,172(sp)
   48d58:	db402a17 	ldw	r13,168(sp)
   48d5c:	1000241e 	bne	r2,zero,48df0 <___vfiprintf_internal_r+0xd50>
   48d60:	d9401b17 	ldw	r5,108(sp)
   48d64:	d8801c17 	ldw	r2,112(sp)
   48d68:	d811883a 	mov	r8,sp
   48d6c:	29000044 	addi	r4,r5,1
   48d70:	003fd806 	br	48cd4 <__alt_data_end+0xfffe1bd4>
   48d74:	d9401b17 	ldw	r5,108(sp)
   48d78:	00c00174 	movhi	r3,5
   48d7c:	18fed804 	addi	r3,r3,-1184
   48d80:	d8c02415 	stw	r3,144(sp)
   48d84:	29400044 	addi	r5,r5,1
   48d88:	d8c02417 	ldw	r3,144(sp)
   48d8c:	14c5883a 	add	r2,r2,r19
   48d90:	44c00115 	stw	r19,4(r8)
   48d94:	40c00015 	stw	r3,0(r8)
   48d98:	d8801c15 	stw	r2,112(sp)
   48d9c:	d9401b15 	stw	r5,108(sp)
   48da0:	00c001c4 	movi	r3,7
   48da4:	1940070e 	bge	r3,r5,48dc4 <___vfiprintf_internal_r+0xd24>
   48da8:	103e4826 	beq	r2,zero,486cc <__alt_data_end+0xfffe15cc>
   48dac:	d9402117 	ldw	r5,132(sp)
   48db0:	d9002017 	ldw	r4,128(sp)
   48db4:	d9801a04 	addi	r6,sp,104
   48db8:	0047f8c0 	call	47f8c <__sprint_r.part.0>
   48dbc:	10000c1e 	bne	r2,zero,48df0 <___vfiprintf_internal_r+0xd50>
   48dc0:	d8801c17 	ldw	r2,112(sp)
   48dc4:	8c80010e 	bge	r17,r18,48dcc <___vfiprintf_internal_r+0xd2c>
   48dc8:	9023883a 	mov	r17,r18
   48dcc:	da802317 	ldw	r10,140(sp)
   48dd0:	5455883a 	add	r10,r10,r17
   48dd4:	da802315 	stw	r10,140(sp)
   48dd8:	103e4126 	beq	r2,zero,486e0 <__alt_data_end+0xfffe15e0>
   48ddc:	d9402117 	ldw	r5,132(sp)
   48de0:	d9002017 	ldw	r4,128(sp)
   48de4:	d9801a04 	addi	r6,sp,104
   48de8:	0047f8c0 	call	47f8c <__sprint_r.part.0>
   48dec:	103e3c26 	beq	r2,zero,486e0 <__alt_data_end+0xfffe15e0>
   48df0:	dd002117 	ldw	r20,132(sp)
   48df4:	a080030b 	ldhu	r2,12(r20)
   48df8:	1080100c 	andi	r2,r2,64
   48dfc:	1001231e 	bne	r2,zero,4928c <___vfiprintf_internal_r+0x11ec>
   48e00:	d8802317 	ldw	r2,140(sp)
   48e04:	003d7b06 	br	483f4 <__alt_data_end+0xfffe12f4>
   48e08:	1000991e 	bne	r2,zero,49070 <___vfiprintf_internal_r+0xfd0>
   48e0c:	00c00044 	movi	r3,1
   48e10:	9805883a 	mov	r2,r19
   48e14:	dd400015 	stw	r21,0(sp)
   48e18:	dcc00115 	stw	r19,4(sp)
   48e1c:	dcc01c15 	stw	r19,112(sp)
   48e20:	d8c01b15 	stw	r3,108(sp)
   48e24:	d811883a 	mov	r8,sp
   48e28:	42000204 	addi	r8,r8,8
   48e2c:	a2c0010c 	andi	r11,r20,4
   48e30:	583fe426 	beq	r11,zero,48dc4 <__alt_data_end+0xfffe1cc4>
   48e34:	8ca7c83a 	sub	r19,r17,r18
   48e38:	04ffe20e 	bge	zero,r19,48dc4 <__alt_data_end+0xfffe1cc4>
   48e3c:	01c00404 	movi	r7,16
   48e40:	3cffcc0e 	bge	r7,r19,48d74 <__alt_data_end+0xfffe1c74>
   48e44:	02800174 	movhi	r10,5
   48e48:	52bed804 	addi	r10,r10,-1184
   48e4c:	d9001b17 	ldw	r4,108(sp)
   48e50:	da802415 	stw	r10,144(sp)
   48e54:	382b883a 	mov	r21,r7
   48e58:	050001c4 	movi	r20,7
   48e5c:	df002017 	ldw	fp,128(sp)
   48e60:	00000506 	br	48e78 <___vfiprintf_internal_r+0xdd8>
   48e64:	21400084 	addi	r5,r4,2
   48e68:	42000204 	addi	r8,r8,8
   48e6c:	1809883a 	mov	r4,r3
   48e70:	9cfffc04 	addi	r19,r19,-16
   48e74:	acffc40e 	bge	r21,r19,48d88 <__alt_data_end+0xfffe1c88>
   48e78:	10800404 	addi	r2,r2,16
   48e7c:	20c00044 	addi	r3,r4,1
   48e80:	45800015 	stw	r22,0(r8)
   48e84:	45400115 	stw	r21,4(r8)
   48e88:	d8801c15 	stw	r2,112(sp)
   48e8c:	d8c01b15 	stw	r3,108(sp)
   48e90:	a0fff40e 	bge	r20,r3,48e64 <__alt_data_end+0xfffe1d64>
   48e94:	1000041e 	bne	r2,zero,48ea8 <___vfiprintf_internal_r+0xe08>
   48e98:	01400044 	movi	r5,1
   48e9c:	0009883a 	mov	r4,zero
   48ea0:	d811883a 	mov	r8,sp
   48ea4:	003ff206 	br	48e70 <__alt_data_end+0xfffe1d70>
   48ea8:	d9402117 	ldw	r5,132(sp)
   48eac:	d9801a04 	addi	r6,sp,104
   48eb0:	e009883a 	mov	r4,fp
   48eb4:	0047f8c0 	call	47f8c <__sprint_r.part.0>
   48eb8:	103fcd1e 	bne	r2,zero,48df0 <__alt_data_end+0xfffe1cf0>
   48ebc:	d9001b17 	ldw	r4,108(sp)
   48ec0:	d8801c17 	ldw	r2,112(sp)
   48ec4:	d811883a 	mov	r8,sp
   48ec8:	21400044 	addi	r5,r4,1
   48ecc:	003fe806 	br	48e70 <__alt_data_end+0xfffe1d70>
   48ed0:	d9402117 	ldw	r5,132(sp)
   48ed4:	d9002017 	ldw	r4,128(sp)
   48ed8:	d9801a04 	addi	r6,sp,104
   48edc:	d9c02b15 	stw	r7,172(sp)
   48ee0:	db402a15 	stw	r13,168(sp)
   48ee4:	0047f8c0 	call	47f8c <__sprint_r.part.0>
   48ee8:	d9c02b17 	ldw	r7,172(sp)
   48eec:	db402a17 	ldw	r13,168(sp)
   48ef0:	103fbf1e 	bne	r2,zero,48df0 <__alt_data_end+0xfffe1cf0>
   48ef4:	d9401b17 	ldw	r5,108(sp)
   48ef8:	d8801c17 	ldw	r2,112(sp)
   48efc:	d811883a 	mov	r8,sp
   48f00:	29800044 	addi	r6,r5,1
   48f04:	003dc406 	br	48618 <__alt_data_end+0xfffe1518>
   48f08:	1000d21e 	bne	r2,zero,49254 <___vfiprintf_internal_r+0x11b4>
   48f0c:	d8c01d87 	ldb	r3,118(sp)
   48f10:	18009526 	beq	r3,zero,49168 <___vfiprintf_internal_r+0x10c8>
   48f14:	00800044 	movi	r2,1
   48f18:	d8c01d84 	addi	r3,sp,118
   48f1c:	1009883a 	mov	r4,r2
   48f20:	d8c00015 	stw	r3,0(sp)
   48f24:	d8800115 	stw	r2,4(sp)
   48f28:	d811883a 	mov	r8,sp
   48f2c:	200b883a 	mov	r5,r4
   48f30:	42000204 	addi	r8,r8,8
   48f34:	21000044 	addi	r4,r4,1
   48f38:	003d9706 	br	48598 <__alt_data_end+0xfffe1498>
   48f3c:	d9001d04 	addi	r4,sp,116
   48f40:	00800084 	movi	r2,2
   48f44:	d9000015 	stw	r4,0(sp)
   48f48:	d8800115 	stw	r2,4(sp)
   48f4c:	1809883a 	mov	r4,r3
   48f50:	d811883a 	mov	r8,sp
   48f54:	200b883a 	mov	r5,r4
   48f58:	42000204 	addi	r8,r8,8
   48f5c:	21000044 	addi	r4,r4,1
   48f60:	003f4e06 	br	48c9c <__alt_data_end+0xfffe1b9c>
   48f64:	d8001d85 	stb	zero,118(sp)
   48f68:	48005016 	blt	r9,zero,490ac <___vfiprintf_internal_r+0x100c>
   48f6c:	00ffdfc4 	movi	r3,-129
   48f70:	94c4b03a 	or	r2,r18,r19
   48f74:	a0e8703a 	and	r20,r20,r3
   48f78:	103d4426 	beq	r2,zero,4848c <__alt_data_end+0xfffe138c>
   48f7c:	0039883a 	mov	fp,zero
   48f80:	d9002617 	ldw	r4,152(sp)
   48f84:	dd401a04 	addi	r21,sp,104
   48f88:	908003cc 	andi	r2,r18,15
   48f8c:	9806973a 	slli	r3,r19,28
   48f90:	2085883a 	add	r2,r4,r2
   48f94:	9024d13a 	srli	r18,r18,4
   48f98:	10800003 	ldbu	r2,0(r2)
   48f9c:	9826d13a 	srli	r19,r19,4
   48fa0:	ad7fffc4 	addi	r21,r21,-1
   48fa4:	1ca4b03a 	or	r18,r3,r18
   48fa8:	a8800005 	stb	r2,0(r21)
   48fac:	94c4b03a 	or	r2,r18,r19
   48fb0:	103ff51e 	bne	r2,zero,48f88 <__alt_data_end+0xfffe1e88>
   48fb4:	003e5906 	br	4891c <__alt_data_end+0xfffe181c>
   48fb8:	d9402117 	ldw	r5,132(sp)
   48fbc:	d9002017 	ldw	r4,128(sp)
   48fc0:	d9801a04 	addi	r6,sp,104
   48fc4:	0047f8c0 	call	47f8c <__sprint_r.part.0>
   48fc8:	103f891e 	bne	r2,zero,48df0 <__alt_data_end+0xfffe1cf0>
   48fcc:	d8801c17 	ldw	r2,112(sp)
   48fd0:	d811883a 	mov	r8,sp
   48fd4:	003f9506 	br	48e2c <__alt_data_end+0xfffe1d2c>
   48fd8:	d9402117 	ldw	r5,132(sp)
   48fdc:	d9002017 	ldw	r4,128(sp)
   48fe0:	d9801a04 	addi	r6,sp,104
   48fe4:	0047f8c0 	call	47f8c <__sprint_r.part.0>
   48fe8:	103f811e 	bne	r2,zero,48df0 <__alt_data_end+0xfffe1cf0>
   48fec:	d811883a 	mov	r8,sp
   48ff0:	003ced06 	br	483a8 <__alt_data_end+0xfffe12a8>
   48ff4:	d9402117 	ldw	r5,132(sp)
   48ff8:	d9002017 	ldw	r4,128(sp)
   48ffc:	d9801a04 	addi	r6,sp,104
   49000:	da402c15 	stw	r9,176(sp)
   49004:	db802a15 	stw	r14,168(sp)
   49008:	0047f8c0 	call	47f8c <__sprint_r.part.0>
   4900c:	da402c17 	ldw	r9,176(sp)
   49010:	db802a17 	ldw	r14,168(sp)
   49014:	103f761e 	bne	r2,zero,48df0 <__alt_data_end+0xfffe1cf0>
   49018:	d9401b17 	ldw	r5,108(sp)
   4901c:	d8801c17 	ldw	r2,112(sp)
   49020:	d811883a 	mov	r8,sp
   49024:	29000044 	addi	r4,r5,1
   49028:	003d5b06 	br	48598 <__alt_data_end+0xfffe1498>
   4902c:	d9402117 	ldw	r5,132(sp)
   49030:	d9002017 	ldw	r4,128(sp)
   49034:	d9801a04 	addi	r6,sp,104
   49038:	da402c15 	stw	r9,176(sp)
   4903c:	0047f8c0 	call	47f8c <__sprint_r.part.0>
   49040:	da402c17 	ldw	r9,176(sp)
   49044:	103f6a1e 	bne	r2,zero,48df0 <__alt_data_end+0xfffe1cf0>
   49048:	d9401b17 	ldw	r5,108(sp)
   4904c:	d8801c17 	ldw	r2,112(sp)
   49050:	d811883a 	mov	r8,sp
   49054:	29000044 	addi	r4,r5,1
   49058:	003f1006 	br	48c9c <__alt_data_end+0xfffe1b9c>
   4905c:	1000c31e 	bne	r2,zero,4936c <___vfiprintf_internal_r+0x12cc>
   49060:	01000044 	movi	r4,1
   49064:	000b883a 	mov	r5,zero
   49068:	d811883a 	mov	r8,sp
   4906c:	003f0d06 	br	48ca4 <__alt_data_end+0xfffe1ba4>
   49070:	d9402117 	ldw	r5,132(sp)
   49074:	d9002017 	ldw	r4,128(sp)
   49078:	d9801a04 	addi	r6,sp,104
   4907c:	0047f8c0 	call	47f8c <__sprint_r.part.0>
   49080:	103f5b1e 	bne	r2,zero,48df0 <__alt_data_end+0xfffe1cf0>
   49084:	d9001b17 	ldw	r4,108(sp)
   49088:	d8801c17 	ldw	r2,112(sp)
   4908c:	d811883a 	mov	r8,sp
   49090:	21000044 	addi	r4,r4,1
   49094:	003d8006 	br	48698 <__alt_data_end+0xfffe1598>
   49098:	01000174 	movhi	r4,5
   4909c:	213e7304 	addi	r4,r4,-1588
   490a0:	d9002615 	stw	r4,152(sp)
   490a4:	d8c02215 	stw	r3,136(sp)
   490a8:	1029883a 	mov	r20,r2
   490ac:	94c4b03a 	or	r2,r18,r19
   490b0:	103fb21e 	bne	r2,zero,48f7c <__alt_data_end+0xfffe1e7c>
   490b4:	0039883a 	mov	fp,zero
   490b8:	00800084 	movi	r2,2
   490bc:	003e6b06 	br	48a6c <__alt_data_end+0xfffe196c>
   490c0:	da802217 	ldw	r10,136(sp)
   490c4:	d8001d85 	stb	zero,118(sp)
   490c8:	0027883a 	mov	r19,zero
   490cc:	50800104 	addi	r2,r10,4
   490d0:	54800017 	ldw	r18,0(r10)
   490d4:	483e6016 	blt	r9,zero,48a58 <__alt_data_end+0xfffe1958>
   490d8:	00ffdfc4 	movi	r3,-129
   490dc:	d8802215 	stw	r2,136(sp)
   490e0:	a0e8703a 	and	r20,r20,r3
   490e4:	0039883a 	mov	fp,zero
   490e8:	903ebb26 	beq	r18,zero,48bd8 <__alt_data_end+0xfffe1ad8>
   490ec:	00800244 	movi	r2,9
   490f0:	14bdee36 	bltu	r2,r18,488ac <__alt_data_end+0xfffe17ac>
   490f4:	003eba06 	br	48be0 <__alt_data_end+0xfffe1ae0>
   490f8:	00800c04 	movi	r2,48
   490fc:	d8c01d45 	stb	r3,117(sp)
   49100:	d8801d05 	stb	r2,116(sp)
   49104:	d8001d85 	stb	zero,118(sp)
   49108:	a0c00094 	ori	r3,r20,2
   4910c:	4800a916 	blt	r9,zero,493b4 <___vfiprintf_internal_r+0x1314>
   49110:	00bfdfc4 	movi	r2,-129
   49114:	a096703a 	and	r11,r20,r2
   49118:	5d000094 	ori	r20,r11,2
   4911c:	0039883a 	mov	fp,zero
   49120:	003f9706 	br	48f80 <__alt_data_end+0xfffe1e80>
   49124:	8025883a 	mov	r18,r16
   49128:	003c2e06 	br	481e4 <__alt_data_end+0xfffe10e4>
   4912c:	00800174 	movhi	r2,5
   49130:	10be7304 	addi	r2,r2,-1588
   49134:	0039883a 	mov	fp,zero
   49138:	d8802615 	stw	r2,152(sp)
   4913c:	003f9006 	br	48f80 <__alt_data_end+0xfffe1e80>
   49140:	04a5c83a 	sub	r18,zero,r18
   49144:	07000b44 	movi	fp,45
   49148:	9004c03a 	cmpne	r2,r18,zero
   4914c:	04e7c83a 	sub	r19,zero,r19
   49150:	df001d85 	stb	fp,118(sp)
   49154:	98a7c83a 	sub	r19,r19,r2
   49158:	48009f16 	blt	r9,zero,493d8 <___vfiprintf_internal_r+0x1338>
   4915c:	00bfdfc4 	movi	r2,-129
   49160:	a0a8703a 	and	r20,r20,r2
   49164:	003dd006 	br	488a8 <__alt_data_end+0xfffe17a8>
   49168:	70004c26 	beq	r14,zero,4929c <___vfiprintf_internal_r+0x11fc>
   4916c:	00800084 	movi	r2,2
   49170:	d8c01d04 	addi	r3,sp,116
   49174:	d8c00015 	stw	r3,0(sp)
   49178:	d8800115 	stw	r2,4(sp)
   4917c:	01000044 	movi	r4,1
   49180:	d811883a 	mov	r8,sp
   49184:	003f7306 	br	48f54 <__alt_data_end+0xfffe1e54>
   49188:	a080100c 	andi	r2,r20,64
   4918c:	da802217 	ldw	r10,136(sp)
   49190:	103e0626 	beq	r2,zero,489ac <__alt_data_end+0xfffe18ac>
   49194:	5480000f 	ldh	r18,0(r10)
   49198:	52800104 	addi	r10,r10,4
   4919c:	da802215 	stw	r10,136(sp)
   491a0:	9027d7fa 	srai	r19,r18,31
   491a4:	9805883a 	mov	r2,r19
   491a8:	003db806 	br	4888c <__alt_data_end+0xfffe178c>
   491ac:	a080040c 	andi	r2,r20,16
   491b0:	1000091e 	bne	r2,zero,491d8 <___vfiprintf_internal_r+0x1138>
   491b4:	a2c0100c 	andi	r11,r20,64
   491b8:	58000726 	beq	r11,zero,491d8 <___vfiprintf_internal_r+0x1138>
   491bc:	da802217 	ldw	r10,136(sp)
   491c0:	50800017 	ldw	r2,0(r10)
   491c4:	52800104 	addi	r10,r10,4
   491c8:	da802215 	stw	r10,136(sp)
   491cc:	da802317 	ldw	r10,140(sp)
   491d0:	1280000d 	sth	r10,0(r2)
   491d4:	003be706 	br	48174 <__alt_data_end+0xfffe1074>
   491d8:	da802217 	ldw	r10,136(sp)
   491dc:	50800017 	ldw	r2,0(r10)
   491e0:	52800104 	addi	r10,r10,4
   491e4:	da802215 	stw	r10,136(sp)
   491e8:	da802317 	ldw	r10,140(sp)
   491ec:	12800015 	stw	r10,0(r2)
   491f0:	003be006 	br	48174 <__alt_data_end+0xfffe1074>
   491f4:	a080100c 	andi	r2,r20,64
   491f8:	da802217 	ldw	r10,136(sp)
   491fc:	10003026 	beq	r2,zero,492c0 <___vfiprintf_internal_r+0x1220>
   49200:	5480000b 	ldhu	r18,0(r10)
   49204:	52800104 	addi	r10,r10,4
   49208:	0027883a 	mov	r19,zero
   4920c:	da802215 	stw	r10,136(sp)
   49210:	003d8006 	br	48814 <__alt_data_end+0xfffe1714>
   49214:	80c00007 	ldb	r3,0(r16)
   49218:	003c0006 	br	4821c <__alt_data_end+0xfffe111c>
   4921c:	a080100c 	andi	r2,r20,64
   49220:	d8001d85 	stb	zero,118(sp)
   49224:	da802217 	ldw	r10,136(sp)
   49228:	1000201e 	bne	r2,zero,492ac <___vfiprintf_internal_r+0x120c>
   4922c:	50800104 	addi	r2,r10,4
   49230:	54800017 	ldw	r18,0(r10)
   49234:	0027883a 	mov	r19,zero
   49238:	483def0e 	bge	r9,zero,489f8 <__alt_data_end+0xfffe18f8>
   4923c:	94c6b03a 	or	r3,r18,r19
   49240:	d8802215 	stw	r2,136(sp)
   49244:	183d4e1e 	bne	r3,zero,48780 <__alt_data_end+0xfffe1680>
   49248:	0039883a 	mov	fp,zero
   4924c:	0005883a 	mov	r2,zero
   49250:	003e0606 	br	48a6c <__alt_data_end+0xfffe196c>
   49254:	d9402117 	ldw	r5,132(sp)
   49258:	d9002017 	ldw	r4,128(sp)
   4925c:	d9801a04 	addi	r6,sp,104
   49260:	da402c15 	stw	r9,176(sp)
   49264:	db802a15 	stw	r14,168(sp)
   49268:	0047f8c0 	call	47f8c <__sprint_r.part.0>
   4926c:	da402c17 	ldw	r9,176(sp)
   49270:	db802a17 	ldw	r14,168(sp)
   49274:	103ede1e 	bne	r2,zero,48df0 <__alt_data_end+0xfffe1cf0>
   49278:	d9401b17 	ldw	r5,108(sp)
   4927c:	d8801c17 	ldw	r2,112(sp)
   49280:	d811883a 	mov	r8,sp
   49284:	29000044 	addi	r4,r5,1
   49288:	003e7406 	br	48c5c <__alt_data_end+0xfffe1b5c>
   4928c:	00bfffc4 	movi	r2,-1
   49290:	003c5806 	br	483f4 <__alt_data_end+0xfffe12f4>
   49294:	d811883a 	mov	r8,sp
   49298:	003ee806 	br	48e3c <__alt_data_end+0xfffe1d3c>
   4929c:	000b883a 	mov	r5,zero
   492a0:	01000044 	movi	r4,1
   492a4:	d811883a 	mov	r8,sp
   492a8:	003e7c06 	br	48c9c <__alt_data_end+0xfffe1b9c>
   492ac:	50800104 	addi	r2,r10,4
   492b0:	5480000b 	ldhu	r18,0(r10)
   492b4:	0027883a 	mov	r19,zero
   492b8:	483dcf0e 	bge	r9,zero,489f8 <__alt_data_end+0xfffe18f8>
   492bc:	003fdf06 	br	4923c <__alt_data_end+0xfffe213c>
   492c0:	54800017 	ldw	r18,0(r10)
   492c4:	52800104 	addi	r10,r10,4
   492c8:	0027883a 	mov	r19,zero
   492cc:	da802215 	stw	r10,136(sp)
   492d0:	003d5006 	br	48814 <__alt_data_end+0xfffe1714>
   492d4:	50800104 	addi	r2,r10,4
   492d8:	5480000b 	ldhu	r18,0(r10)
   492dc:	0027883a 	mov	r19,zero
   492e0:	483f7d0e 	bge	r9,zero,490d8 <__alt_data_end+0xfffe1fd8>
   492e4:	003ddc06 	br	48a58 <__alt_data_end+0xfffe1958>
   492e8:	d8c02215 	stw	r3,136(sp)
   492ec:	0039883a 	mov	fp,zero
   492f0:	003ddb06 	br	48a60 <__alt_data_end+0xfffe1960>
   492f4:	02800174 	movhi	r10,5
   492f8:	52bed404 	addi	r10,r10,-1200
   492fc:	da802415 	stw	r10,144(sp)
   49300:	003e8306 	br	48d10 <__alt_data_end+0xfffe1c10>
   49304:	d8801c17 	ldw	r2,112(sp)
   49308:	dd002117 	ldw	r20,132(sp)
   4930c:	103eb926 	beq	r2,zero,48df4 <__alt_data_end+0xfffe1cf4>
   49310:	d9002017 	ldw	r4,128(sp)
   49314:	d9801a04 	addi	r6,sp,104
   49318:	a00b883a 	mov	r5,r20
   4931c:	0047f8c0 	call	47f8c <__sprint_r.part.0>
   49320:	003eb406 	br	48df4 <__alt_data_end+0xfffe1cf4>
   49324:	80c00043 	ldbu	r3,1(r16)
   49328:	a5000814 	ori	r20,r20,32
   4932c:	84000044 	addi	r16,r16,1
   49330:	18c03fcc 	andi	r3,r3,255
   49334:	18c0201c 	xori	r3,r3,128
   49338:	18ffe004 	addi	r3,r3,-128
   4933c:	003bb706 	br	4821c <__alt_data_end+0xfffe111c>
   49340:	a809883a 	mov	r4,r21
   49344:	d8c02a15 	stw	r3,168(sp)
   49348:	da002b15 	stw	r8,172(sp)
   4934c:	004088c0 	call	4088c <strlen>
   49350:	d8c02a17 	ldw	r3,168(sp)
   49354:	1027883a 	mov	r19,r2
   49358:	df001d83 	ldbu	fp,118(sp)
   4935c:	d8c02215 	stw	r3,136(sp)
   49360:	0013883a 	mov	r9,zero
   49364:	da002b17 	ldw	r8,172(sp)
   49368:	003c4d06 	br	484a0 <__alt_data_end+0xfffe13a0>
   4936c:	d9402117 	ldw	r5,132(sp)
   49370:	d9002017 	ldw	r4,128(sp)
   49374:	d9801a04 	addi	r6,sp,104
   49378:	da402c15 	stw	r9,176(sp)
   4937c:	0047f8c0 	call	47f8c <__sprint_r.part.0>
   49380:	da402c17 	ldw	r9,176(sp)
   49384:	103e9a1e 	bne	r2,zero,48df0 <__alt_data_end+0xfffe1cf0>
   49388:	d9401b17 	ldw	r5,108(sp)
   4938c:	d8801c17 	ldw	r2,112(sp)
   49390:	d811883a 	mov	r8,sp
   49394:	29000044 	addi	r4,r5,1
   49398:	003e4206 	br	48ca4 <__alt_data_end+0xfffe1ba4>
   4939c:	d9401b17 	ldw	r5,108(sp)
   493a0:	01000174 	movhi	r4,5
   493a4:	213ed804 	addi	r4,r4,-1184
   493a8:	d9002415 	stw	r4,144(sp)
   493ac:	29400044 	addi	r5,r5,1
   493b0:	003c6d06 	br	48568 <__alt_data_end+0xfffe1468>
   493b4:	0039883a 	mov	fp,zero
   493b8:	00800084 	movi	r2,2
   493bc:	10803fcc 	andi	r2,r2,255
   493c0:	01000044 	movi	r4,1
   493c4:	11001e26 	beq	r2,r4,49440 <___vfiprintf_internal_r+0x13a0>
   493c8:	01000084 	movi	r4,2
   493cc:	11001e1e 	bne	r2,r4,49448 <___vfiprintf_internal_r+0x13a8>
   493d0:	1829883a 	mov	r20,r3
   493d4:	003eea06 	br	48f80 <__alt_data_end+0xfffe1e80>
   493d8:	a007883a 	mov	r3,r20
   493dc:	00800044 	movi	r2,1
   493e0:	003ff606 	br	493bc <__alt_data_end+0xfffe22bc>
   493e4:	00800184 	movi	r2,6
   493e8:	1240012e 	bgeu	r2,r9,493f0 <___vfiprintf_internal_r+0x1350>
   493ec:	1013883a 	mov	r9,r2
   493f0:	4827883a 	mov	r19,r9
   493f4:	4825883a 	mov	r18,r9
   493f8:	48001516 	blt	r9,zero,49450 <___vfiprintf_internal_r+0x13b0>
   493fc:	05400174 	movhi	r21,5
   49400:	d8c02215 	stw	r3,136(sp)
   49404:	ad7e7804 	addi	r21,r21,-1568
   49408:	003d1406 	br	4885c <__alt_data_end+0xfffe175c>
   4940c:	02800174 	movhi	r10,5
   49410:	52bed404 	addi	r10,r10,-1200
   49414:	da802415 	stw	r10,144(sp)
   49418:	200d883a 	mov	r6,r4
   4941c:	003c9106 	br	48664 <__alt_data_end+0xfffe1564>
   49420:	5021883a 	mov	r16,r10
   49424:	0013883a 	mov	r9,zero
   49428:	003b7d06 	br	48220 <__alt_data_end+0xfffe1120>
   4942c:	4827883a 	mov	r19,r9
   49430:	df001d83 	ldbu	fp,118(sp)
   49434:	d8c02215 	stw	r3,136(sp)
   49438:	0013883a 	mov	r9,zero
   4943c:	003c1806 	br	484a0 <__alt_data_end+0xfffe13a0>
   49440:	1829883a 	mov	r20,r3
   49444:	003d1806 	br	488a8 <__alt_data_end+0xfffe17a8>
   49448:	1829883a 	mov	r20,r3
   4944c:	003ccd06 	br	48784 <__alt_data_end+0xfffe1684>
   49450:	0025883a 	mov	r18,zero
   49454:	003fe906 	br	493fc <__alt_data_end+0xfffe22fc>
   49458:	d8802217 	ldw	r2,136(sp)
   4945c:	80c00043 	ldbu	r3,1(r16)
   49460:	5021883a 	mov	r16,r10
   49464:	12400017 	ldw	r9,0(r2)
   49468:	10800104 	addi	r2,r2,4
   4946c:	d8802215 	stw	r2,136(sp)
   49470:	483faf0e 	bge	r9,zero,49330 <__alt_data_end+0xfffe2230>
   49474:	18c03fcc 	andi	r3,r3,255
   49478:	18c0201c 	xori	r3,r3,128
   4947c:	027fffc4 	movi	r9,-1
   49480:	18ffe004 	addi	r3,r3,-128
   49484:	003b6506 	br	4821c <__alt_data_end+0xfffe111c>
   49488:	d9c01d85 	stb	r7,118(sp)
   4948c:	003ca006 	br	48710 <__alt_data_end+0xfffe1610>
   49490:	d9c01d85 	stb	r7,118(sp)
   49494:	003cad06 	br	4874c <__alt_data_end+0xfffe164c>
   49498:	d9c01d85 	stb	r7,118(sp)
   4949c:	003d7d06 	br	48a94 <__alt_data_end+0xfffe1994>
   494a0:	d9c01d85 	stb	r7,118(sp)
   494a4:	003d5f06 	br	48a24 <__alt_data_end+0xfffe1924>
   494a8:	a080004c 	andi	r2,r20,1
   494ac:	0039883a 	mov	fp,zero
   494b0:	10000526 	beq	r2,zero,494c8 <___vfiprintf_internal_r+0x1428>
   494b4:	00800c04 	movi	r2,48
   494b8:	d88019c5 	stb	r2,103(sp)
   494bc:	dcc02717 	ldw	r19,156(sp)
   494c0:	dd4019c4 	addi	r21,sp,103
   494c4:	003bf606 	br	484a0 <__alt_data_end+0xfffe13a0>
   494c8:	0027883a 	mov	r19,zero
   494cc:	dd401a04 	addi	r21,sp,104
   494d0:	003bf306 	br	484a0 <__alt_data_end+0xfffe13a0>
   494d4:	d9c01d85 	stb	r7,118(sp)
   494d8:	003dc806 	br	48bfc <__alt_data_end+0xfffe1afc>
   494dc:	d9c01d85 	stb	r7,118(sp)
   494e0:	003d3a06 	br	489cc <__alt_data_end+0xfffe18cc>
   494e4:	d9c01d85 	stb	r7,118(sp)
   494e8:	003d2a06 	br	48994 <__alt_data_end+0xfffe1894>
   494ec:	d9c01d85 	stb	r7,118(sp)
   494f0:	003cde06 	br	4886c <__alt_data_end+0xfffe176c>
   494f4:	d9c01d85 	stb	r7,118(sp)
   494f8:	003cbc06 	br	487ec <__alt_data_end+0xfffe16ec>

000494fc <__vfiprintf_internal>:
   494fc:	00800174 	movhi	r2,5
   49500:	1085d304 	addi	r2,r2,5964
   49504:	300f883a 	mov	r7,r6
   49508:	280d883a 	mov	r6,r5
   4950c:	200b883a 	mov	r5,r4
   49510:	11000017 	ldw	r4,0(r2)
   49514:	00480a01 	jmpi	480a0 <___vfiprintf_internal_r>

00049518 <__sbprintf>:
   49518:	2880030b 	ldhu	r2,12(r5)
   4951c:	2ac01917 	ldw	r11,100(r5)
   49520:	2a80038b 	ldhu	r10,14(r5)
   49524:	2a400717 	ldw	r9,28(r5)
   49528:	2a000917 	ldw	r8,36(r5)
   4952c:	defee204 	addi	sp,sp,-1144
   49530:	00c10004 	movi	r3,1024
   49534:	dc011a15 	stw	r16,1128(sp)
   49538:	10bfff4c 	andi	r2,r2,65533
   4953c:	2821883a 	mov	r16,r5
   49540:	d8cb883a 	add	r5,sp,r3
   49544:	dc811c15 	stw	r18,1136(sp)
   49548:	dc411b15 	stw	r17,1132(sp)
   4954c:	dfc11d15 	stw	ra,1140(sp)
   49550:	2025883a 	mov	r18,r4
   49554:	d881030d 	sth	r2,1036(sp)
   49558:	dac11915 	stw	r11,1124(sp)
   4955c:	da81038d 	sth	r10,1038(sp)
   49560:	da410715 	stw	r9,1052(sp)
   49564:	da010915 	stw	r8,1060(sp)
   49568:	dec10015 	stw	sp,1024(sp)
   4956c:	dec10415 	stw	sp,1040(sp)
   49570:	d8c10215 	stw	r3,1032(sp)
   49574:	d8c10515 	stw	r3,1044(sp)
   49578:	d8010615 	stw	zero,1048(sp)
   4957c:	00480a00 	call	480a0 <___vfiprintf_internal_r>
   49580:	1023883a 	mov	r17,r2
   49584:	10000416 	blt	r2,zero,49598 <__sbprintf+0x80>
   49588:	d9410004 	addi	r5,sp,1024
   4958c:	9009883a 	mov	r4,r18
   49590:	00447ec0 	call	447ec <_fflush_r>
   49594:	10000d1e 	bne	r2,zero,495cc <__sbprintf+0xb4>
   49598:	d881030b 	ldhu	r2,1036(sp)
   4959c:	1080100c 	andi	r2,r2,64
   495a0:	10000326 	beq	r2,zero,495b0 <__sbprintf+0x98>
   495a4:	8080030b 	ldhu	r2,12(r16)
   495a8:	10801014 	ori	r2,r2,64
   495ac:	8080030d 	sth	r2,12(r16)
   495b0:	8805883a 	mov	r2,r17
   495b4:	dfc11d17 	ldw	ra,1140(sp)
   495b8:	dc811c17 	ldw	r18,1136(sp)
   495bc:	dc411b17 	ldw	r17,1132(sp)
   495c0:	dc011a17 	ldw	r16,1128(sp)
   495c4:	dec11e04 	addi	sp,sp,1144
   495c8:	f800283a 	ret
   495cc:	047fffc4 	movi	r17,-1
   495d0:	003ff106 	br	49598 <__alt_data_end+0xfffe2498>

000495d4 <__swbuf_r>:
   495d4:	defffb04 	addi	sp,sp,-20
   495d8:	dcc00315 	stw	r19,12(sp)
   495dc:	dc800215 	stw	r18,8(sp)
   495e0:	dc000015 	stw	r16,0(sp)
   495e4:	dfc00415 	stw	ra,16(sp)
   495e8:	dc400115 	stw	r17,4(sp)
   495ec:	2025883a 	mov	r18,r4
   495f0:	2827883a 	mov	r19,r5
   495f4:	3021883a 	mov	r16,r6
   495f8:	20000226 	beq	r4,zero,49604 <__swbuf_r+0x30>
   495fc:	20800e17 	ldw	r2,56(r4)
   49600:	10004226 	beq	r2,zero,4970c <__swbuf_r+0x138>
   49604:	80800617 	ldw	r2,24(r16)
   49608:	8100030b 	ldhu	r4,12(r16)
   4960c:	80800215 	stw	r2,8(r16)
   49610:	2080020c 	andi	r2,r4,8
   49614:	10003626 	beq	r2,zero,496f0 <__swbuf_r+0x11c>
   49618:	80c00417 	ldw	r3,16(r16)
   4961c:	18003426 	beq	r3,zero,496f0 <__swbuf_r+0x11c>
   49620:	2088000c 	andi	r2,r4,8192
   49624:	9c403fcc 	andi	r17,r19,255
   49628:	10001a26 	beq	r2,zero,49694 <__swbuf_r+0xc0>
   4962c:	80800017 	ldw	r2,0(r16)
   49630:	81000517 	ldw	r4,20(r16)
   49634:	10c7c83a 	sub	r3,r2,r3
   49638:	1900200e 	bge	r3,r4,496bc <__swbuf_r+0xe8>
   4963c:	18c00044 	addi	r3,r3,1
   49640:	81000217 	ldw	r4,8(r16)
   49644:	11400044 	addi	r5,r2,1
   49648:	81400015 	stw	r5,0(r16)
   4964c:	213fffc4 	addi	r4,r4,-1
   49650:	81000215 	stw	r4,8(r16)
   49654:	14c00005 	stb	r19,0(r2)
   49658:	80800517 	ldw	r2,20(r16)
   4965c:	10c01e26 	beq	r2,r3,496d8 <__swbuf_r+0x104>
   49660:	8080030b 	ldhu	r2,12(r16)
   49664:	1080004c 	andi	r2,r2,1
   49668:	10000226 	beq	r2,zero,49674 <__swbuf_r+0xa0>
   4966c:	00800284 	movi	r2,10
   49670:	88801926 	beq	r17,r2,496d8 <__swbuf_r+0x104>
   49674:	8805883a 	mov	r2,r17
   49678:	dfc00417 	ldw	ra,16(sp)
   4967c:	dcc00317 	ldw	r19,12(sp)
   49680:	dc800217 	ldw	r18,8(sp)
   49684:	dc400117 	ldw	r17,4(sp)
   49688:	dc000017 	ldw	r16,0(sp)
   4968c:	dec00504 	addi	sp,sp,20
   49690:	f800283a 	ret
   49694:	81401917 	ldw	r5,100(r16)
   49698:	00b7ffc4 	movi	r2,-8193
   4969c:	21080014 	ori	r4,r4,8192
   496a0:	2884703a 	and	r2,r5,r2
   496a4:	80801915 	stw	r2,100(r16)
   496a8:	80800017 	ldw	r2,0(r16)
   496ac:	8100030d 	sth	r4,12(r16)
   496b0:	81000517 	ldw	r4,20(r16)
   496b4:	10c7c83a 	sub	r3,r2,r3
   496b8:	193fe016 	blt	r3,r4,4963c <__alt_data_end+0xfffe253c>
   496bc:	800b883a 	mov	r5,r16
   496c0:	9009883a 	mov	r4,r18
   496c4:	00447ec0 	call	447ec <_fflush_r>
   496c8:	1000071e 	bne	r2,zero,496e8 <__swbuf_r+0x114>
   496cc:	80800017 	ldw	r2,0(r16)
   496d0:	00c00044 	movi	r3,1
   496d4:	003fda06 	br	49640 <__alt_data_end+0xfffe2540>
   496d8:	800b883a 	mov	r5,r16
   496dc:	9009883a 	mov	r4,r18
   496e0:	00447ec0 	call	447ec <_fflush_r>
   496e4:	103fe326 	beq	r2,zero,49674 <__alt_data_end+0xfffe2574>
   496e8:	00bfffc4 	movi	r2,-1
   496ec:	003fe206 	br	49678 <__alt_data_end+0xfffe2578>
   496f0:	800b883a 	mov	r5,r16
   496f4:	9009883a 	mov	r4,r18
   496f8:	0042bf40 	call	42bf4 <__swsetup_r>
   496fc:	103ffa1e 	bne	r2,zero,496e8 <__alt_data_end+0xfffe25e8>
   49700:	8100030b 	ldhu	r4,12(r16)
   49704:	80c00417 	ldw	r3,16(r16)
   49708:	003fc506 	br	49620 <__alt_data_end+0xfffe2520>
   4970c:	0044bc80 	call	44bc8 <__sinit>
   49710:	003fbc06 	br	49604 <__alt_data_end+0xfffe2504>

00049714 <__swbuf>:
   49714:	00800174 	movhi	r2,5
   49718:	1085d304 	addi	r2,r2,5964
   4971c:	280d883a 	mov	r6,r5
   49720:	200b883a 	mov	r5,r4
   49724:	11000017 	ldw	r4,0(r2)
   49728:	00495d41 	jmpi	495d4 <__swbuf_r>

0004972c <_write_r>:
   4972c:	defffd04 	addi	sp,sp,-12
   49730:	2805883a 	mov	r2,r5
   49734:	dc000015 	stw	r16,0(sp)
   49738:	04000174 	movhi	r16,5
   4973c:	dc400115 	stw	r17,4(sp)
   49740:	300b883a 	mov	r5,r6
   49744:	840ca304 	addi	r16,r16,12940
   49748:	2023883a 	mov	r17,r4
   4974c:	380d883a 	mov	r6,r7
   49750:	1009883a 	mov	r4,r2
   49754:	dfc00215 	stw	ra,8(sp)
   49758:	80000015 	stw	zero,0(r16)
   4975c:	004d89c0 	call	4d89c <write>
   49760:	00ffffc4 	movi	r3,-1
   49764:	10c00526 	beq	r2,r3,4977c <_write_r+0x50>
   49768:	dfc00217 	ldw	ra,8(sp)
   4976c:	dc400117 	ldw	r17,4(sp)
   49770:	dc000017 	ldw	r16,0(sp)
   49774:	dec00304 	addi	sp,sp,12
   49778:	f800283a 	ret
   4977c:	80c00017 	ldw	r3,0(r16)
   49780:	183ff926 	beq	r3,zero,49768 <__alt_data_end+0xfffe2668>
   49784:	88c00015 	stw	r3,0(r17)
   49788:	003ff706 	br	49768 <__alt_data_end+0xfffe2668>

0004978c <_close_r>:
   4978c:	defffd04 	addi	sp,sp,-12
   49790:	dc000015 	stw	r16,0(sp)
   49794:	04000174 	movhi	r16,5
   49798:	dc400115 	stw	r17,4(sp)
   4979c:	840ca304 	addi	r16,r16,12940
   497a0:	2023883a 	mov	r17,r4
   497a4:	2809883a 	mov	r4,r5
   497a8:	dfc00215 	stw	ra,8(sp)
   497ac:	80000015 	stw	zero,0(r16)
   497b0:	004d05c0 	call	4d05c <close>
   497b4:	00ffffc4 	movi	r3,-1
   497b8:	10c00526 	beq	r2,r3,497d0 <_close_r+0x44>
   497bc:	dfc00217 	ldw	ra,8(sp)
   497c0:	dc400117 	ldw	r17,4(sp)
   497c4:	dc000017 	ldw	r16,0(sp)
   497c8:	dec00304 	addi	sp,sp,12
   497cc:	f800283a 	ret
   497d0:	80c00017 	ldw	r3,0(r16)
   497d4:	183ff926 	beq	r3,zero,497bc <__alt_data_end+0xfffe26bc>
   497d8:	88c00015 	stw	r3,0(r17)
   497dc:	003ff706 	br	497bc <__alt_data_end+0xfffe26bc>

000497e0 <_calloc_r>:
   497e0:	298b383a 	mul	r5,r5,r6
   497e4:	defffe04 	addi	sp,sp,-8
   497e8:	dfc00115 	stw	ra,4(sp)
   497ec:	dc000015 	stw	r16,0(sp)
   497f0:	00459280 	call	45928 <_malloc_r>
   497f4:	10002926 	beq	r2,zero,4989c <_calloc_r+0xbc>
   497f8:	11bfff17 	ldw	r6,-4(r2)
   497fc:	1021883a 	mov	r16,r2
   49800:	00bfff04 	movi	r2,-4
   49804:	308c703a 	and	r6,r6,r2
   49808:	00c00904 	movi	r3,36
   4980c:	308d883a 	add	r6,r6,r2
   49810:	19801636 	bltu	r3,r6,4986c <_calloc_r+0x8c>
   49814:	008004c4 	movi	r2,19
   49818:	11800b2e 	bgeu	r2,r6,49848 <_calloc_r+0x68>
   4981c:	80000015 	stw	zero,0(r16)
   49820:	80000115 	stw	zero,4(r16)
   49824:	008006c4 	movi	r2,27
   49828:	11801a2e 	bgeu	r2,r6,49894 <_calloc_r+0xb4>
   4982c:	80000215 	stw	zero,8(r16)
   49830:	80000315 	stw	zero,12(r16)
   49834:	30c0151e 	bne	r6,r3,4988c <_calloc_r+0xac>
   49838:	80000415 	stw	zero,16(r16)
   4983c:	80800604 	addi	r2,r16,24
   49840:	80000515 	stw	zero,20(r16)
   49844:	00000106 	br	4984c <_calloc_r+0x6c>
   49848:	8005883a 	mov	r2,r16
   4984c:	10000015 	stw	zero,0(r2)
   49850:	10000115 	stw	zero,4(r2)
   49854:	10000215 	stw	zero,8(r2)
   49858:	8005883a 	mov	r2,r16
   4985c:	dfc00117 	ldw	ra,4(sp)
   49860:	dc000017 	ldw	r16,0(sp)
   49864:	dec00204 	addi	sp,sp,8
   49868:	f800283a 	ret
   4986c:	000b883a 	mov	r5,zero
   49870:	8009883a 	mov	r4,r16
   49874:	00464bc0 	call	464bc <memset>
   49878:	8005883a 	mov	r2,r16
   4987c:	dfc00117 	ldw	ra,4(sp)
   49880:	dc000017 	ldw	r16,0(sp)
   49884:	dec00204 	addi	sp,sp,8
   49888:	f800283a 	ret
   4988c:	80800404 	addi	r2,r16,16
   49890:	003fee06 	br	4984c <__alt_data_end+0xfffe274c>
   49894:	80800204 	addi	r2,r16,8
   49898:	003fec06 	br	4984c <__alt_data_end+0xfffe274c>
   4989c:	0005883a 	mov	r2,zero
   498a0:	003fee06 	br	4985c <__alt_data_end+0xfffe275c>

000498a4 <_fclose_r>:
   498a4:	28003926 	beq	r5,zero,4998c <_fclose_r+0xe8>
   498a8:	defffc04 	addi	sp,sp,-16
   498ac:	dc400115 	stw	r17,4(sp)
   498b0:	dc000015 	stw	r16,0(sp)
   498b4:	dfc00315 	stw	ra,12(sp)
   498b8:	dc800215 	stw	r18,8(sp)
   498bc:	2023883a 	mov	r17,r4
   498c0:	2821883a 	mov	r16,r5
   498c4:	20000226 	beq	r4,zero,498d0 <_fclose_r+0x2c>
   498c8:	20800e17 	ldw	r2,56(r4)
   498cc:	10002726 	beq	r2,zero,4996c <_fclose_r+0xc8>
   498d0:	8080030f 	ldh	r2,12(r16)
   498d4:	1000071e 	bne	r2,zero,498f4 <_fclose_r+0x50>
   498d8:	0005883a 	mov	r2,zero
   498dc:	dfc00317 	ldw	ra,12(sp)
   498e0:	dc800217 	ldw	r18,8(sp)
   498e4:	dc400117 	ldw	r17,4(sp)
   498e8:	dc000017 	ldw	r16,0(sp)
   498ec:	dec00404 	addi	sp,sp,16
   498f0:	f800283a 	ret
   498f4:	800b883a 	mov	r5,r16
   498f8:	8809883a 	mov	r4,r17
   498fc:	00445d00 	call	445d0 <__sflush_r>
   49900:	1025883a 	mov	r18,r2
   49904:	80800b17 	ldw	r2,44(r16)
   49908:	10000426 	beq	r2,zero,4991c <_fclose_r+0x78>
   4990c:	81400717 	ldw	r5,28(r16)
   49910:	8809883a 	mov	r4,r17
   49914:	103ee83a 	callr	r2
   49918:	10001616 	blt	r2,zero,49974 <_fclose_r+0xd0>
   4991c:	8080030b 	ldhu	r2,12(r16)
   49920:	1080200c 	andi	r2,r2,128
   49924:	1000151e 	bne	r2,zero,4997c <_fclose_r+0xd8>
   49928:	81400c17 	ldw	r5,48(r16)
   4992c:	28000526 	beq	r5,zero,49944 <_fclose_r+0xa0>
   49930:	80801004 	addi	r2,r16,64
   49934:	28800226 	beq	r5,r2,49940 <_fclose_r+0x9c>
   49938:	8809883a 	mov	r4,r17
   4993c:	0044d3c0 	call	44d3c <_free_r>
   49940:	80000c15 	stw	zero,48(r16)
   49944:	81401117 	ldw	r5,68(r16)
   49948:	28000326 	beq	r5,zero,49958 <_fclose_r+0xb4>
   4994c:	8809883a 	mov	r4,r17
   49950:	0044d3c0 	call	44d3c <_free_r>
   49954:	80001115 	stw	zero,68(r16)
   49958:	0044bd80 	call	44bd8 <__sfp_lock_acquire>
   4995c:	8000030d 	sth	zero,12(r16)
   49960:	0044bdc0 	call	44bdc <__sfp_lock_release>
   49964:	9005883a 	mov	r2,r18
   49968:	003fdc06 	br	498dc <__alt_data_end+0xfffe27dc>
   4996c:	0044bc80 	call	44bc8 <__sinit>
   49970:	003fd706 	br	498d0 <__alt_data_end+0xfffe27d0>
   49974:	04bfffc4 	movi	r18,-1
   49978:	003fe806 	br	4991c <__alt_data_end+0xfffe281c>
   4997c:	81400417 	ldw	r5,16(r16)
   49980:	8809883a 	mov	r4,r17
   49984:	0044d3c0 	call	44d3c <_free_r>
   49988:	003fe706 	br	49928 <__alt_data_end+0xfffe2828>
   4998c:	0005883a 	mov	r2,zero
   49990:	f800283a 	ret

00049994 <fclose>:
   49994:	00800174 	movhi	r2,5
   49998:	1085d304 	addi	r2,r2,5964
   4999c:	200b883a 	mov	r5,r4
   499a0:	11000017 	ldw	r4,0(r2)
   499a4:	00498a41 	jmpi	498a4 <_fclose_r>

000499a8 <__fputwc>:
   499a8:	defff804 	addi	sp,sp,-32
   499ac:	dcc00415 	stw	r19,16(sp)
   499b0:	dc800315 	stw	r18,12(sp)
   499b4:	dc000115 	stw	r16,4(sp)
   499b8:	dfc00715 	stw	ra,28(sp)
   499bc:	dd400615 	stw	r21,24(sp)
   499c0:	dd000515 	stw	r20,20(sp)
   499c4:	dc400215 	stw	r17,8(sp)
   499c8:	2027883a 	mov	r19,r4
   499cc:	2825883a 	mov	r18,r5
   499d0:	3021883a 	mov	r16,r6
   499d4:	00457180 	call	45718 <__locale_mb_cur_max>
   499d8:	00c00044 	movi	r3,1
   499dc:	10c03e26 	beq	r2,r3,49ad8 <__fputwc+0x130>
   499e0:	81c01704 	addi	r7,r16,92
   499e4:	900d883a 	mov	r6,r18
   499e8:	d80b883a 	mov	r5,sp
   499ec:	9809883a 	mov	r4,r19
   499f0:	0049d200 	call	49d20 <_wcrtomb_r>
   499f4:	1029883a 	mov	r20,r2
   499f8:	00bfffc4 	movi	r2,-1
   499fc:	a0802026 	beq	r20,r2,49a80 <__fputwc+0xd8>
   49a00:	d9400003 	ldbu	r5,0(sp)
   49a04:	a0001c26 	beq	r20,zero,49a78 <__fputwc+0xd0>
   49a08:	0023883a 	mov	r17,zero
   49a0c:	05400284 	movi	r21,10
   49a10:	00000906 	br	49a38 <__fputwc+0x90>
   49a14:	80800017 	ldw	r2,0(r16)
   49a18:	11400005 	stb	r5,0(r2)
   49a1c:	80c00017 	ldw	r3,0(r16)
   49a20:	18c00044 	addi	r3,r3,1
   49a24:	80c00015 	stw	r3,0(r16)
   49a28:	8c400044 	addi	r17,r17,1
   49a2c:	dc45883a 	add	r2,sp,r17
   49a30:	8d00112e 	bgeu	r17,r20,49a78 <__fputwc+0xd0>
   49a34:	11400003 	ldbu	r5,0(r2)
   49a38:	80c00217 	ldw	r3,8(r16)
   49a3c:	18ffffc4 	addi	r3,r3,-1
   49a40:	80c00215 	stw	r3,8(r16)
   49a44:	183ff30e 	bge	r3,zero,49a14 <__alt_data_end+0xfffe2914>
   49a48:	80800617 	ldw	r2,24(r16)
   49a4c:	18801916 	blt	r3,r2,49ab4 <__fputwc+0x10c>
   49a50:	80800017 	ldw	r2,0(r16)
   49a54:	11400005 	stb	r5,0(r2)
   49a58:	80800017 	ldw	r2,0(r16)
   49a5c:	10c00003 	ldbu	r3,0(r2)
   49a60:	10800044 	addi	r2,r2,1
   49a64:	1d402326 	beq	r3,r21,49af4 <__fputwc+0x14c>
   49a68:	80800015 	stw	r2,0(r16)
   49a6c:	8c400044 	addi	r17,r17,1
   49a70:	dc45883a 	add	r2,sp,r17
   49a74:	8d3fef36 	bltu	r17,r20,49a34 <__alt_data_end+0xfffe2934>
   49a78:	9005883a 	mov	r2,r18
   49a7c:	00000406 	br	49a90 <__fputwc+0xe8>
   49a80:	80c0030b 	ldhu	r3,12(r16)
   49a84:	a005883a 	mov	r2,r20
   49a88:	18c01014 	ori	r3,r3,64
   49a8c:	80c0030d 	sth	r3,12(r16)
   49a90:	dfc00717 	ldw	ra,28(sp)
   49a94:	dd400617 	ldw	r21,24(sp)
   49a98:	dd000517 	ldw	r20,20(sp)
   49a9c:	dcc00417 	ldw	r19,16(sp)
   49aa0:	dc800317 	ldw	r18,12(sp)
   49aa4:	dc400217 	ldw	r17,8(sp)
   49aa8:	dc000117 	ldw	r16,4(sp)
   49aac:	dec00804 	addi	sp,sp,32
   49ab0:	f800283a 	ret
   49ab4:	800d883a 	mov	r6,r16
   49ab8:	29403fcc 	andi	r5,r5,255
   49abc:	9809883a 	mov	r4,r19
   49ac0:	00495d40 	call	495d4 <__swbuf_r>
   49ac4:	10bfffe0 	cmpeqi	r2,r2,-1
   49ac8:	10803fcc 	andi	r2,r2,255
   49acc:	103fd626 	beq	r2,zero,49a28 <__alt_data_end+0xfffe2928>
   49ad0:	00bfffc4 	movi	r2,-1
   49ad4:	003fee06 	br	49a90 <__alt_data_end+0xfffe2990>
   49ad8:	90ffffc4 	addi	r3,r18,-1
   49adc:	01003f84 	movi	r4,254
   49ae0:	20ffbf36 	bltu	r4,r3,499e0 <__alt_data_end+0xfffe28e0>
   49ae4:	900b883a 	mov	r5,r18
   49ae8:	dc800005 	stb	r18,0(sp)
   49aec:	1029883a 	mov	r20,r2
   49af0:	003fc506 	br	49a08 <__alt_data_end+0xfffe2908>
   49af4:	800d883a 	mov	r6,r16
   49af8:	a80b883a 	mov	r5,r21
   49afc:	9809883a 	mov	r4,r19
   49b00:	00495d40 	call	495d4 <__swbuf_r>
   49b04:	10bfffe0 	cmpeqi	r2,r2,-1
   49b08:	003fef06 	br	49ac8 <__alt_data_end+0xfffe29c8>

00049b0c <_fputwc_r>:
   49b0c:	3080030b 	ldhu	r2,12(r6)
   49b10:	10c8000c 	andi	r3,r2,8192
   49b14:	1800051e 	bne	r3,zero,49b2c <_fputwc_r+0x20>
   49b18:	30c01917 	ldw	r3,100(r6)
   49b1c:	10880014 	ori	r2,r2,8192
   49b20:	3080030d 	sth	r2,12(r6)
   49b24:	18880014 	ori	r2,r3,8192
   49b28:	30801915 	stw	r2,100(r6)
   49b2c:	00499a81 	jmpi	499a8 <__fputwc>

00049b30 <fputwc>:
   49b30:	00800174 	movhi	r2,5
   49b34:	defffc04 	addi	sp,sp,-16
   49b38:	1085d304 	addi	r2,r2,5964
   49b3c:	dc000115 	stw	r16,4(sp)
   49b40:	14000017 	ldw	r16,0(r2)
   49b44:	dc400215 	stw	r17,8(sp)
   49b48:	dfc00315 	stw	ra,12(sp)
   49b4c:	2023883a 	mov	r17,r4
   49b50:	80000226 	beq	r16,zero,49b5c <fputwc+0x2c>
   49b54:	80800e17 	ldw	r2,56(r16)
   49b58:	10001026 	beq	r2,zero,49b9c <fputwc+0x6c>
   49b5c:	2880030b 	ldhu	r2,12(r5)
   49b60:	10c8000c 	andi	r3,r2,8192
   49b64:	1800051e 	bne	r3,zero,49b7c <fputwc+0x4c>
   49b68:	28c01917 	ldw	r3,100(r5)
   49b6c:	10880014 	ori	r2,r2,8192
   49b70:	2880030d 	sth	r2,12(r5)
   49b74:	18880014 	ori	r2,r3,8192
   49b78:	28801915 	stw	r2,100(r5)
   49b7c:	280d883a 	mov	r6,r5
   49b80:	8009883a 	mov	r4,r16
   49b84:	880b883a 	mov	r5,r17
   49b88:	dfc00317 	ldw	ra,12(sp)
   49b8c:	dc400217 	ldw	r17,8(sp)
   49b90:	dc000117 	ldw	r16,4(sp)
   49b94:	dec00404 	addi	sp,sp,16
   49b98:	00499a81 	jmpi	499a8 <__fputwc>
   49b9c:	8009883a 	mov	r4,r16
   49ba0:	d9400015 	stw	r5,0(sp)
   49ba4:	0044bc80 	call	44bc8 <__sinit>
   49ba8:	d9400017 	ldw	r5,0(sp)
   49bac:	003feb06 	br	49b5c <__alt_data_end+0xfffe2a5c>

00049bb0 <_fstat_r>:
   49bb0:	defffd04 	addi	sp,sp,-12
   49bb4:	2805883a 	mov	r2,r5
   49bb8:	dc000015 	stw	r16,0(sp)
   49bbc:	04000174 	movhi	r16,5
   49bc0:	dc400115 	stw	r17,4(sp)
   49bc4:	840ca304 	addi	r16,r16,12940
   49bc8:	2023883a 	mov	r17,r4
   49bcc:	300b883a 	mov	r5,r6
   49bd0:	1009883a 	mov	r4,r2
   49bd4:	dfc00215 	stw	ra,8(sp)
   49bd8:	80000015 	stw	zero,0(r16)
   49bdc:	004d1940 	call	4d194 <fstat>
   49be0:	00ffffc4 	movi	r3,-1
   49be4:	10c00526 	beq	r2,r3,49bfc <_fstat_r+0x4c>
   49be8:	dfc00217 	ldw	ra,8(sp)
   49bec:	dc400117 	ldw	r17,4(sp)
   49bf0:	dc000017 	ldw	r16,0(sp)
   49bf4:	dec00304 	addi	sp,sp,12
   49bf8:	f800283a 	ret
   49bfc:	80c00017 	ldw	r3,0(r16)
   49c00:	183ff926 	beq	r3,zero,49be8 <__alt_data_end+0xfffe2ae8>
   49c04:	88c00015 	stw	r3,0(r17)
   49c08:	003ff706 	br	49be8 <__alt_data_end+0xfffe2ae8>

00049c0c <_isatty_r>:
   49c0c:	defffd04 	addi	sp,sp,-12
   49c10:	dc000015 	stw	r16,0(sp)
   49c14:	04000174 	movhi	r16,5
   49c18:	dc400115 	stw	r17,4(sp)
   49c1c:	840ca304 	addi	r16,r16,12940
   49c20:	2023883a 	mov	r17,r4
   49c24:	2809883a 	mov	r4,r5
   49c28:	dfc00215 	stw	ra,8(sp)
   49c2c:	80000015 	stw	zero,0(r16)
   49c30:	004d2800 	call	4d280 <isatty>
   49c34:	00ffffc4 	movi	r3,-1
   49c38:	10c00526 	beq	r2,r3,49c50 <_isatty_r+0x44>
   49c3c:	dfc00217 	ldw	ra,8(sp)
   49c40:	dc400117 	ldw	r17,4(sp)
   49c44:	dc000017 	ldw	r16,0(sp)
   49c48:	dec00304 	addi	sp,sp,12
   49c4c:	f800283a 	ret
   49c50:	80c00017 	ldw	r3,0(r16)
   49c54:	183ff926 	beq	r3,zero,49c3c <__alt_data_end+0xfffe2b3c>
   49c58:	88c00015 	stw	r3,0(r17)
   49c5c:	003ff706 	br	49c3c <__alt_data_end+0xfffe2b3c>

00049c60 <_lseek_r>:
   49c60:	defffd04 	addi	sp,sp,-12
   49c64:	2805883a 	mov	r2,r5
   49c68:	dc000015 	stw	r16,0(sp)
   49c6c:	04000174 	movhi	r16,5
   49c70:	dc400115 	stw	r17,4(sp)
   49c74:	300b883a 	mov	r5,r6
   49c78:	840ca304 	addi	r16,r16,12940
   49c7c:	2023883a 	mov	r17,r4
   49c80:	380d883a 	mov	r6,r7
   49c84:	1009883a 	mov	r4,r2
   49c88:	dfc00215 	stw	ra,8(sp)
   49c8c:	80000015 	stw	zero,0(r16)
   49c90:	004d44c0 	call	4d44c <lseek>
   49c94:	00ffffc4 	movi	r3,-1
   49c98:	10c00526 	beq	r2,r3,49cb0 <_lseek_r+0x50>
   49c9c:	dfc00217 	ldw	ra,8(sp)
   49ca0:	dc400117 	ldw	r17,4(sp)
   49ca4:	dc000017 	ldw	r16,0(sp)
   49ca8:	dec00304 	addi	sp,sp,12
   49cac:	f800283a 	ret
   49cb0:	80c00017 	ldw	r3,0(r16)
   49cb4:	183ff926 	beq	r3,zero,49c9c <__alt_data_end+0xfffe2b9c>
   49cb8:	88c00015 	stw	r3,0(r17)
   49cbc:	003ff706 	br	49c9c <__alt_data_end+0xfffe2b9c>

00049cc0 <_read_r>:
   49cc0:	defffd04 	addi	sp,sp,-12
   49cc4:	2805883a 	mov	r2,r5
   49cc8:	dc000015 	stw	r16,0(sp)
   49ccc:	04000174 	movhi	r16,5
   49cd0:	dc400115 	stw	r17,4(sp)
   49cd4:	300b883a 	mov	r5,r6
   49cd8:	840ca304 	addi	r16,r16,12940
   49cdc:	2023883a 	mov	r17,r4
   49ce0:	380d883a 	mov	r6,r7
   49ce4:	1009883a 	mov	r4,r2
   49ce8:	dfc00215 	stw	ra,8(sp)
   49cec:	80000015 	stw	zero,0(r16)
   49cf0:	004d6200 	call	4d620 <read>
   49cf4:	00ffffc4 	movi	r3,-1
   49cf8:	10c00526 	beq	r2,r3,49d10 <_read_r+0x50>
   49cfc:	dfc00217 	ldw	ra,8(sp)
   49d00:	dc400117 	ldw	r17,4(sp)
   49d04:	dc000017 	ldw	r16,0(sp)
   49d08:	dec00304 	addi	sp,sp,12
   49d0c:	f800283a 	ret
   49d10:	80c00017 	ldw	r3,0(r16)
   49d14:	183ff926 	beq	r3,zero,49cfc <__alt_data_end+0xfffe2bfc>
   49d18:	88c00015 	stw	r3,0(r17)
   49d1c:	003ff706 	br	49cfc <__alt_data_end+0xfffe2bfc>

00049d20 <_wcrtomb_r>:
   49d20:	defff604 	addi	sp,sp,-40
   49d24:	00800174 	movhi	r2,5
   49d28:	dc800815 	stw	r18,32(sp)
   49d2c:	dc400715 	stw	r17,28(sp)
   49d30:	dc000615 	stw	r16,24(sp)
   49d34:	1085d704 	addi	r2,r2,5980
   49d38:	dfc00915 	stw	ra,36(sp)
   49d3c:	2021883a 	mov	r16,r4
   49d40:	3823883a 	mov	r17,r7
   49d44:	14800017 	ldw	r18,0(r2)
   49d48:	28001426 	beq	r5,zero,49d9c <_wcrtomb_r+0x7c>
   49d4c:	d9400415 	stw	r5,16(sp)
   49d50:	d9800515 	stw	r6,20(sp)
   49d54:	004570c0 	call	4570c <__locale_charset>
   49d58:	d9800517 	ldw	r6,20(sp)
   49d5c:	d9400417 	ldw	r5,16(sp)
   49d60:	100f883a 	mov	r7,r2
   49d64:	dc400015 	stw	r17,0(sp)
   49d68:	8009883a 	mov	r4,r16
   49d6c:	903ee83a 	callr	r18
   49d70:	00ffffc4 	movi	r3,-1
   49d74:	10c0031e 	bne	r2,r3,49d84 <_wcrtomb_r+0x64>
   49d78:	88000015 	stw	zero,0(r17)
   49d7c:	00c02284 	movi	r3,138
   49d80:	80c00015 	stw	r3,0(r16)
   49d84:	dfc00917 	ldw	ra,36(sp)
   49d88:	dc800817 	ldw	r18,32(sp)
   49d8c:	dc400717 	ldw	r17,28(sp)
   49d90:	dc000617 	ldw	r16,24(sp)
   49d94:	dec00a04 	addi	sp,sp,40
   49d98:	f800283a 	ret
   49d9c:	004570c0 	call	4570c <__locale_charset>
   49da0:	100f883a 	mov	r7,r2
   49da4:	dc400015 	stw	r17,0(sp)
   49da8:	000d883a 	mov	r6,zero
   49dac:	d9400104 	addi	r5,sp,4
   49db0:	8009883a 	mov	r4,r16
   49db4:	903ee83a 	callr	r18
   49db8:	003fed06 	br	49d70 <__alt_data_end+0xfffe2c70>

00049dbc <wcrtomb>:
   49dbc:	defff604 	addi	sp,sp,-40
   49dc0:	00800174 	movhi	r2,5
   49dc4:	dc800615 	stw	r18,24(sp)
   49dc8:	dc400515 	stw	r17,20(sp)
   49dcc:	1085d304 	addi	r2,r2,5964
   49dd0:	dfc00915 	stw	ra,36(sp)
   49dd4:	dd000815 	stw	r20,32(sp)
   49dd8:	dcc00715 	stw	r19,28(sp)
   49ddc:	dc000415 	stw	r16,16(sp)
   49de0:	3025883a 	mov	r18,r6
   49de4:	14400017 	ldw	r17,0(r2)
   49de8:	20001926 	beq	r4,zero,49e50 <wcrtomb+0x94>
   49dec:	00800174 	movhi	r2,5
   49df0:	1085d704 	addi	r2,r2,5980
   49df4:	15000017 	ldw	r20,0(r2)
   49df8:	2021883a 	mov	r16,r4
   49dfc:	2827883a 	mov	r19,r5
   49e00:	004570c0 	call	4570c <__locale_charset>
   49e04:	100f883a 	mov	r7,r2
   49e08:	dc800015 	stw	r18,0(sp)
   49e0c:	980d883a 	mov	r6,r19
   49e10:	800b883a 	mov	r5,r16
   49e14:	8809883a 	mov	r4,r17
   49e18:	a03ee83a 	callr	r20
   49e1c:	00ffffc4 	movi	r3,-1
   49e20:	10c0031e 	bne	r2,r3,49e30 <wcrtomb+0x74>
   49e24:	90000015 	stw	zero,0(r18)
   49e28:	00c02284 	movi	r3,138
   49e2c:	88c00015 	stw	r3,0(r17)
   49e30:	dfc00917 	ldw	ra,36(sp)
   49e34:	dd000817 	ldw	r20,32(sp)
   49e38:	dcc00717 	ldw	r19,28(sp)
   49e3c:	dc800617 	ldw	r18,24(sp)
   49e40:	dc400517 	ldw	r17,20(sp)
   49e44:	dc000417 	ldw	r16,16(sp)
   49e48:	dec00a04 	addi	sp,sp,40
   49e4c:	f800283a 	ret
   49e50:	00800174 	movhi	r2,5
   49e54:	1085d704 	addi	r2,r2,5980
   49e58:	14000017 	ldw	r16,0(r2)
   49e5c:	004570c0 	call	4570c <__locale_charset>
   49e60:	100f883a 	mov	r7,r2
   49e64:	dc800015 	stw	r18,0(sp)
   49e68:	000d883a 	mov	r6,zero
   49e6c:	d9400104 	addi	r5,sp,4
   49e70:	8809883a 	mov	r4,r17
   49e74:	803ee83a 	callr	r16
   49e78:	003fe806 	br	49e1c <__alt_data_end+0xfffe2d1c>

00049e7c <__ascii_wctomb>:
   49e7c:	28000526 	beq	r5,zero,49e94 <__ascii_wctomb+0x18>
   49e80:	00803fc4 	movi	r2,255
   49e84:	11800536 	bltu	r2,r6,49e9c <__ascii_wctomb+0x20>
   49e88:	29800005 	stb	r6,0(r5)
   49e8c:	00800044 	movi	r2,1
   49e90:	f800283a 	ret
   49e94:	0005883a 	mov	r2,zero
   49e98:	f800283a 	ret
   49e9c:	00802284 	movi	r2,138
   49ea0:	20800015 	stw	r2,0(r4)
   49ea4:	00bfffc4 	movi	r2,-1
   49ea8:	f800283a 	ret

00049eac <_wctomb_r>:
   49eac:	00800174 	movhi	r2,5
   49eb0:	defff904 	addi	sp,sp,-28
   49eb4:	1085d704 	addi	r2,r2,5980
   49eb8:	dfc00615 	stw	ra,24(sp)
   49ebc:	dc400515 	stw	r17,20(sp)
   49ec0:	dc000415 	stw	r16,16(sp)
   49ec4:	3823883a 	mov	r17,r7
   49ec8:	14000017 	ldw	r16,0(r2)
   49ecc:	d9000115 	stw	r4,4(sp)
   49ed0:	d9400215 	stw	r5,8(sp)
   49ed4:	d9800315 	stw	r6,12(sp)
   49ed8:	004570c0 	call	4570c <__locale_charset>
   49edc:	d9800317 	ldw	r6,12(sp)
   49ee0:	d9400217 	ldw	r5,8(sp)
   49ee4:	d9000117 	ldw	r4,4(sp)
   49ee8:	100f883a 	mov	r7,r2
   49eec:	dc400015 	stw	r17,0(sp)
   49ef0:	803ee83a 	callr	r16
   49ef4:	dfc00617 	ldw	ra,24(sp)
   49ef8:	dc400517 	ldw	r17,20(sp)
   49efc:	dc000417 	ldw	r16,16(sp)
   49f00:	dec00704 	addi	sp,sp,28
   49f04:	f800283a 	ret

00049f08 <__udivdi3>:
   49f08:	defff504 	addi	sp,sp,-44
   49f0c:	dcc00415 	stw	r19,16(sp)
   49f10:	dc000115 	stw	r16,4(sp)
   49f14:	dfc00a15 	stw	ra,40(sp)
   49f18:	df000915 	stw	fp,36(sp)
   49f1c:	ddc00815 	stw	r23,32(sp)
   49f20:	dd800715 	stw	r22,28(sp)
   49f24:	dd400615 	stw	r21,24(sp)
   49f28:	dd000515 	stw	r20,20(sp)
   49f2c:	dc800315 	stw	r18,12(sp)
   49f30:	dc400215 	stw	r17,8(sp)
   49f34:	2027883a 	mov	r19,r4
   49f38:	2821883a 	mov	r16,r5
   49f3c:	3800411e 	bne	r7,zero,4a044 <__udivdi3+0x13c>
   49f40:	3023883a 	mov	r17,r6
   49f44:	2025883a 	mov	r18,r4
   49f48:	2980522e 	bgeu	r5,r6,4a094 <__udivdi3+0x18c>
   49f4c:	00bfffd4 	movui	r2,65535
   49f50:	282d883a 	mov	r22,r5
   49f54:	1180a836 	bltu	r2,r6,4a1f8 <__udivdi3+0x2f0>
   49f58:	00803fc4 	movi	r2,255
   49f5c:	1185803a 	cmpltu	r2,r2,r6
   49f60:	100490fa 	slli	r2,r2,3
   49f64:	3086d83a 	srl	r3,r6,r2
   49f68:	01000174 	movhi	r4,5
   49f6c:	213edc04 	addi	r4,r4,-1168
   49f70:	20c7883a 	add	r3,r4,r3
   49f74:	18c00003 	ldbu	r3,0(r3)
   49f78:	1885883a 	add	r2,r3,r2
   49f7c:	00c00804 	movi	r3,32
   49f80:	1887c83a 	sub	r3,r3,r2
   49f84:	18000526 	beq	r3,zero,49f9c <__udivdi3+0x94>
   49f88:	80e0983a 	sll	r16,r16,r3
   49f8c:	9884d83a 	srl	r2,r19,r2
   49f90:	30e2983a 	sll	r17,r6,r3
   49f94:	98e4983a 	sll	r18,r19,r3
   49f98:	142cb03a 	or	r22,r2,r16
   49f9c:	882ad43a 	srli	r21,r17,16
   49fa0:	b009883a 	mov	r4,r22
   49fa4:	8d3fffcc 	andi	r20,r17,65535
   49fa8:	a80b883a 	mov	r5,r21
   49fac:	00406d40 	call	406d4 <__umodsi3>
   49fb0:	b009883a 	mov	r4,r22
   49fb4:	a80b883a 	mov	r5,r21
   49fb8:	1027883a 	mov	r19,r2
   49fbc:	00406700 	call	40670 <__udivsi3>
   49fc0:	102d883a 	mov	r22,r2
   49fc4:	9826943a 	slli	r19,r19,16
   49fc8:	9004d43a 	srli	r2,r18,16
   49fcc:	a5a1383a 	mul	r16,r20,r22
   49fd0:	14c4b03a 	or	r2,r2,r19
   49fd4:	1400052e 	bgeu	r2,r16,49fec <__udivdi3+0xe4>
   49fd8:	1445883a 	add	r2,r2,r17
   49fdc:	b0ffffc4 	addi	r3,r22,-1
   49fe0:	14400136 	bltu	r2,r17,49fe8 <__udivdi3+0xe0>
   49fe4:	14012336 	bltu	r2,r16,4a474 <__udivdi3+0x56c>
   49fe8:	182d883a 	mov	r22,r3
   49fec:	1421c83a 	sub	r16,r2,r16
   49ff0:	a80b883a 	mov	r5,r21
   49ff4:	8009883a 	mov	r4,r16
   49ff8:	00406d40 	call	406d4 <__umodsi3>
   49ffc:	1027883a 	mov	r19,r2
   4a000:	a80b883a 	mov	r5,r21
   4a004:	8009883a 	mov	r4,r16
   4a008:	00406700 	call	40670 <__udivsi3>
   4a00c:	9826943a 	slli	r19,r19,16
   4a010:	a0a9383a 	mul	r20,r20,r2
   4a014:	94bfffcc 	andi	r18,r18,65535
   4a018:	94e4b03a 	or	r18,r18,r19
   4a01c:	9500052e 	bgeu	r18,r20,4a034 <__udivdi3+0x12c>
   4a020:	8ca5883a 	add	r18,r17,r18
   4a024:	10ffffc4 	addi	r3,r2,-1
   4a028:	9440f136 	bltu	r18,r17,4a3f0 <__udivdi3+0x4e8>
   4a02c:	9500f02e 	bgeu	r18,r20,4a3f0 <__udivdi3+0x4e8>
   4a030:	10bfff84 	addi	r2,r2,-2
   4a034:	b00c943a 	slli	r6,r22,16
   4a038:	0007883a 	mov	r3,zero
   4a03c:	3084b03a 	or	r2,r6,r2
   4a040:	00005906 	br	4a1a8 <__udivdi3+0x2a0>
   4a044:	29c05636 	bltu	r5,r7,4a1a0 <__udivdi3+0x298>
   4a048:	00bfffd4 	movui	r2,65535
   4a04c:	11c0622e 	bgeu	r2,r7,4a1d8 <__udivdi3+0x2d0>
   4a050:	00804034 	movhi	r2,256
   4a054:	10bfffc4 	addi	r2,r2,-1
   4a058:	11c0ee36 	bltu	r2,r7,4a414 <__udivdi3+0x50c>
   4a05c:	00800404 	movi	r2,16
   4a060:	3886d83a 	srl	r3,r7,r2
   4a064:	01000174 	movhi	r4,5
   4a068:	213edc04 	addi	r4,r4,-1168
   4a06c:	20c7883a 	add	r3,r4,r3
   4a070:	18c00003 	ldbu	r3,0(r3)
   4a074:	05400804 	movi	r21,32
   4a078:	1885883a 	add	r2,r3,r2
   4a07c:	a8abc83a 	sub	r21,r21,r2
   4a080:	a800621e 	bne	r21,zero,4a20c <__udivdi3+0x304>
   4a084:	3c00e936 	bltu	r7,r16,4a42c <__udivdi3+0x524>
   4a088:	9985403a 	cmpgeu	r2,r19,r6
   4a08c:	0007883a 	mov	r3,zero
   4a090:	00004506 	br	4a1a8 <__udivdi3+0x2a0>
   4a094:	3000041e 	bne	r6,zero,4a0a8 <__udivdi3+0x1a0>
   4a098:	000b883a 	mov	r5,zero
   4a09c:	01000044 	movi	r4,1
   4a0a0:	00406700 	call	40670 <__udivsi3>
   4a0a4:	1023883a 	mov	r17,r2
   4a0a8:	00bfffd4 	movui	r2,65535
   4a0ac:	14404e2e 	bgeu	r2,r17,4a1e8 <__udivdi3+0x2e0>
   4a0b0:	00804034 	movhi	r2,256
   4a0b4:	10bfffc4 	addi	r2,r2,-1
   4a0b8:	1440d836 	bltu	r2,r17,4a41c <__udivdi3+0x514>
   4a0bc:	00800404 	movi	r2,16
   4a0c0:	8886d83a 	srl	r3,r17,r2
   4a0c4:	01000174 	movhi	r4,5
   4a0c8:	213edc04 	addi	r4,r4,-1168
   4a0cc:	20c7883a 	add	r3,r4,r3
   4a0d0:	18c00003 	ldbu	r3,0(r3)
   4a0d4:	1885883a 	add	r2,r3,r2
   4a0d8:	00c00804 	movi	r3,32
   4a0dc:	1887c83a 	sub	r3,r3,r2
   4a0e0:	18008f1e 	bne	r3,zero,4a320 <__udivdi3+0x418>
   4a0e4:	882ad43a 	srli	r21,r17,16
   4a0e8:	8461c83a 	sub	r16,r16,r17
   4a0ec:	8d3fffcc 	andi	r20,r17,65535
   4a0f0:	00c00044 	movi	r3,1
   4a0f4:	8009883a 	mov	r4,r16
   4a0f8:	a80b883a 	mov	r5,r21
   4a0fc:	d8c00015 	stw	r3,0(sp)
   4a100:	00406d40 	call	406d4 <__umodsi3>
   4a104:	8009883a 	mov	r4,r16
   4a108:	a80b883a 	mov	r5,r21
   4a10c:	1027883a 	mov	r19,r2
   4a110:	00406700 	call	40670 <__udivsi3>
   4a114:	9826943a 	slli	r19,r19,16
   4a118:	9008d43a 	srli	r4,r18,16
   4a11c:	1521383a 	mul	r16,r2,r20
   4a120:	102d883a 	mov	r22,r2
   4a124:	24c8b03a 	or	r4,r4,r19
   4a128:	d8c00017 	ldw	r3,0(sp)
   4a12c:	2400052e 	bgeu	r4,r16,4a144 <__udivdi3+0x23c>
   4a130:	2449883a 	add	r4,r4,r17
   4a134:	b0bfffc4 	addi	r2,r22,-1
   4a138:	24400136 	bltu	r4,r17,4a140 <__udivdi3+0x238>
   4a13c:	2400ca36 	bltu	r4,r16,4a468 <__udivdi3+0x560>
   4a140:	102d883a 	mov	r22,r2
   4a144:	2421c83a 	sub	r16,r4,r16
   4a148:	a80b883a 	mov	r5,r21
   4a14c:	8009883a 	mov	r4,r16
   4a150:	d8c00015 	stw	r3,0(sp)
   4a154:	00406d40 	call	406d4 <__umodsi3>
   4a158:	1027883a 	mov	r19,r2
   4a15c:	a80b883a 	mov	r5,r21
   4a160:	8009883a 	mov	r4,r16
   4a164:	00406700 	call	40670 <__udivsi3>
   4a168:	9826943a 	slli	r19,r19,16
   4a16c:	1529383a 	mul	r20,r2,r20
   4a170:	94bfffcc 	andi	r18,r18,65535
   4a174:	94e4b03a 	or	r18,r18,r19
   4a178:	d8c00017 	ldw	r3,0(sp)
   4a17c:	9500052e 	bgeu	r18,r20,4a194 <__udivdi3+0x28c>
   4a180:	8ca5883a 	add	r18,r17,r18
   4a184:	113fffc4 	addi	r4,r2,-1
   4a188:	94409736 	bltu	r18,r17,4a3e8 <__udivdi3+0x4e0>
   4a18c:	9500962e 	bgeu	r18,r20,4a3e8 <__udivdi3+0x4e0>
   4a190:	10bfff84 	addi	r2,r2,-2
   4a194:	b00c943a 	slli	r6,r22,16
   4a198:	3084b03a 	or	r2,r6,r2
   4a19c:	00000206 	br	4a1a8 <__udivdi3+0x2a0>
   4a1a0:	0007883a 	mov	r3,zero
   4a1a4:	0005883a 	mov	r2,zero
   4a1a8:	dfc00a17 	ldw	ra,40(sp)
   4a1ac:	df000917 	ldw	fp,36(sp)
   4a1b0:	ddc00817 	ldw	r23,32(sp)
   4a1b4:	dd800717 	ldw	r22,28(sp)
   4a1b8:	dd400617 	ldw	r21,24(sp)
   4a1bc:	dd000517 	ldw	r20,20(sp)
   4a1c0:	dcc00417 	ldw	r19,16(sp)
   4a1c4:	dc800317 	ldw	r18,12(sp)
   4a1c8:	dc400217 	ldw	r17,8(sp)
   4a1cc:	dc000117 	ldw	r16,4(sp)
   4a1d0:	dec00b04 	addi	sp,sp,44
   4a1d4:	f800283a 	ret
   4a1d8:	00803fc4 	movi	r2,255
   4a1dc:	11c5803a 	cmpltu	r2,r2,r7
   4a1e0:	100490fa 	slli	r2,r2,3
   4a1e4:	003f9e06 	br	4a060 <__alt_data_end+0xfffe2f60>
   4a1e8:	00803fc4 	movi	r2,255
   4a1ec:	1445803a 	cmpltu	r2,r2,r17
   4a1f0:	100490fa 	slli	r2,r2,3
   4a1f4:	003fb206 	br	4a0c0 <__alt_data_end+0xfffe2fc0>
   4a1f8:	00804034 	movhi	r2,256
   4a1fc:	10bfffc4 	addi	r2,r2,-1
   4a200:	11808836 	bltu	r2,r6,4a424 <__udivdi3+0x51c>
   4a204:	00800404 	movi	r2,16
   4a208:	003f5606 	br	49f64 <__alt_data_end+0xfffe2e64>
   4a20c:	30aed83a 	srl	r23,r6,r2
   4a210:	3d4e983a 	sll	r7,r7,r21
   4a214:	80acd83a 	srl	r22,r16,r2
   4a218:	9884d83a 	srl	r2,r19,r2
   4a21c:	3deeb03a 	or	r23,r7,r23
   4a220:	b824d43a 	srli	r18,r23,16
   4a224:	8560983a 	sll	r16,r16,r21
   4a228:	b009883a 	mov	r4,r22
   4a22c:	900b883a 	mov	r5,r18
   4a230:	3568983a 	sll	r20,r6,r21
   4a234:	1420b03a 	or	r16,r2,r16
   4a238:	00406d40 	call	406d4 <__umodsi3>
   4a23c:	b009883a 	mov	r4,r22
   4a240:	900b883a 	mov	r5,r18
   4a244:	1023883a 	mov	r17,r2
   4a248:	00406700 	call	40670 <__udivsi3>
   4a24c:	8808943a 	slli	r4,r17,16
   4a250:	bf3fffcc 	andi	fp,r23,65535
   4a254:	8006d43a 	srli	r3,r16,16
   4a258:	e0a3383a 	mul	r17,fp,r2
   4a25c:	100d883a 	mov	r6,r2
   4a260:	1906b03a 	or	r3,r3,r4
   4a264:	1c40042e 	bgeu	r3,r17,4a278 <__udivdi3+0x370>
   4a268:	1dc7883a 	add	r3,r3,r23
   4a26c:	10bfffc4 	addi	r2,r2,-1
   4a270:	1dc0752e 	bgeu	r3,r23,4a448 <__udivdi3+0x540>
   4a274:	100d883a 	mov	r6,r2
   4a278:	1c63c83a 	sub	r17,r3,r17
   4a27c:	900b883a 	mov	r5,r18
   4a280:	8809883a 	mov	r4,r17
   4a284:	d9800015 	stw	r6,0(sp)
   4a288:	00406d40 	call	406d4 <__umodsi3>
   4a28c:	102d883a 	mov	r22,r2
   4a290:	8809883a 	mov	r4,r17
   4a294:	900b883a 	mov	r5,r18
   4a298:	00406700 	call	40670 <__udivsi3>
   4a29c:	b02c943a 	slli	r22,r22,16
   4a2a0:	e089383a 	mul	r4,fp,r2
   4a2a4:	843fffcc 	andi	r16,r16,65535
   4a2a8:	85a0b03a 	or	r16,r16,r22
   4a2ac:	d9800017 	ldw	r6,0(sp)
   4a2b0:	8100042e 	bgeu	r16,r4,4a2c4 <__udivdi3+0x3bc>
   4a2b4:	85e1883a 	add	r16,r16,r23
   4a2b8:	10ffffc4 	addi	r3,r2,-1
   4a2bc:	85c05e2e 	bgeu	r16,r23,4a438 <__udivdi3+0x530>
   4a2c0:	1805883a 	mov	r2,r3
   4a2c4:	300c943a 	slli	r6,r6,16
   4a2c8:	a17fffcc 	andi	r5,r20,65535
   4a2cc:	a028d43a 	srli	r20,r20,16
   4a2d0:	3084b03a 	or	r2,r6,r2
   4a2d4:	10ffffcc 	andi	r3,r2,65535
   4a2d8:	100cd43a 	srli	r6,r2,16
   4a2dc:	194f383a 	mul	r7,r3,r5
   4a2e0:	1d07383a 	mul	r3,r3,r20
   4a2e4:	314b383a 	mul	r5,r6,r5
   4a2e8:	3810d43a 	srli	r8,r7,16
   4a2ec:	8121c83a 	sub	r16,r16,r4
   4a2f0:	1947883a 	add	r3,r3,r5
   4a2f4:	40c7883a 	add	r3,r8,r3
   4a2f8:	350d383a 	mul	r6,r6,r20
   4a2fc:	1940022e 	bgeu	r3,r5,4a308 <__udivdi3+0x400>
   4a300:	01000074 	movhi	r4,1
   4a304:	310d883a 	add	r6,r6,r4
   4a308:	1828d43a 	srli	r20,r3,16
   4a30c:	a18d883a 	add	r6,r20,r6
   4a310:	81803e36 	bltu	r16,r6,4a40c <__udivdi3+0x504>
   4a314:	81803826 	beq	r16,r6,4a3f8 <__udivdi3+0x4f0>
   4a318:	0007883a 	mov	r3,zero
   4a31c:	003fa206 	br	4a1a8 <__alt_data_end+0xfffe30a8>
   4a320:	88e2983a 	sll	r17,r17,r3
   4a324:	80a8d83a 	srl	r20,r16,r2
   4a328:	80e0983a 	sll	r16,r16,r3
   4a32c:	882ad43a 	srli	r21,r17,16
   4a330:	9884d83a 	srl	r2,r19,r2
   4a334:	a009883a 	mov	r4,r20
   4a338:	a80b883a 	mov	r5,r21
   4a33c:	142eb03a 	or	r23,r2,r16
   4a340:	98e4983a 	sll	r18,r19,r3
   4a344:	00406d40 	call	406d4 <__umodsi3>
   4a348:	a009883a 	mov	r4,r20
   4a34c:	a80b883a 	mov	r5,r21
   4a350:	1021883a 	mov	r16,r2
   4a354:	00406700 	call	40670 <__udivsi3>
   4a358:	1039883a 	mov	fp,r2
   4a35c:	8d3fffcc 	andi	r20,r17,65535
   4a360:	8020943a 	slli	r16,r16,16
   4a364:	b804d43a 	srli	r2,r23,16
   4a368:	a72d383a 	mul	r22,r20,fp
   4a36c:	1404b03a 	or	r2,r2,r16
   4a370:	1580062e 	bgeu	r2,r22,4a38c <__udivdi3+0x484>
   4a374:	1445883a 	add	r2,r2,r17
   4a378:	e0ffffc4 	addi	r3,fp,-1
   4a37c:	14403836 	bltu	r2,r17,4a460 <__udivdi3+0x558>
   4a380:	1580372e 	bgeu	r2,r22,4a460 <__udivdi3+0x558>
   4a384:	e73fff84 	addi	fp,fp,-2
   4a388:	1445883a 	add	r2,r2,r17
   4a38c:	15adc83a 	sub	r22,r2,r22
   4a390:	a80b883a 	mov	r5,r21
   4a394:	b009883a 	mov	r4,r22
   4a398:	00406d40 	call	406d4 <__umodsi3>
   4a39c:	1027883a 	mov	r19,r2
   4a3a0:	b009883a 	mov	r4,r22
   4a3a4:	a80b883a 	mov	r5,r21
   4a3a8:	00406700 	call	40670 <__udivsi3>
   4a3ac:	9826943a 	slli	r19,r19,16
   4a3b0:	a0a1383a 	mul	r16,r20,r2
   4a3b4:	b93fffcc 	andi	r4,r23,65535
   4a3b8:	24c8b03a 	or	r4,r4,r19
   4a3bc:	2400062e 	bgeu	r4,r16,4a3d8 <__udivdi3+0x4d0>
   4a3c0:	2449883a 	add	r4,r4,r17
   4a3c4:	10ffffc4 	addi	r3,r2,-1
   4a3c8:	24402336 	bltu	r4,r17,4a458 <__udivdi3+0x550>
   4a3cc:	2400222e 	bgeu	r4,r16,4a458 <__udivdi3+0x550>
   4a3d0:	10bfff84 	addi	r2,r2,-2
   4a3d4:	2449883a 	add	r4,r4,r17
   4a3d8:	e038943a 	slli	fp,fp,16
   4a3dc:	2421c83a 	sub	r16,r4,r16
   4a3e0:	e086b03a 	or	r3,fp,r2
   4a3e4:	003f4306 	br	4a0f4 <__alt_data_end+0xfffe2ff4>
   4a3e8:	2005883a 	mov	r2,r4
   4a3ec:	003f6906 	br	4a194 <__alt_data_end+0xfffe3094>
   4a3f0:	1805883a 	mov	r2,r3
   4a3f4:	003f0f06 	br	4a034 <__alt_data_end+0xfffe2f34>
   4a3f8:	1806943a 	slli	r3,r3,16
   4a3fc:	9d66983a 	sll	r19,r19,r21
   4a400:	39ffffcc 	andi	r7,r7,65535
   4a404:	19c7883a 	add	r3,r3,r7
   4a408:	98ffc32e 	bgeu	r19,r3,4a318 <__alt_data_end+0xfffe3218>
   4a40c:	10bfffc4 	addi	r2,r2,-1
   4a410:	003fc106 	br	4a318 <__alt_data_end+0xfffe3218>
   4a414:	00800604 	movi	r2,24
   4a418:	003f1106 	br	4a060 <__alt_data_end+0xfffe2f60>
   4a41c:	00800604 	movi	r2,24
   4a420:	003f2706 	br	4a0c0 <__alt_data_end+0xfffe2fc0>
   4a424:	00800604 	movi	r2,24
   4a428:	003ece06 	br	49f64 <__alt_data_end+0xfffe2e64>
   4a42c:	0007883a 	mov	r3,zero
   4a430:	00800044 	movi	r2,1
   4a434:	003f5c06 	br	4a1a8 <__alt_data_end+0xfffe30a8>
   4a438:	813fa12e 	bgeu	r16,r4,4a2c0 <__alt_data_end+0xfffe31c0>
   4a43c:	10bfff84 	addi	r2,r2,-2
   4a440:	85e1883a 	add	r16,r16,r23
   4a444:	003f9f06 	br	4a2c4 <__alt_data_end+0xfffe31c4>
   4a448:	1c7f8a2e 	bgeu	r3,r17,4a274 <__alt_data_end+0xfffe3174>
   4a44c:	31bfff84 	addi	r6,r6,-2
   4a450:	1dc7883a 	add	r3,r3,r23
   4a454:	003f8806 	br	4a278 <__alt_data_end+0xfffe3178>
   4a458:	1805883a 	mov	r2,r3
   4a45c:	003fde06 	br	4a3d8 <__alt_data_end+0xfffe32d8>
   4a460:	1839883a 	mov	fp,r3
   4a464:	003fc906 	br	4a38c <__alt_data_end+0xfffe328c>
   4a468:	b5bfff84 	addi	r22,r22,-2
   4a46c:	2449883a 	add	r4,r4,r17
   4a470:	003f3406 	br	4a144 <__alt_data_end+0xfffe3044>
   4a474:	b5bfff84 	addi	r22,r22,-2
   4a478:	1445883a 	add	r2,r2,r17
   4a47c:	003edb06 	br	49fec <__alt_data_end+0xfffe2eec>

0004a480 <__umoddi3>:
   4a480:	defff404 	addi	sp,sp,-48
   4a484:	df000a15 	stw	fp,40(sp)
   4a488:	dc400315 	stw	r17,12(sp)
   4a48c:	dc000215 	stw	r16,8(sp)
   4a490:	dfc00b15 	stw	ra,44(sp)
   4a494:	ddc00915 	stw	r23,36(sp)
   4a498:	dd800815 	stw	r22,32(sp)
   4a49c:	dd400715 	stw	r21,28(sp)
   4a4a0:	dd000615 	stw	r20,24(sp)
   4a4a4:	dcc00515 	stw	r19,20(sp)
   4a4a8:	dc800415 	stw	r18,16(sp)
   4a4ac:	2021883a 	mov	r16,r4
   4a4b0:	2823883a 	mov	r17,r5
   4a4b4:	2839883a 	mov	fp,r5
   4a4b8:	38003c1e 	bne	r7,zero,4a5ac <__umoddi3+0x12c>
   4a4bc:	3027883a 	mov	r19,r6
   4a4c0:	2029883a 	mov	r20,r4
   4a4c4:	2980512e 	bgeu	r5,r6,4a60c <__umoddi3+0x18c>
   4a4c8:	00bfffd4 	movui	r2,65535
   4a4cc:	11809a36 	bltu	r2,r6,4a738 <__umoddi3+0x2b8>
   4a4d0:	01003fc4 	movi	r4,255
   4a4d4:	2189803a 	cmpltu	r4,r4,r6
   4a4d8:	200890fa 	slli	r4,r4,3
   4a4dc:	3104d83a 	srl	r2,r6,r4
   4a4e0:	00c00174 	movhi	r3,5
   4a4e4:	18fedc04 	addi	r3,r3,-1168
   4a4e8:	1885883a 	add	r2,r3,r2
   4a4ec:	10c00003 	ldbu	r3,0(r2)
   4a4f0:	00800804 	movi	r2,32
   4a4f4:	1909883a 	add	r4,r3,r4
   4a4f8:	1125c83a 	sub	r18,r2,r4
   4a4fc:	90000526 	beq	r18,zero,4a514 <__umoddi3+0x94>
   4a500:	8ca2983a 	sll	r17,r17,r18
   4a504:	8108d83a 	srl	r4,r16,r4
   4a508:	34a6983a 	sll	r19,r6,r18
   4a50c:	84a8983a 	sll	r20,r16,r18
   4a510:	2478b03a 	or	fp,r4,r17
   4a514:	982ed43a 	srli	r23,r19,16
   4a518:	e009883a 	mov	r4,fp
   4a51c:	9dbfffcc 	andi	r22,r19,65535
   4a520:	b80b883a 	mov	r5,r23
   4a524:	00406d40 	call	406d4 <__umodsi3>
   4a528:	e009883a 	mov	r4,fp
   4a52c:	b80b883a 	mov	r5,r23
   4a530:	102b883a 	mov	r21,r2
   4a534:	00406700 	call	40670 <__udivsi3>
   4a538:	a806943a 	slli	r3,r21,16
   4a53c:	a008d43a 	srli	r4,r20,16
   4a540:	b085383a 	mul	r2,r22,r2
   4a544:	20c8b03a 	or	r4,r4,r3
   4a548:	2080032e 	bgeu	r4,r2,4a558 <__umoddi3+0xd8>
   4a54c:	24c9883a 	add	r4,r4,r19
   4a550:	24c00136 	bltu	r4,r19,4a558 <__umoddi3+0xd8>
   4a554:	20811036 	bltu	r4,r2,4a998 <__umoddi3+0x518>
   4a558:	20abc83a 	sub	r21,r4,r2
   4a55c:	b80b883a 	mov	r5,r23
   4a560:	a809883a 	mov	r4,r21
   4a564:	00406d40 	call	406d4 <__umodsi3>
   4a568:	1023883a 	mov	r17,r2
   4a56c:	b80b883a 	mov	r5,r23
   4a570:	a809883a 	mov	r4,r21
   4a574:	00406700 	call	40670 <__udivsi3>
   4a578:	8822943a 	slli	r17,r17,16
   4a57c:	b085383a 	mul	r2,r22,r2
   4a580:	a0ffffcc 	andi	r3,r20,65535
   4a584:	1c46b03a 	or	r3,r3,r17
   4a588:	1880042e 	bgeu	r3,r2,4a59c <__umoddi3+0x11c>
   4a58c:	1cc7883a 	add	r3,r3,r19
   4a590:	1cc00236 	bltu	r3,r19,4a59c <__umoddi3+0x11c>
   4a594:	1880012e 	bgeu	r3,r2,4a59c <__umoddi3+0x11c>
   4a598:	1cc7883a 	add	r3,r3,r19
   4a59c:	1885c83a 	sub	r2,r3,r2
   4a5a0:	1484d83a 	srl	r2,r2,r18
   4a5a4:	0007883a 	mov	r3,zero
   4a5a8:	00004f06 	br	4a6e8 <__umoddi3+0x268>
   4a5ac:	29c04c36 	bltu	r5,r7,4a6e0 <__umoddi3+0x260>
   4a5b0:	00bfffd4 	movui	r2,65535
   4a5b4:	11c0582e 	bgeu	r2,r7,4a718 <__umoddi3+0x298>
   4a5b8:	00804034 	movhi	r2,256
   4a5bc:	10bfffc4 	addi	r2,r2,-1
   4a5c0:	11c0e736 	bltu	r2,r7,4a960 <__umoddi3+0x4e0>
   4a5c4:	01000404 	movi	r4,16
   4a5c8:	3904d83a 	srl	r2,r7,r4
   4a5cc:	00c00174 	movhi	r3,5
   4a5d0:	18fedc04 	addi	r3,r3,-1168
   4a5d4:	1885883a 	add	r2,r3,r2
   4a5d8:	14c00003 	ldbu	r19,0(r2)
   4a5dc:	00c00804 	movi	r3,32
   4a5e0:	9927883a 	add	r19,r19,r4
   4a5e4:	1ce9c83a 	sub	r20,r3,r19
   4a5e8:	a000581e 	bne	r20,zero,4a74c <__umoddi3+0x2cc>
   4a5ec:	3c400136 	bltu	r7,r17,4a5f4 <__umoddi3+0x174>
   4a5f0:	8180eb36 	bltu	r16,r6,4a9a0 <__umoddi3+0x520>
   4a5f4:	8185c83a 	sub	r2,r16,r6
   4a5f8:	89e3c83a 	sub	r17,r17,r7
   4a5fc:	8089803a 	cmpltu	r4,r16,r2
   4a600:	8939c83a 	sub	fp,r17,r4
   4a604:	e007883a 	mov	r3,fp
   4a608:	00003706 	br	4a6e8 <__umoddi3+0x268>
   4a60c:	3000041e 	bne	r6,zero,4a620 <__umoddi3+0x1a0>
   4a610:	000b883a 	mov	r5,zero
   4a614:	01000044 	movi	r4,1
   4a618:	00406700 	call	40670 <__udivsi3>
   4a61c:	1027883a 	mov	r19,r2
   4a620:	00bfffd4 	movui	r2,65535
   4a624:	14c0402e 	bgeu	r2,r19,4a728 <__umoddi3+0x2a8>
   4a628:	00804034 	movhi	r2,256
   4a62c:	10bfffc4 	addi	r2,r2,-1
   4a630:	14c0cd36 	bltu	r2,r19,4a968 <__umoddi3+0x4e8>
   4a634:	00800404 	movi	r2,16
   4a638:	9886d83a 	srl	r3,r19,r2
   4a63c:	01000174 	movhi	r4,5
   4a640:	213edc04 	addi	r4,r4,-1168
   4a644:	20c7883a 	add	r3,r4,r3
   4a648:	18c00003 	ldbu	r3,0(r3)
   4a64c:	1887883a 	add	r3,r3,r2
   4a650:	00800804 	movi	r2,32
   4a654:	10e5c83a 	sub	r18,r2,r3
   4a658:	9000901e 	bne	r18,zero,4a89c <__umoddi3+0x41c>
   4a65c:	982cd43a 	srli	r22,r19,16
   4a660:	8ce3c83a 	sub	r17,r17,r19
   4a664:	9d7fffcc 	andi	r21,r19,65535
   4a668:	b00b883a 	mov	r5,r22
   4a66c:	8809883a 	mov	r4,r17
   4a670:	00406d40 	call	406d4 <__umodsi3>
   4a674:	8809883a 	mov	r4,r17
   4a678:	b00b883a 	mov	r5,r22
   4a67c:	1021883a 	mov	r16,r2
   4a680:	00406700 	call	40670 <__udivsi3>
   4a684:	8006943a 	slli	r3,r16,16
   4a688:	a008d43a 	srli	r4,r20,16
   4a68c:	1545383a 	mul	r2,r2,r21
   4a690:	20c8b03a 	or	r4,r4,r3
   4a694:	2080042e 	bgeu	r4,r2,4a6a8 <__umoddi3+0x228>
   4a698:	24c9883a 	add	r4,r4,r19
   4a69c:	24c00236 	bltu	r4,r19,4a6a8 <__umoddi3+0x228>
   4a6a0:	2080012e 	bgeu	r4,r2,4a6a8 <__umoddi3+0x228>
   4a6a4:	24c9883a 	add	r4,r4,r19
   4a6a8:	20a1c83a 	sub	r16,r4,r2
   4a6ac:	b00b883a 	mov	r5,r22
   4a6b0:	8009883a 	mov	r4,r16
   4a6b4:	00406d40 	call	406d4 <__umodsi3>
   4a6b8:	1023883a 	mov	r17,r2
   4a6bc:	b00b883a 	mov	r5,r22
   4a6c0:	8009883a 	mov	r4,r16
   4a6c4:	00406700 	call	40670 <__udivsi3>
   4a6c8:	8822943a 	slli	r17,r17,16
   4a6cc:	1545383a 	mul	r2,r2,r21
   4a6d0:	a53fffcc 	andi	r20,r20,65535
   4a6d4:	a446b03a 	or	r3,r20,r17
   4a6d8:	18bfb02e 	bgeu	r3,r2,4a59c <__alt_data_end+0xfffe349c>
   4a6dc:	003fab06 	br	4a58c <__alt_data_end+0xfffe348c>
   4a6e0:	2005883a 	mov	r2,r4
   4a6e4:	2807883a 	mov	r3,r5
   4a6e8:	dfc00b17 	ldw	ra,44(sp)
   4a6ec:	df000a17 	ldw	fp,40(sp)
   4a6f0:	ddc00917 	ldw	r23,36(sp)
   4a6f4:	dd800817 	ldw	r22,32(sp)
   4a6f8:	dd400717 	ldw	r21,28(sp)
   4a6fc:	dd000617 	ldw	r20,24(sp)
   4a700:	dcc00517 	ldw	r19,20(sp)
   4a704:	dc800417 	ldw	r18,16(sp)
   4a708:	dc400317 	ldw	r17,12(sp)
   4a70c:	dc000217 	ldw	r16,8(sp)
   4a710:	dec00c04 	addi	sp,sp,48
   4a714:	f800283a 	ret
   4a718:	04c03fc4 	movi	r19,255
   4a71c:	99c9803a 	cmpltu	r4,r19,r7
   4a720:	200890fa 	slli	r4,r4,3
   4a724:	003fa806 	br	4a5c8 <__alt_data_end+0xfffe34c8>
   4a728:	00803fc4 	movi	r2,255
   4a72c:	14c5803a 	cmpltu	r2,r2,r19
   4a730:	100490fa 	slli	r2,r2,3
   4a734:	003fc006 	br	4a638 <__alt_data_end+0xfffe3538>
   4a738:	00804034 	movhi	r2,256
   4a73c:	10bfffc4 	addi	r2,r2,-1
   4a740:	11808b36 	bltu	r2,r6,4a970 <__umoddi3+0x4f0>
   4a744:	01000404 	movi	r4,16
   4a748:	003f6406 	br	4a4dc <__alt_data_end+0xfffe33dc>
   4a74c:	34c4d83a 	srl	r2,r6,r19
   4a750:	3d0e983a 	sll	r7,r7,r20
   4a754:	8cf8d83a 	srl	fp,r17,r19
   4a758:	8d10983a 	sll	r8,r17,r20
   4a75c:	38aab03a 	or	r21,r7,r2
   4a760:	a82cd43a 	srli	r22,r21,16
   4a764:	84e2d83a 	srl	r17,r16,r19
   4a768:	e009883a 	mov	r4,fp
   4a76c:	b00b883a 	mov	r5,r22
   4a770:	8a22b03a 	or	r17,r17,r8
   4a774:	3524983a 	sll	r18,r6,r20
   4a778:	00406d40 	call	406d4 <__umodsi3>
   4a77c:	e009883a 	mov	r4,fp
   4a780:	b00b883a 	mov	r5,r22
   4a784:	102f883a 	mov	r23,r2
   4a788:	00406700 	call	40670 <__udivsi3>
   4a78c:	100d883a 	mov	r6,r2
   4a790:	b808943a 	slli	r4,r23,16
   4a794:	aa3fffcc 	andi	r8,r21,65535
   4a798:	8804d43a 	srli	r2,r17,16
   4a79c:	41af383a 	mul	r23,r8,r6
   4a7a0:	8520983a 	sll	r16,r16,r20
   4a7a4:	1104b03a 	or	r2,r2,r4
   4a7a8:	15c0042e 	bgeu	r2,r23,4a7bc <__umoddi3+0x33c>
   4a7ac:	1545883a 	add	r2,r2,r21
   4a7b0:	30ffffc4 	addi	r3,r6,-1
   4a7b4:	1540742e 	bgeu	r2,r21,4a988 <__umoddi3+0x508>
   4a7b8:	180d883a 	mov	r6,r3
   4a7bc:	15efc83a 	sub	r23,r2,r23
   4a7c0:	b00b883a 	mov	r5,r22
   4a7c4:	b809883a 	mov	r4,r23
   4a7c8:	d9800115 	stw	r6,4(sp)
   4a7cc:	da000015 	stw	r8,0(sp)
   4a7d0:	00406d40 	call	406d4 <__umodsi3>
   4a7d4:	b00b883a 	mov	r5,r22
   4a7d8:	b809883a 	mov	r4,r23
   4a7dc:	1039883a 	mov	fp,r2
   4a7e0:	00406700 	call	40670 <__udivsi3>
   4a7e4:	da000017 	ldw	r8,0(sp)
   4a7e8:	e038943a 	slli	fp,fp,16
   4a7ec:	100b883a 	mov	r5,r2
   4a7f0:	4089383a 	mul	r4,r8,r2
   4a7f4:	8a3fffcc 	andi	r8,r17,65535
   4a7f8:	4710b03a 	or	r8,r8,fp
   4a7fc:	d9800117 	ldw	r6,4(sp)
   4a800:	4100042e 	bgeu	r8,r4,4a814 <__umoddi3+0x394>
   4a804:	4551883a 	add	r8,r8,r21
   4a808:	10bfffc4 	addi	r2,r2,-1
   4a80c:	45405a2e 	bgeu	r8,r21,4a978 <__umoddi3+0x4f8>
   4a810:	100b883a 	mov	r5,r2
   4a814:	300c943a 	slli	r6,r6,16
   4a818:	91ffffcc 	andi	r7,r18,65535
   4a81c:	9004d43a 	srli	r2,r18,16
   4a820:	314cb03a 	or	r6,r6,r5
   4a824:	317fffcc 	andi	r5,r6,65535
   4a828:	300cd43a 	srli	r6,r6,16
   4a82c:	29d3383a 	mul	r9,r5,r7
   4a830:	288b383a 	mul	r5,r5,r2
   4a834:	31cf383a 	mul	r7,r6,r7
   4a838:	4806d43a 	srli	r3,r9,16
   4a83c:	4111c83a 	sub	r8,r8,r4
   4a840:	29cb883a 	add	r5,r5,r7
   4a844:	194b883a 	add	r5,r3,r5
   4a848:	3085383a 	mul	r2,r6,r2
   4a84c:	29c0022e 	bgeu	r5,r7,4a858 <__umoddi3+0x3d8>
   4a850:	00c00074 	movhi	r3,1
   4a854:	10c5883a 	add	r2,r2,r3
   4a858:	2808d43a 	srli	r4,r5,16
   4a85c:	280a943a 	slli	r5,r5,16
   4a860:	4a7fffcc 	andi	r9,r9,65535
   4a864:	2085883a 	add	r2,r4,r2
   4a868:	2a4b883a 	add	r5,r5,r9
   4a86c:	40803636 	bltu	r8,r2,4a948 <__umoddi3+0x4c8>
   4a870:	40804d26 	beq	r8,r2,4a9a8 <__umoddi3+0x528>
   4a874:	4089c83a 	sub	r4,r8,r2
   4a878:	280f883a 	mov	r7,r5
   4a87c:	81cfc83a 	sub	r7,r16,r7
   4a880:	81c7803a 	cmpltu	r3,r16,r7
   4a884:	20c7c83a 	sub	r3,r4,r3
   4a888:	1cc4983a 	sll	r2,r3,r19
   4a88c:	3d0ed83a 	srl	r7,r7,r20
   4a890:	1d06d83a 	srl	r3,r3,r20
   4a894:	11c4b03a 	or	r2,r2,r7
   4a898:	003f9306 	br	4a6e8 <__alt_data_end+0xfffe35e8>
   4a89c:	9ca6983a 	sll	r19,r19,r18
   4a8a0:	88e8d83a 	srl	r20,r17,r3
   4a8a4:	80c4d83a 	srl	r2,r16,r3
   4a8a8:	982cd43a 	srli	r22,r19,16
   4a8ac:	8ca2983a 	sll	r17,r17,r18
   4a8b0:	a009883a 	mov	r4,r20
   4a8b4:	b00b883a 	mov	r5,r22
   4a8b8:	1478b03a 	or	fp,r2,r17
   4a8bc:	00406d40 	call	406d4 <__umodsi3>
   4a8c0:	a009883a 	mov	r4,r20
   4a8c4:	b00b883a 	mov	r5,r22
   4a8c8:	1023883a 	mov	r17,r2
   4a8cc:	00406700 	call	40670 <__udivsi3>
   4a8d0:	9d7fffcc 	andi	r21,r19,65535
   4a8d4:	880a943a 	slli	r5,r17,16
   4a8d8:	e008d43a 	srli	r4,fp,16
   4a8dc:	a885383a 	mul	r2,r21,r2
   4a8e0:	84a8983a 	sll	r20,r16,r18
   4a8e4:	2148b03a 	or	r4,r4,r5
   4a8e8:	2080042e 	bgeu	r4,r2,4a8fc <__umoddi3+0x47c>
   4a8ec:	24c9883a 	add	r4,r4,r19
   4a8f0:	24c00236 	bltu	r4,r19,4a8fc <__umoddi3+0x47c>
   4a8f4:	2080012e 	bgeu	r4,r2,4a8fc <__umoddi3+0x47c>
   4a8f8:	24c9883a 	add	r4,r4,r19
   4a8fc:	20a3c83a 	sub	r17,r4,r2
   4a900:	b00b883a 	mov	r5,r22
   4a904:	8809883a 	mov	r4,r17
   4a908:	00406d40 	call	406d4 <__umodsi3>
   4a90c:	102f883a 	mov	r23,r2
   4a910:	8809883a 	mov	r4,r17
   4a914:	b00b883a 	mov	r5,r22
   4a918:	00406700 	call	40670 <__udivsi3>
   4a91c:	b82e943a 	slli	r23,r23,16
   4a920:	a885383a 	mul	r2,r21,r2
   4a924:	e13fffcc 	andi	r4,fp,65535
   4a928:	25c8b03a 	or	r4,r4,r23
   4a92c:	2080042e 	bgeu	r4,r2,4a940 <__umoddi3+0x4c0>
   4a930:	24c9883a 	add	r4,r4,r19
   4a934:	24c00236 	bltu	r4,r19,4a940 <__umoddi3+0x4c0>
   4a938:	2080012e 	bgeu	r4,r2,4a940 <__umoddi3+0x4c0>
   4a93c:	24c9883a 	add	r4,r4,r19
   4a940:	20a3c83a 	sub	r17,r4,r2
   4a944:	003f4806 	br	4a668 <__alt_data_end+0xfffe3568>
   4a948:	2c8fc83a 	sub	r7,r5,r18
   4a94c:	1545c83a 	sub	r2,r2,r21
   4a950:	29cb803a 	cmpltu	r5,r5,r7
   4a954:	1145c83a 	sub	r2,r2,r5
   4a958:	4089c83a 	sub	r4,r8,r2
   4a95c:	003fc706 	br	4a87c <__alt_data_end+0xfffe377c>
   4a960:	01000604 	movi	r4,24
   4a964:	003f1806 	br	4a5c8 <__alt_data_end+0xfffe34c8>
   4a968:	00800604 	movi	r2,24
   4a96c:	003f3206 	br	4a638 <__alt_data_end+0xfffe3538>
   4a970:	01000604 	movi	r4,24
   4a974:	003ed906 	br	4a4dc <__alt_data_end+0xfffe33dc>
   4a978:	413fa52e 	bgeu	r8,r4,4a810 <__alt_data_end+0xfffe3710>
   4a97c:	297fff84 	addi	r5,r5,-2
   4a980:	4551883a 	add	r8,r8,r21
   4a984:	003fa306 	br	4a814 <__alt_data_end+0xfffe3714>
   4a988:	15ff8b2e 	bgeu	r2,r23,4a7b8 <__alt_data_end+0xfffe36b8>
   4a98c:	31bfff84 	addi	r6,r6,-2
   4a990:	1545883a 	add	r2,r2,r21
   4a994:	003f8906 	br	4a7bc <__alt_data_end+0xfffe36bc>
   4a998:	24c9883a 	add	r4,r4,r19
   4a99c:	003eee06 	br	4a558 <__alt_data_end+0xfffe3458>
   4a9a0:	8005883a 	mov	r2,r16
   4a9a4:	003f1706 	br	4a604 <__alt_data_end+0xfffe3504>
   4a9a8:	817fe736 	bltu	r16,r5,4a948 <__alt_data_end+0xfffe3848>
   4a9ac:	280f883a 	mov	r7,r5
   4a9b0:	0009883a 	mov	r4,zero
   4a9b4:	003fb106 	br	4a87c <__alt_data_end+0xfffe377c>

0004a9b8 <__adddf3>:
   4a9b8:	02c00434 	movhi	r11,16
   4a9bc:	5affffc4 	addi	r11,r11,-1
   4a9c0:	2806d7fa 	srli	r3,r5,31
   4a9c4:	2ad4703a 	and	r10,r5,r11
   4a9c8:	3ad2703a 	and	r9,r7,r11
   4a9cc:	3804d53a 	srli	r2,r7,20
   4a9d0:	3018d77a 	srli	r12,r6,29
   4a9d4:	280ad53a 	srli	r5,r5,20
   4a9d8:	501490fa 	slli	r10,r10,3
   4a9dc:	2010d77a 	srli	r8,r4,29
   4a9e0:	481290fa 	slli	r9,r9,3
   4a9e4:	380ed7fa 	srli	r7,r7,31
   4a9e8:	defffb04 	addi	sp,sp,-20
   4a9ec:	dc800215 	stw	r18,8(sp)
   4a9f0:	dc400115 	stw	r17,4(sp)
   4a9f4:	dc000015 	stw	r16,0(sp)
   4a9f8:	dfc00415 	stw	ra,16(sp)
   4a9fc:	dcc00315 	stw	r19,12(sp)
   4aa00:	1c803fcc 	andi	r18,r3,255
   4aa04:	2c01ffcc 	andi	r16,r5,2047
   4aa08:	5210b03a 	or	r8,r10,r8
   4aa0c:	202290fa 	slli	r17,r4,3
   4aa10:	1081ffcc 	andi	r2,r2,2047
   4aa14:	4b12b03a 	or	r9,r9,r12
   4aa18:	300c90fa 	slli	r6,r6,3
   4aa1c:	91c07526 	beq	r18,r7,4abf4 <__adddf3+0x23c>
   4aa20:	8087c83a 	sub	r3,r16,r2
   4aa24:	00c0ab0e 	bge	zero,r3,4acd4 <__adddf3+0x31c>
   4aa28:	10002a1e 	bne	r2,zero,4aad4 <__adddf3+0x11c>
   4aa2c:	4984b03a 	or	r2,r9,r6
   4aa30:	1000961e 	bne	r2,zero,4ac8c <__adddf3+0x2d4>
   4aa34:	888001cc 	andi	r2,r17,7
   4aa38:	10000726 	beq	r2,zero,4aa58 <__adddf3+0xa0>
   4aa3c:	888003cc 	andi	r2,r17,15
   4aa40:	00c00104 	movi	r3,4
   4aa44:	10c00426 	beq	r2,r3,4aa58 <__adddf3+0xa0>
   4aa48:	88c7883a 	add	r3,r17,r3
   4aa4c:	1c63803a 	cmpltu	r17,r3,r17
   4aa50:	4451883a 	add	r8,r8,r17
   4aa54:	1823883a 	mov	r17,r3
   4aa58:	4080202c 	andhi	r2,r8,128
   4aa5c:	10005926 	beq	r2,zero,4abc4 <__adddf3+0x20c>
   4aa60:	84000044 	addi	r16,r16,1
   4aa64:	0081ffc4 	movi	r2,2047
   4aa68:	8080ba26 	beq	r16,r2,4ad54 <__adddf3+0x39c>
   4aa6c:	00bfe034 	movhi	r2,65408
   4aa70:	10bfffc4 	addi	r2,r2,-1
   4aa74:	4090703a 	and	r8,r8,r2
   4aa78:	4004977a 	slli	r2,r8,29
   4aa7c:	4010927a 	slli	r8,r8,9
   4aa80:	8822d0fa 	srli	r17,r17,3
   4aa84:	8401ffcc 	andi	r16,r16,2047
   4aa88:	4010d33a 	srli	r8,r8,12
   4aa8c:	9007883a 	mov	r3,r18
   4aa90:	1444b03a 	or	r2,r2,r17
   4aa94:	8401ffcc 	andi	r16,r16,2047
   4aa98:	8020953a 	slli	r16,r16,20
   4aa9c:	18c03fcc 	andi	r3,r3,255
   4aaa0:	01000434 	movhi	r4,16
   4aaa4:	213fffc4 	addi	r4,r4,-1
   4aaa8:	180697fa 	slli	r3,r3,31
   4aaac:	4110703a 	and	r8,r8,r4
   4aab0:	4410b03a 	or	r8,r8,r16
   4aab4:	40c6b03a 	or	r3,r8,r3
   4aab8:	dfc00417 	ldw	ra,16(sp)
   4aabc:	dcc00317 	ldw	r19,12(sp)
   4aac0:	dc800217 	ldw	r18,8(sp)
   4aac4:	dc400117 	ldw	r17,4(sp)
   4aac8:	dc000017 	ldw	r16,0(sp)
   4aacc:	dec00504 	addi	sp,sp,20
   4aad0:	f800283a 	ret
   4aad4:	0081ffc4 	movi	r2,2047
   4aad8:	80bfd626 	beq	r16,r2,4aa34 <__alt_data_end+0xfffe3934>
   4aadc:	4a402034 	orhi	r9,r9,128
   4aae0:	00800e04 	movi	r2,56
   4aae4:	10c09f16 	blt	r2,r3,4ad64 <__adddf3+0x3ac>
   4aae8:	008007c4 	movi	r2,31
   4aaec:	10c0c216 	blt	r2,r3,4adf8 <__adddf3+0x440>
   4aaf0:	00800804 	movi	r2,32
   4aaf4:	10c5c83a 	sub	r2,r2,r3
   4aaf8:	488a983a 	sll	r5,r9,r2
   4aafc:	30c8d83a 	srl	r4,r6,r3
   4ab00:	3084983a 	sll	r2,r6,r2
   4ab04:	48c6d83a 	srl	r3,r9,r3
   4ab08:	290cb03a 	or	r6,r5,r4
   4ab0c:	1004c03a 	cmpne	r2,r2,zero
   4ab10:	308cb03a 	or	r6,r6,r2
   4ab14:	898dc83a 	sub	r6,r17,r6
   4ab18:	89a3803a 	cmpltu	r17,r17,r6
   4ab1c:	40d1c83a 	sub	r8,r8,r3
   4ab20:	4451c83a 	sub	r8,r8,r17
   4ab24:	3023883a 	mov	r17,r6
   4ab28:	4080202c 	andhi	r2,r8,128
   4ab2c:	10002326 	beq	r2,zero,4abbc <__adddf3+0x204>
   4ab30:	04c02034 	movhi	r19,128
   4ab34:	9cffffc4 	addi	r19,r19,-1
   4ab38:	44e6703a 	and	r19,r8,r19
   4ab3c:	98007626 	beq	r19,zero,4ad18 <__adddf3+0x360>
   4ab40:	9809883a 	mov	r4,r19
   4ab44:	004cfbc0 	call	4cfbc <__clzsi2>
   4ab48:	10fffe04 	addi	r3,r2,-8
   4ab4c:	010007c4 	movi	r4,31
   4ab50:	20c07716 	blt	r4,r3,4ad30 <__adddf3+0x378>
   4ab54:	00800804 	movi	r2,32
   4ab58:	10c5c83a 	sub	r2,r2,r3
   4ab5c:	8884d83a 	srl	r2,r17,r2
   4ab60:	98d0983a 	sll	r8,r19,r3
   4ab64:	88e2983a 	sll	r17,r17,r3
   4ab68:	1204b03a 	or	r2,r2,r8
   4ab6c:	1c007416 	blt	r3,r16,4ad40 <__adddf3+0x388>
   4ab70:	1c21c83a 	sub	r16,r3,r16
   4ab74:	82000044 	addi	r8,r16,1
   4ab78:	00c007c4 	movi	r3,31
   4ab7c:	1a009116 	blt	r3,r8,4adc4 <__adddf3+0x40c>
   4ab80:	00c00804 	movi	r3,32
   4ab84:	1a07c83a 	sub	r3,r3,r8
   4ab88:	8a08d83a 	srl	r4,r17,r8
   4ab8c:	88e2983a 	sll	r17,r17,r3
   4ab90:	10c6983a 	sll	r3,r2,r3
   4ab94:	1210d83a 	srl	r8,r2,r8
   4ab98:	8804c03a 	cmpne	r2,r17,zero
   4ab9c:	1906b03a 	or	r3,r3,r4
   4aba0:	18a2b03a 	or	r17,r3,r2
   4aba4:	0021883a 	mov	r16,zero
   4aba8:	003fa206 	br	4aa34 <__alt_data_end+0xfffe3934>
   4abac:	1890b03a 	or	r8,r3,r2
   4abb0:	40017d26 	beq	r8,zero,4b1a8 <__adddf3+0x7f0>
   4abb4:	1011883a 	mov	r8,r2
   4abb8:	1823883a 	mov	r17,r3
   4abbc:	888001cc 	andi	r2,r17,7
   4abc0:	103f9e1e 	bne	r2,zero,4aa3c <__alt_data_end+0xfffe393c>
   4abc4:	4004977a 	slli	r2,r8,29
   4abc8:	8822d0fa 	srli	r17,r17,3
   4abcc:	4010d0fa 	srli	r8,r8,3
   4abd0:	9007883a 	mov	r3,r18
   4abd4:	1444b03a 	or	r2,r2,r17
   4abd8:	0101ffc4 	movi	r4,2047
   4abdc:	81002426 	beq	r16,r4,4ac70 <__adddf3+0x2b8>
   4abe0:	8120703a 	and	r16,r16,r4
   4abe4:	01000434 	movhi	r4,16
   4abe8:	213fffc4 	addi	r4,r4,-1
   4abec:	4110703a 	and	r8,r8,r4
   4abf0:	003fa806 	br	4aa94 <__alt_data_end+0xfffe3994>
   4abf4:	8089c83a 	sub	r4,r16,r2
   4abf8:	01005e0e 	bge	zero,r4,4ad74 <__adddf3+0x3bc>
   4abfc:	10002b26 	beq	r2,zero,4acac <__adddf3+0x2f4>
   4ac00:	0081ffc4 	movi	r2,2047
   4ac04:	80bf8b26 	beq	r16,r2,4aa34 <__alt_data_end+0xfffe3934>
   4ac08:	4a402034 	orhi	r9,r9,128
   4ac0c:	00800e04 	movi	r2,56
   4ac10:	1100a40e 	bge	r2,r4,4aea4 <__adddf3+0x4ec>
   4ac14:	498cb03a 	or	r6,r9,r6
   4ac18:	300ac03a 	cmpne	r5,r6,zero
   4ac1c:	0013883a 	mov	r9,zero
   4ac20:	2c4b883a 	add	r5,r5,r17
   4ac24:	2c63803a 	cmpltu	r17,r5,r17
   4ac28:	4a11883a 	add	r8,r9,r8
   4ac2c:	8a11883a 	add	r8,r17,r8
   4ac30:	2823883a 	mov	r17,r5
   4ac34:	4080202c 	andhi	r2,r8,128
   4ac38:	103fe026 	beq	r2,zero,4abbc <__alt_data_end+0xfffe3abc>
   4ac3c:	84000044 	addi	r16,r16,1
   4ac40:	0081ffc4 	movi	r2,2047
   4ac44:	8080d226 	beq	r16,r2,4af90 <__adddf3+0x5d8>
   4ac48:	00bfe034 	movhi	r2,65408
   4ac4c:	10bfffc4 	addi	r2,r2,-1
   4ac50:	4090703a 	and	r8,r8,r2
   4ac54:	880ad07a 	srli	r5,r17,1
   4ac58:	400897fa 	slli	r4,r8,31
   4ac5c:	88c0004c 	andi	r3,r17,1
   4ac60:	28e2b03a 	or	r17,r5,r3
   4ac64:	4010d07a 	srli	r8,r8,1
   4ac68:	2462b03a 	or	r17,r4,r17
   4ac6c:	003f7106 	br	4aa34 <__alt_data_end+0xfffe3934>
   4ac70:	4088b03a 	or	r4,r8,r2
   4ac74:	20014526 	beq	r4,zero,4b18c <__adddf3+0x7d4>
   4ac78:	01000434 	movhi	r4,16
   4ac7c:	42000234 	orhi	r8,r8,8
   4ac80:	213fffc4 	addi	r4,r4,-1
   4ac84:	4110703a 	and	r8,r8,r4
   4ac88:	003f8206 	br	4aa94 <__alt_data_end+0xfffe3994>
   4ac8c:	18ffffc4 	addi	r3,r3,-1
   4ac90:	1800491e 	bne	r3,zero,4adb8 <__adddf3+0x400>
   4ac94:	898bc83a 	sub	r5,r17,r6
   4ac98:	8963803a 	cmpltu	r17,r17,r5
   4ac9c:	4251c83a 	sub	r8,r8,r9
   4aca0:	4451c83a 	sub	r8,r8,r17
   4aca4:	2823883a 	mov	r17,r5
   4aca8:	003f9f06 	br	4ab28 <__alt_data_end+0xfffe3a28>
   4acac:	4984b03a 	or	r2,r9,r6
   4acb0:	103f6026 	beq	r2,zero,4aa34 <__alt_data_end+0xfffe3934>
   4acb4:	213fffc4 	addi	r4,r4,-1
   4acb8:	2000931e 	bne	r4,zero,4af08 <__adddf3+0x550>
   4acbc:	898d883a 	add	r6,r17,r6
   4acc0:	3463803a 	cmpltu	r17,r6,r17
   4acc4:	4251883a 	add	r8,r8,r9
   4acc8:	8a11883a 	add	r8,r17,r8
   4accc:	3023883a 	mov	r17,r6
   4acd0:	003fd806 	br	4ac34 <__alt_data_end+0xfffe3b34>
   4acd4:	1800541e 	bne	r3,zero,4ae28 <__adddf3+0x470>
   4acd8:	80800044 	addi	r2,r16,1
   4acdc:	1081ffcc 	andi	r2,r2,2047
   4ace0:	00c00044 	movi	r3,1
   4ace4:	1880a00e 	bge	r3,r2,4af68 <__adddf3+0x5b0>
   4ace8:	8989c83a 	sub	r4,r17,r6
   4acec:	8905803a 	cmpltu	r2,r17,r4
   4acf0:	4267c83a 	sub	r19,r8,r9
   4acf4:	98a7c83a 	sub	r19,r19,r2
   4acf8:	9880202c 	andhi	r2,r19,128
   4acfc:	10006326 	beq	r2,zero,4ae8c <__adddf3+0x4d4>
   4ad00:	3463c83a 	sub	r17,r6,r17
   4ad04:	4a07c83a 	sub	r3,r9,r8
   4ad08:	344d803a 	cmpltu	r6,r6,r17
   4ad0c:	19a7c83a 	sub	r19,r3,r6
   4ad10:	3825883a 	mov	r18,r7
   4ad14:	983f8a1e 	bne	r19,zero,4ab40 <__alt_data_end+0xfffe3a40>
   4ad18:	8809883a 	mov	r4,r17
   4ad1c:	004cfbc0 	call	4cfbc <__clzsi2>
   4ad20:	10800804 	addi	r2,r2,32
   4ad24:	10fffe04 	addi	r3,r2,-8
   4ad28:	010007c4 	movi	r4,31
   4ad2c:	20ff890e 	bge	r4,r3,4ab54 <__alt_data_end+0xfffe3a54>
   4ad30:	10bff604 	addi	r2,r2,-40
   4ad34:	8884983a 	sll	r2,r17,r2
   4ad38:	0023883a 	mov	r17,zero
   4ad3c:	1c3f8c0e 	bge	r3,r16,4ab70 <__alt_data_end+0xfffe3a70>
   4ad40:	023fe034 	movhi	r8,65408
   4ad44:	423fffc4 	addi	r8,r8,-1
   4ad48:	80e1c83a 	sub	r16,r16,r3
   4ad4c:	1210703a 	and	r8,r2,r8
   4ad50:	003f3806 	br	4aa34 <__alt_data_end+0xfffe3934>
   4ad54:	9007883a 	mov	r3,r18
   4ad58:	0011883a 	mov	r8,zero
   4ad5c:	0005883a 	mov	r2,zero
   4ad60:	003f4c06 	br	4aa94 <__alt_data_end+0xfffe3994>
   4ad64:	498cb03a 	or	r6,r9,r6
   4ad68:	300cc03a 	cmpne	r6,r6,zero
   4ad6c:	0007883a 	mov	r3,zero
   4ad70:	003f6806 	br	4ab14 <__alt_data_end+0xfffe3a14>
   4ad74:	20009c1e 	bne	r4,zero,4afe8 <__adddf3+0x630>
   4ad78:	80800044 	addi	r2,r16,1
   4ad7c:	1141ffcc 	andi	r5,r2,2047
   4ad80:	01000044 	movi	r4,1
   4ad84:	2140670e 	bge	r4,r5,4af24 <__adddf3+0x56c>
   4ad88:	0101ffc4 	movi	r4,2047
   4ad8c:	11007f26 	beq	r2,r4,4af8c <__adddf3+0x5d4>
   4ad90:	898d883a 	add	r6,r17,r6
   4ad94:	4247883a 	add	r3,r8,r9
   4ad98:	3451803a 	cmpltu	r8,r6,r17
   4ad9c:	40d1883a 	add	r8,r8,r3
   4ada0:	402297fa 	slli	r17,r8,31
   4ada4:	300cd07a 	srli	r6,r6,1
   4ada8:	4010d07a 	srli	r8,r8,1
   4adac:	1021883a 	mov	r16,r2
   4adb0:	89a2b03a 	or	r17,r17,r6
   4adb4:	003f1f06 	br	4aa34 <__alt_data_end+0xfffe3934>
   4adb8:	0081ffc4 	movi	r2,2047
   4adbc:	80bf481e 	bne	r16,r2,4aae0 <__alt_data_end+0xfffe39e0>
   4adc0:	003f1c06 	br	4aa34 <__alt_data_end+0xfffe3934>
   4adc4:	843ff844 	addi	r16,r16,-31
   4adc8:	01000804 	movi	r4,32
   4adcc:	1406d83a 	srl	r3,r2,r16
   4add0:	41005026 	beq	r8,r4,4af14 <__adddf3+0x55c>
   4add4:	01001004 	movi	r4,64
   4add8:	2211c83a 	sub	r8,r4,r8
   4addc:	1204983a 	sll	r2,r2,r8
   4ade0:	88a2b03a 	or	r17,r17,r2
   4ade4:	8822c03a 	cmpne	r17,r17,zero
   4ade8:	1c62b03a 	or	r17,r3,r17
   4adec:	0011883a 	mov	r8,zero
   4adf0:	0021883a 	mov	r16,zero
   4adf4:	003f7106 	br	4abbc <__alt_data_end+0xfffe3abc>
   4adf8:	193ff804 	addi	r4,r3,-32
   4adfc:	00800804 	movi	r2,32
   4ae00:	4908d83a 	srl	r4,r9,r4
   4ae04:	18804526 	beq	r3,r2,4af1c <__adddf3+0x564>
   4ae08:	00801004 	movi	r2,64
   4ae0c:	10c5c83a 	sub	r2,r2,r3
   4ae10:	4886983a 	sll	r3,r9,r2
   4ae14:	198cb03a 	or	r6,r3,r6
   4ae18:	300cc03a 	cmpne	r6,r6,zero
   4ae1c:	218cb03a 	or	r6,r4,r6
   4ae20:	0007883a 	mov	r3,zero
   4ae24:	003f3b06 	br	4ab14 <__alt_data_end+0xfffe3a14>
   4ae28:	80002a26 	beq	r16,zero,4aed4 <__adddf3+0x51c>
   4ae2c:	0101ffc4 	movi	r4,2047
   4ae30:	11006826 	beq	r2,r4,4afd4 <__adddf3+0x61c>
   4ae34:	00c7c83a 	sub	r3,zero,r3
   4ae38:	42002034 	orhi	r8,r8,128
   4ae3c:	01000e04 	movi	r4,56
   4ae40:	20c07c16 	blt	r4,r3,4b034 <__adddf3+0x67c>
   4ae44:	010007c4 	movi	r4,31
   4ae48:	20c0da16 	blt	r4,r3,4b1b4 <__adddf3+0x7fc>
   4ae4c:	01000804 	movi	r4,32
   4ae50:	20c9c83a 	sub	r4,r4,r3
   4ae54:	4114983a 	sll	r10,r8,r4
   4ae58:	88cad83a 	srl	r5,r17,r3
   4ae5c:	8908983a 	sll	r4,r17,r4
   4ae60:	40c6d83a 	srl	r3,r8,r3
   4ae64:	5162b03a 	or	r17,r10,r5
   4ae68:	2008c03a 	cmpne	r4,r4,zero
   4ae6c:	8922b03a 	or	r17,r17,r4
   4ae70:	3463c83a 	sub	r17,r6,r17
   4ae74:	48c7c83a 	sub	r3,r9,r3
   4ae78:	344d803a 	cmpltu	r6,r6,r17
   4ae7c:	1991c83a 	sub	r8,r3,r6
   4ae80:	1021883a 	mov	r16,r2
   4ae84:	3825883a 	mov	r18,r7
   4ae88:	003f2706 	br	4ab28 <__alt_data_end+0xfffe3a28>
   4ae8c:	24d0b03a 	or	r8,r4,r19
   4ae90:	40001b1e 	bne	r8,zero,4af00 <__adddf3+0x548>
   4ae94:	0005883a 	mov	r2,zero
   4ae98:	0007883a 	mov	r3,zero
   4ae9c:	0021883a 	mov	r16,zero
   4aea0:	003f4d06 	br	4abd8 <__alt_data_end+0xfffe3ad8>
   4aea4:	008007c4 	movi	r2,31
   4aea8:	11003c16 	blt	r2,r4,4af9c <__adddf3+0x5e4>
   4aeac:	00800804 	movi	r2,32
   4aeb0:	1105c83a 	sub	r2,r2,r4
   4aeb4:	488e983a 	sll	r7,r9,r2
   4aeb8:	310ad83a 	srl	r5,r6,r4
   4aebc:	3084983a 	sll	r2,r6,r2
   4aec0:	4912d83a 	srl	r9,r9,r4
   4aec4:	394ab03a 	or	r5,r7,r5
   4aec8:	1004c03a 	cmpne	r2,r2,zero
   4aecc:	288ab03a 	or	r5,r5,r2
   4aed0:	003f5306 	br	4ac20 <__alt_data_end+0xfffe3b20>
   4aed4:	4448b03a 	or	r4,r8,r17
   4aed8:	20003e26 	beq	r4,zero,4afd4 <__adddf3+0x61c>
   4aedc:	00c6303a 	nor	r3,zero,r3
   4aee0:	18003a1e 	bne	r3,zero,4afcc <__adddf3+0x614>
   4aee4:	3463c83a 	sub	r17,r6,r17
   4aee8:	4a07c83a 	sub	r3,r9,r8
   4aeec:	344d803a 	cmpltu	r6,r6,r17
   4aef0:	1991c83a 	sub	r8,r3,r6
   4aef4:	1021883a 	mov	r16,r2
   4aef8:	3825883a 	mov	r18,r7
   4aefc:	003f0a06 	br	4ab28 <__alt_data_end+0xfffe3a28>
   4af00:	2023883a 	mov	r17,r4
   4af04:	003f0d06 	br	4ab3c <__alt_data_end+0xfffe3a3c>
   4af08:	0081ffc4 	movi	r2,2047
   4af0c:	80bf3f1e 	bne	r16,r2,4ac0c <__alt_data_end+0xfffe3b0c>
   4af10:	003ec806 	br	4aa34 <__alt_data_end+0xfffe3934>
   4af14:	0005883a 	mov	r2,zero
   4af18:	003fb106 	br	4ade0 <__alt_data_end+0xfffe3ce0>
   4af1c:	0007883a 	mov	r3,zero
   4af20:	003fbc06 	br	4ae14 <__alt_data_end+0xfffe3d14>
   4af24:	4444b03a 	or	r2,r8,r17
   4af28:	8000871e 	bne	r16,zero,4b148 <__adddf3+0x790>
   4af2c:	1000ba26 	beq	r2,zero,4b218 <__adddf3+0x860>
   4af30:	4984b03a 	or	r2,r9,r6
   4af34:	103ebf26 	beq	r2,zero,4aa34 <__alt_data_end+0xfffe3934>
   4af38:	8985883a 	add	r2,r17,r6
   4af3c:	4247883a 	add	r3,r8,r9
   4af40:	1451803a 	cmpltu	r8,r2,r17
   4af44:	40d1883a 	add	r8,r8,r3
   4af48:	40c0202c 	andhi	r3,r8,128
   4af4c:	1023883a 	mov	r17,r2
   4af50:	183f1a26 	beq	r3,zero,4abbc <__alt_data_end+0xfffe3abc>
   4af54:	00bfe034 	movhi	r2,65408
   4af58:	10bfffc4 	addi	r2,r2,-1
   4af5c:	2021883a 	mov	r16,r4
   4af60:	4090703a 	and	r8,r8,r2
   4af64:	003eb306 	br	4aa34 <__alt_data_end+0xfffe3934>
   4af68:	4444b03a 	or	r2,r8,r17
   4af6c:	8000291e 	bne	r16,zero,4b014 <__adddf3+0x65c>
   4af70:	10004b1e 	bne	r2,zero,4b0a0 <__adddf3+0x6e8>
   4af74:	4990b03a 	or	r8,r9,r6
   4af78:	40008b26 	beq	r8,zero,4b1a8 <__adddf3+0x7f0>
   4af7c:	4811883a 	mov	r8,r9
   4af80:	3023883a 	mov	r17,r6
   4af84:	3825883a 	mov	r18,r7
   4af88:	003eaa06 	br	4aa34 <__alt_data_end+0xfffe3934>
   4af8c:	1021883a 	mov	r16,r2
   4af90:	0011883a 	mov	r8,zero
   4af94:	0005883a 	mov	r2,zero
   4af98:	003f0f06 	br	4abd8 <__alt_data_end+0xfffe3ad8>
   4af9c:	217ff804 	addi	r5,r4,-32
   4afa0:	00800804 	movi	r2,32
   4afa4:	494ad83a 	srl	r5,r9,r5
   4afa8:	20807d26 	beq	r4,r2,4b1a0 <__adddf3+0x7e8>
   4afac:	00801004 	movi	r2,64
   4afb0:	1109c83a 	sub	r4,r2,r4
   4afb4:	4912983a 	sll	r9,r9,r4
   4afb8:	498cb03a 	or	r6,r9,r6
   4afbc:	300cc03a 	cmpne	r6,r6,zero
   4afc0:	298ab03a 	or	r5,r5,r6
   4afc4:	0013883a 	mov	r9,zero
   4afc8:	003f1506 	br	4ac20 <__alt_data_end+0xfffe3b20>
   4afcc:	0101ffc4 	movi	r4,2047
   4afd0:	113f9a1e 	bne	r2,r4,4ae3c <__alt_data_end+0xfffe3d3c>
   4afd4:	4811883a 	mov	r8,r9
   4afd8:	3023883a 	mov	r17,r6
   4afdc:	1021883a 	mov	r16,r2
   4afe0:	3825883a 	mov	r18,r7
   4afe4:	003e9306 	br	4aa34 <__alt_data_end+0xfffe3934>
   4afe8:	8000161e 	bne	r16,zero,4b044 <__adddf3+0x68c>
   4afec:	444ab03a 	or	r5,r8,r17
   4aff0:	28005126 	beq	r5,zero,4b138 <__adddf3+0x780>
   4aff4:	0108303a 	nor	r4,zero,r4
   4aff8:	20004d1e 	bne	r4,zero,4b130 <__adddf3+0x778>
   4affc:	89a3883a 	add	r17,r17,r6
   4b000:	4253883a 	add	r9,r8,r9
   4b004:	898d803a 	cmpltu	r6,r17,r6
   4b008:	3251883a 	add	r8,r6,r9
   4b00c:	1021883a 	mov	r16,r2
   4b010:	003f0806 	br	4ac34 <__alt_data_end+0xfffe3b34>
   4b014:	1000301e 	bne	r2,zero,4b0d8 <__adddf3+0x720>
   4b018:	4984b03a 	or	r2,r9,r6
   4b01c:	10007126 	beq	r2,zero,4b1e4 <__adddf3+0x82c>
   4b020:	4811883a 	mov	r8,r9
   4b024:	3023883a 	mov	r17,r6
   4b028:	3825883a 	mov	r18,r7
   4b02c:	0401ffc4 	movi	r16,2047
   4b030:	003e8006 	br	4aa34 <__alt_data_end+0xfffe3934>
   4b034:	4462b03a 	or	r17,r8,r17
   4b038:	8822c03a 	cmpne	r17,r17,zero
   4b03c:	0007883a 	mov	r3,zero
   4b040:	003f8b06 	br	4ae70 <__alt_data_end+0xfffe3d70>
   4b044:	0141ffc4 	movi	r5,2047
   4b048:	11403b26 	beq	r2,r5,4b138 <__adddf3+0x780>
   4b04c:	0109c83a 	sub	r4,zero,r4
   4b050:	42002034 	orhi	r8,r8,128
   4b054:	01400e04 	movi	r5,56
   4b058:	29006716 	blt	r5,r4,4b1f8 <__adddf3+0x840>
   4b05c:	014007c4 	movi	r5,31
   4b060:	29007016 	blt	r5,r4,4b224 <__adddf3+0x86c>
   4b064:	01400804 	movi	r5,32
   4b068:	290bc83a 	sub	r5,r5,r4
   4b06c:	4154983a 	sll	r10,r8,r5
   4b070:	890ed83a 	srl	r7,r17,r4
   4b074:	894a983a 	sll	r5,r17,r5
   4b078:	4108d83a 	srl	r4,r8,r4
   4b07c:	51e2b03a 	or	r17,r10,r7
   4b080:	280ac03a 	cmpne	r5,r5,zero
   4b084:	8962b03a 	or	r17,r17,r5
   4b088:	89a3883a 	add	r17,r17,r6
   4b08c:	2253883a 	add	r9,r4,r9
   4b090:	898d803a 	cmpltu	r6,r17,r6
   4b094:	3251883a 	add	r8,r6,r9
   4b098:	1021883a 	mov	r16,r2
   4b09c:	003ee506 	br	4ac34 <__alt_data_end+0xfffe3b34>
   4b0a0:	4984b03a 	or	r2,r9,r6
   4b0a4:	103e6326 	beq	r2,zero,4aa34 <__alt_data_end+0xfffe3934>
   4b0a8:	8987c83a 	sub	r3,r17,r6
   4b0ac:	88c9803a 	cmpltu	r4,r17,r3
   4b0b0:	4245c83a 	sub	r2,r8,r9
   4b0b4:	1105c83a 	sub	r2,r2,r4
   4b0b8:	1100202c 	andhi	r4,r2,128
   4b0bc:	203ebb26 	beq	r4,zero,4abac <__alt_data_end+0xfffe3aac>
   4b0c0:	3463c83a 	sub	r17,r6,r17
   4b0c4:	4a07c83a 	sub	r3,r9,r8
   4b0c8:	344d803a 	cmpltu	r6,r6,r17
   4b0cc:	1991c83a 	sub	r8,r3,r6
   4b0d0:	3825883a 	mov	r18,r7
   4b0d4:	003e5706 	br	4aa34 <__alt_data_end+0xfffe3934>
   4b0d8:	4984b03a 	or	r2,r9,r6
   4b0dc:	10002e26 	beq	r2,zero,4b198 <__adddf3+0x7e0>
   4b0e0:	4004d0fa 	srli	r2,r8,3
   4b0e4:	8822d0fa 	srli	r17,r17,3
   4b0e8:	4010977a 	slli	r8,r8,29
   4b0ec:	10c0022c 	andhi	r3,r2,8
   4b0f0:	4462b03a 	or	r17,r8,r17
   4b0f4:	18000826 	beq	r3,zero,4b118 <__adddf3+0x760>
   4b0f8:	4808d0fa 	srli	r4,r9,3
   4b0fc:	20c0022c 	andhi	r3,r4,8
   4b100:	1800051e 	bne	r3,zero,4b118 <__adddf3+0x760>
   4b104:	300cd0fa 	srli	r6,r6,3
   4b108:	4806977a 	slli	r3,r9,29
   4b10c:	2005883a 	mov	r2,r4
   4b110:	3825883a 	mov	r18,r7
   4b114:	19a2b03a 	or	r17,r3,r6
   4b118:	8810d77a 	srli	r8,r17,29
   4b11c:	100490fa 	slli	r2,r2,3
   4b120:	882290fa 	slli	r17,r17,3
   4b124:	0401ffc4 	movi	r16,2047
   4b128:	4090b03a 	or	r8,r8,r2
   4b12c:	003e4106 	br	4aa34 <__alt_data_end+0xfffe3934>
   4b130:	0141ffc4 	movi	r5,2047
   4b134:	117fc71e 	bne	r2,r5,4b054 <__alt_data_end+0xfffe3f54>
   4b138:	4811883a 	mov	r8,r9
   4b13c:	3023883a 	mov	r17,r6
   4b140:	1021883a 	mov	r16,r2
   4b144:	003e3b06 	br	4aa34 <__alt_data_end+0xfffe3934>
   4b148:	10002f26 	beq	r2,zero,4b208 <__adddf3+0x850>
   4b14c:	4984b03a 	or	r2,r9,r6
   4b150:	10001126 	beq	r2,zero,4b198 <__adddf3+0x7e0>
   4b154:	4004d0fa 	srli	r2,r8,3
   4b158:	8822d0fa 	srli	r17,r17,3
   4b15c:	4010977a 	slli	r8,r8,29
   4b160:	10c0022c 	andhi	r3,r2,8
   4b164:	4462b03a 	or	r17,r8,r17
   4b168:	183feb26 	beq	r3,zero,4b118 <__alt_data_end+0xfffe4018>
   4b16c:	4808d0fa 	srli	r4,r9,3
   4b170:	20c0022c 	andhi	r3,r4,8
   4b174:	183fe81e 	bne	r3,zero,4b118 <__alt_data_end+0xfffe4018>
   4b178:	300cd0fa 	srli	r6,r6,3
   4b17c:	4806977a 	slli	r3,r9,29
   4b180:	2005883a 	mov	r2,r4
   4b184:	19a2b03a 	or	r17,r3,r6
   4b188:	003fe306 	br	4b118 <__alt_data_end+0xfffe4018>
   4b18c:	0011883a 	mov	r8,zero
   4b190:	0005883a 	mov	r2,zero
   4b194:	003e3f06 	br	4aa94 <__alt_data_end+0xfffe3994>
   4b198:	0401ffc4 	movi	r16,2047
   4b19c:	003e2506 	br	4aa34 <__alt_data_end+0xfffe3934>
   4b1a0:	0013883a 	mov	r9,zero
   4b1a4:	003f8406 	br	4afb8 <__alt_data_end+0xfffe3eb8>
   4b1a8:	0005883a 	mov	r2,zero
   4b1ac:	0007883a 	mov	r3,zero
   4b1b0:	003e8906 	br	4abd8 <__alt_data_end+0xfffe3ad8>
   4b1b4:	197ff804 	addi	r5,r3,-32
   4b1b8:	01000804 	movi	r4,32
   4b1bc:	414ad83a 	srl	r5,r8,r5
   4b1c0:	19002426 	beq	r3,r4,4b254 <__adddf3+0x89c>
   4b1c4:	01001004 	movi	r4,64
   4b1c8:	20c7c83a 	sub	r3,r4,r3
   4b1cc:	40c6983a 	sll	r3,r8,r3
   4b1d0:	1c46b03a 	or	r3,r3,r17
   4b1d4:	1806c03a 	cmpne	r3,r3,zero
   4b1d8:	28e2b03a 	or	r17,r5,r3
   4b1dc:	0007883a 	mov	r3,zero
   4b1e0:	003f2306 	br	4ae70 <__alt_data_end+0xfffe3d70>
   4b1e4:	0007883a 	mov	r3,zero
   4b1e8:	5811883a 	mov	r8,r11
   4b1ec:	00bfffc4 	movi	r2,-1
   4b1f0:	0401ffc4 	movi	r16,2047
   4b1f4:	003e7806 	br	4abd8 <__alt_data_end+0xfffe3ad8>
   4b1f8:	4462b03a 	or	r17,r8,r17
   4b1fc:	8822c03a 	cmpne	r17,r17,zero
   4b200:	0009883a 	mov	r4,zero
   4b204:	003fa006 	br	4b088 <__alt_data_end+0xfffe3f88>
   4b208:	4811883a 	mov	r8,r9
   4b20c:	3023883a 	mov	r17,r6
   4b210:	0401ffc4 	movi	r16,2047
   4b214:	003e0706 	br	4aa34 <__alt_data_end+0xfffe3934>
   4b218:	4811883a 	mov	r8,r9
   4b21c:	3023883a 	mov	r17,r6
   4b220:	003e0406 	br	4aa34 <__alt_data_end+0xfffe3934>
   4b224:	21fff804 	addi	r7,r4,-32
   4b228:	01400804 	movi	r5,32
   4b22c:	41ced83a 	srl	r7,r8,r7
   4b230:	21400a26 	beq	r4,r5,4b25c <__adddf3+0x8a4>
   4b234:	01401004 	movi	r5,64
   4b238:	2909c83a 	sub	r4,r5,r4
   4b23c:	4108983a 	sll	r4,r8,r4
   4b240:	2448b03a 	or	r4,r4,r17
   4b244:	2008c03a 	cmpne	r4,r4,zero
   4b248:	3922b03a 	or	r17,r7,r4
   4b24c:	0009883a 	mov	r4,zero
   4b250:	003f8d06 	br	4b088 <__alt_data_end+0xfffe3f88>
   4b254:	0007883a 	mov	r3,zero
   4b258:	003fdd06 	br	4b1d0 <__alt_data_end+0xfffe40d0>
   4b25c:	0009883a 	mov	r4,zero
   4b260:	003ff706 	br	4b240 <__alt_data_end+0xfffe4140>

0004b264 <__divdf3>:
   4b264:	defff204 	addi	sp,sp,-56
   4b268:	dd400915 	stw	r21,36(sp)
   4b26c:	282ad53a 	srli	r21,r5,20
   4b270:	dd000815 	stw	r20,32(sp)
   4b274:	2828d7fa 	srli	r20,r5,31
   4b278:	dc000415 	stw	r16,16(sp)
   4b27c:	04000434 	movhi	r16,16
   4b280:	df000c15 	stw	fp,48(sp)
   4b284:	843fffc4 	addi	r16,r16,-1
   4b288:	dfc00d15 	stw	ra,52(sp)
   4b28c:	ddc00b15 	stw	r23,44(sp)
   4b290:	dd800a15 	stw	r22,40(sp)
   4b294:	dcc00715 	stw	r19,28(sp)
   4b298:	dc800615 	stw	r18,24(sp)
   4b29c:	dc400515 	stw	r17,20(sp)
   4b2a0:	ad41ffcc 	andi	r21,r21,2047
   4b2a4:	2c20703a 	and	r16,r5,r16
   4b2a8:	a7003fcc 	andi	fp,r20,255
   4b2ac:	a8006126 	beq	r21,zero,4b434 <__divdf3+0x1d0>
   4b2b0:	0081ffc4 	movi	r2,2047
   4b2b4:	2025883a 	mov	r18,r4
   4b2b8:	a8803726 	beq	r21,r2,4b398 <__divdf3+0x134>
   4b2bc:	80800434 	orhi	r2,r16,16
   4b2c0:	100490fa 	slli	r2,r2,3
   4b2c4:	2020d77a 	srli	r16,r4,29
   4b2c8:	202490fa 	slli	r18,r4,3
   4b2cc:	ad7f0044 	addi	r21,r21,-1023
   4b2d0:	80a0b03a 	or	r16,r16,r2
   4b2d4:	0027883a 	mov	r19,zero
   4b2d8:	0013883a 	mov	r9,zero
   4b2dc:	3804d53a 	srli	r2,r7,20
   4b2e0:	382cd7fa 	srli	r22,r7,31
   4b2e4:	04400434 	movhi	r17,16
   4b2e8:	8c7fffc4 	addi	r17,r17,-1
   4b2ec:	1081ffcc 	andi	r2,r2,2047
   4b2f0:	3011883a 	mov	r8,r6
   4b2f4:	3c62703a 	and	r17,r7,r17
   4b2f8:	b5c03fcc 	andi	r23,r22,255
   4b2fc:	10006c26 	beq	r2,zero,4b4b0 <__divdf3+0x24c>
   4b300:	00c1ffc4 	movi	r3,2047
   4b304:	10c06426 	beq	r2,r3,4b498 <__divdf3+0x234>
   4b308:	88c00434 	orhi	r3,r17,16
   4b30c:	180690fa 	slli	r3,r3,3
   4b310:	3022d77a 	srli	r17,r6,29
   4b314:	301090fa 	slli	r8,r6,3
   4b318:	10bf0044 	addi	r2,r2,-1023
   4b31c:	88e2b03a 	or	r17,r17,r3
   4b320:	000f883a 	mov	r7,zero
   4b324:	a58cf03a 	xor	r6,r20,r22
   4b328:	3cc8b03a 	or	r4,r7,r19
   4b32c:	a8abc83a 	sub	r21,r21,r2
   4b330:	008003c4 	movi	r2,15
   4b334:	3007883a 	mov	r3,r6
   4b338:	34c03fcc 	andi	r19,r6,255
   4b33c:	11009036 	bltu	r2,r4,4b580 <__divdf3+0x31c>
   4b340:	200890ba 	slli	r4,r4,2
   4b344:	00800174 	movhi	r2,5
   4b348:	10acd604 	addi	r2,r2,-19624
   4b34c:	2089883a 	add	r4,r4,r2
   4b350:	20800017 	ldw	r2,0(r4)
   4b354:	1000683a 	jmp	r2
   4b358:	0004b580 	call	4b58 <__alt_mem_onchip_memory2-0x3b4a8>
   4b35c:	0004b3d0 	cmplti	zero,zero,4815
   4b360:	0004b570 	cmpltui	zero,zero,4821
   4b364:	0004b3c4 	movi	zero,4815
   4b368:	0004b570 	cmpltui	zero,zero,4821
   4b36c:	0004b544 	movi	zero,4821
   4b370:	0004b570 	cmpltui	zero,zero,4821
   4b374:	0004b3c4 	movi	zero,4815
   4b378:	0004b3d0 	cmplti	zero,zero,4815
   4b37c:	0004b3d0 	cmplti	zero,zero,4815
   4b380:	0004b544 	movi	zero,4821
   4b384:	0004b3c4 	movi	zero,4815
   4b388:	0004b3b4 	movhi	zero,4814
   4b38c:	0004b3b4 	movhi	zero,4814
   4b390:	0004b3b4 	movhi	zero,4814
   4b394:	0004b864 	muli	zero,zero,4833
   4b398:	2404b03a 	or	r2,r4,r16
   4b39c:	1000661e 	bne	r2,zero,4b538 <__divdf3+0x2d4>
   4b3a0:	04c00204 	movi	r19,8
   4b3a4:	0021883a 	mov	r16,zero
   4b3a8:	0025883a 	mov	r18,zero
   4b3ac:	02400084 	movi	r9,2
   4b3b0:	003fca06 	br	4b2dc <__alt_data_end+0xfffe41dc>
   4b3b4:	8023883a 	mov	r17,r16
   4b3b8:	9011883a 	mov	r8,r18
   4b3bc:	e02f883a 	mov	r23,fp
   4b3c0:	480f883a 	mov	r7,r9
   4b3c4:	00800084 	movi	r2,2
   4b3c8:	3881311e 	bne	r7,r2,4b890 <__divdf3+0x62c>
   4b3cc:	b827883a 	mov	r19,r23
   4b3d0:	98c0004c 	andi	r3,r19,1
   4b3d4:	0081ffc4 	movi	r2,2047
   4b3d8:	000b883a 	mov	r5,zero
   4b3dc:	0025883a 	mov	r18,zero
   4b3e0:	1004953a 	slli	r2,r2,20
   4b3e4:	18c03fcc 	andi	r3,r3,255
   4b3e8:	04400434 	movhi	r17,16
   4b3ec:	8c7fffc4 	addi	r17,r17,-1
   4b3f0:	180697fa 	slli	r3,r3,31
   4b3f4:	2c4a703a 	and	r5,r5,r17
   4b3f8:	288ab03a 	or	r5,r5,r2
   4b3fc:	28c6b03a 	or	r3,r5,r3
   4b400:	9005883a 	mov	r2,r18
   4b404:	dfc00d17 	ldw	ra,52(sp)
   4b408:	df000c17 	ldw	fp,48(sp)
   4b40c:	ddc00b17 	ldw	r23,44(sp)
   4b410:	dd800a17 	ldw	r22,40(sp)
   4b414:	dd400917 	ldw	r21,36(sp)
   4b418:	dd000817 	ldw	r20,32(sp)
   4b41c:	dcc00717 	ldw	r19,28(sp)
   4b420:	dc800617 	ldw	r18,24(sp)
   4b424:	dc400517 	ldw	r17,20(sp)
   4b428:	dc000417 	ldw	r16,16(sp)
   4b42c:	dec00e04 	addi	sp,sp,56
   4b430:	f800283a 	ret
   4b434:	2404b03a 	or	r2,r4,r16
   4b438:	2027883a 	mov	r19,r4
   4b43c:	10003926 	beq	r2,zero,4b524 <__divdf3+0x2c0>
   4b440:	80012e26 	beq	r16,zero,4b8fc <__divdf3+0x698>
   4b444:	8009883a 	mov	r4,r16
   4b448:	d9800315 	stw	r6,12(sp)
   4b44c:	d9c00215 	stw	r7,8(sp)
   4b450:	004cfbc0 	call	4cfbc <__clzsi2>
   4b454:	d9800317 	ldw	r6,12(sp)
   4b458:	d9c00217 	ldw	r7,8(sp)
   4b45c:	113ffd44 	addi	r4,r2,-11
   4b460:	00c00704 	movi	r3,28
   4b464:	19012116 	blt	r3,r4,4b8ec <__divdf3+0x688>
   4b468:	00c00744 	movi	r3,29
   4b46c:	147ffe04 	addi	r17,r2,-8
   4b470:	1907c83a 	sub	r3,r3,r4
   4b474:	8460983a 	sll	r16,r16,r17
   4b478:	98c6d83a 	srl	r3,r19,r3
   4b47c:	9c64983a 	sll	r18,r19,r17
   4b480:	1c20b03a 	or	r16,r3,r16
   4b484:	1080fcc4 	addi	r2,r2,1011
   4b488:	00abc83a 	sub	r21,zero,r2
   4b48c:	0027883a 	mov	r19,zero
   4b490:	0013883a 	mov	r9,zero
   4b494:	003f9106 	br	4b2dc <__alt_data_end+0xfffe41dc>
   4b498:	3446b03a 	or	r3,r6,r17
   4b49c:	18001f1e 	bne	r3,zero,4b51c <__divdf3+0x2b8>
   4b4a0:	0023883a 	mov	r17,zero
   4b4a4:	0011883a 	mov	r8,zero
   4b4a8:	01c00084 	movi	r7,2
   4b4ac:	003f9d06 	br	4b324 <__alt_data_end+0xfffe4224>
   4b4b0:	3446b03a 	or	r3,r6,r17
   4b4b4:	18001526 	beq	r3,zero,4b50c <__divdf3+0x2a8>
   4b4b8:	88011b26 	beq	r17,zero,4b928 <__divdf3+0x6c4>
   4b4bc:	8809883a 	mov	r4,r17
   4b4c0:	d9800315 	stw	r6,12(sp)
   4b4c4:	da400115 	stw	r9,4(sp)
   4b4c8:	004cfbc0 	call	4cfbc <__clzsi2>
   4b4cc:	d9800317 	ldw	r6,12(sp)
   4b4d0:	da400117 	ldw	r9,4(sp)
   4b4d4:	113ffd44 	addi	r4,r2,-11
   4b4d8:	00c00704 	movi	r3,28
   4b4dc:	19010e16 	blt	r3,r4,4b918 <__divdf3+0x6b4>
   4b4e0:	00c00744 	movi	r3,29
   4b4e4:	123ffe04 	addi	r8,r2,-8
   4b4e8:	1907c83a 	sub	r3,r3,r4
   4b4ec:	8a22983a 	sll	r17,r17,r8
   4b4f0:	30c6d83a 	srl	r3,r6,r3
   4b4f4:	3210983a 	sll	r8,r6,r8
   4b4f8:	1c62b03a 	or	r17,r3,r17
   4b4fc:	1080fcc4 	addi	r2,r2,1011
   4b500:	0085c83a 	sub	r2,zero,r2
   4b504:	000f883a 	mov	r7,zero
   4b508:	003f8606 	br	4b324 <__alt_data_end+0xfffe4224>
   4b50c:	0023883a 	mov	r17,zero
   4b510:	0011883a 	mov	r8,zero
   4b514:	01c00044 	movi	r7,1
   4b518:	003f8206 	br	4b324 <__alt_data_end+0xfffe4224>
   4b51c:	01c000c4 	movi	r7,3
   4b520:	003f8006 	br	4b324 <__alt_data_end+0xfffe4224>
   4b524:	04c00104 	movi	r19,4
   4b528:	0021883a 	mov	r16,zero
   4b52c:	0025883a 	mov	r18,zero
   4b530:	02400044 	movi	r9,1
   4b534:	003f6906 	br	4b2dc <__alt_data_end+0xfffe41dc>
   4b538:	04c00304 	movi	r19,12
   4b53c:	024000c4 	movi	r9,3
   4b540:	003f6606 	br	4b2dc <__alt_data_end+0xfffe41dc>
   4b544:	01400434 	movhi	r5,16
   4b548:	0007883a 	mov	r3,zero
   4b54c:	297fffc4 	addi	r5,r5,-1
   4b550:	04bfffc4 	movi	r18,-1
   4b554:	0081ffc4 	movi	r2,2047
   4b558:	003fa106 	br	4b3e0 <__alt_data_end+0xfffe42e0>
   4b55c:	00c00044 	movi	r3,1
   4b560:	1887c83a 	sub	r3,r3,r2
   4b564:	01000e04 	movi	r4,56
   4b568:	20c1210e 	bge	r4,r3,4b9f0 <__divdf3+0x78c>
   4b56c:	98c0004c 	andi	r3,r19,1
   4b570:	0005883a 	mov	r2,zero
   4b574:	000b883a 	mov	r5,zero
   4b578:	0025883a 	mov	r18,zero
   4b57c:	003f9806 	br	4b3e0 <__alt_data_end+0xfffe42e0>
   4b580:	8c00fd36 	bltu	r17,r16,4b978 <__divdf3+0x714>
   4b584:	8440fb26 	beq	r16,r17,4b974 <__divdf3+0x710>
   4b588:	8007883a 	mov	r3,r16
   4b58c:	ad7fffc4 	addi	r21,r21,-1
   4b590:	0021883a 	mov	r16,zero
   4b594:	4004d63a 	srli	r2,r8,24
   4b598:	8822923a 	slli	r17,r17,8
   4b59c:	1809883a 	mov	r4,r3
   4b5a0:	402c923a 	slli	r22,r8,8
   4b5a4:	88b8b03a 	or	fp,r17,r2
   4b5a8:	e028d43a 	srli	r20,fp,16
   4b5ac:	d8c00015 	stw	r3,0(sp)
   4b5b0:	e5ffffcc 	andi	r23,fp,65535
   4b5b4:	a00b883a 	mov	r5,r20
   4b5b8:	00406700 	call	40670 <__udivsi3>
   4b5bc:	d8c00017 	ldw	r3,0(sp)
   4b5c0:	a00b883a 	mov	r5,r20
   4b5c4:	d8800315 	stw	r2,12(sp)
   4b5c8:	1809883a 	mov	r4,r3
   4b5cc:	00406d40 	call	406d4 <__umodsi3>
   4b5d0:	d9800317 	ldw	r6,12(sp)
   4b5d4:	1006943a 	slli	r3,r2,16
   4b5d8:	9004d43a 	srli	r2,r18,16
   4b5dc:	b9a3383a 	mul	r17,r23,r6
   4b5e0:	10c4b03a 	or	r2,r2,r3
   4b5e4:	1440062e 	bgeu	r2,r17,4b600 <__divdf3+0x39c>
   4b5e8:	1705883a 	add	r2,r2,fp
   4b5ec:	30ffffc4 	addi	r3,r6,-1
   4b5f0:	1700ee36 	bltu	r2,fp,4b9ac <__divdf3+0x748>
   4b5f4:	1440ed2e 	bgeu	r2,r17,4b9ac <__divdf3+0x748>
   4b5f8:	31bfff84 	addi	r6,r6,-2
   4b5fc:	1705883a 	add	r2,r2,fp
   4b600:	1463c83a 	sub	r17,r2,r17
   4b604:	a00b883a 	mov	r5,r20
   4b608:	8809883a 	mov	r4,r17
   4b60c:	d9800315 	stw	r6,12(sp)
   4b610:	00406700 	call	40670 <__udivsi3>
   4b614:	a00b883a 	mov	r5,r20
   4b618:	8809883a 	mov	r4,r17
   4b61c:	d8800215 	stw	r2,8(sp)
   4b620:	00406d40 	call	406d4 <__umodsi3>
   4b624:	d9c00217 	ldw	r7,8(sp)
   4b628:	1004943a 	slli	r2,r2,16
   4b62c:	94bfffcc 	andi	r18,r18,65535
   4b630:	b9d1383a 	mul	r8,r23,r7
   4b634:	90a4b03a 	or	r18,r18,r2
   4b638:	d9800317 	ldw	r6,12(sp)
   4b63c:	9200062e 	bgeu	r18,r8,4b658 <__divdf3+0x3f4>
   4b640:	9725883a 	add	r18,r18,fp
   4b644:	38bfffc4 	addi	r2,r7,-1
   4b648:	9700d636 	bltu	r18,fp,4b9a4 <__divdf3+0x740>
   4b64c:	9200d52e 	bgeu	r18,r8,4b9a4 <__divdf3+0x740>
   4b650:	39ffff84 	addi	r7,r7,-2
   4b654:	9725883a 	add	r18,r18,fp
   4b658:	3004943a 	slli	r2,r6,16
   4b65c:	b012d43a 	srli	r9,r22,16
   4b660:	b1bfffcc 	andi	r6,r22,65535
   4b664:	11e2b03a 	or	r17,r2,r7
   4b668:	8806d43a 	srli	r3,r17,16
   4b66c:	893fffcc 	andi	r4,r17,65535
   4b670:	218b383a 	mul	r5,r4,r6
   4b674:	30c5383a 	mul	r2,r6,r3
   4b678:	2249383a 	mul	r4,r4,r9
   4b67c:	280ed43a 	srli	r7,r5,16
   4b680:	9225c83a 	sub	r18,r18,r8
   4b684:	2089883a 	add	r4,r4,r2
   4b688:	3909883a 	add	r4,r7,r4
   4b68c:	1a47383a 	mul	r3,r3,r9
   4b690:	2080022e 	bgeu	r4,r2,4b69c <__divdf3+0x438>
   4b694:	00800074 	movhi	r2,1
   4b698:	1887883a 	add	r3,r3,r2
   4b69c:	2004d43a 	srli	r2,r4,16
   4b6a0:	2008943a 	slli	r4,r4,16
   4b6a4:	297fffcc 	andi	r5,r5,65535
   4b6a8:	10c7883a 	add	r3,r2,r3
   4b6ac:	2149883a 	add	r4,r4,r5
   4b6b0:	90c0a536 	bltu	r18,r3,4b948 <__divdf3+0x6e4>
   4b6b4:	90c0bf26 	beq	r18,r3,4b9b4 <__divdf3+0x750>
   4b6b8:	90c7c83a 	sub	r3,r18,r3
   4b6bc:	810fc83a 	sub	r7,r16,r4
   4b6c0:	81e5803a 	cmpltu	r18,r16,r7
   4b6c4:	1ca5c83a 	sub	r18,r3,r18
   4b6c8:	e480c126 	beq	fp,r18,4b9d0 <__divdf3+0x76c>
   4b6cc:	a00b883a 	mov	r5,r20
   4b6d0:	9009883a 	mov	r4,r18
   4b6d4:	d9800315 	stw	r6,12(sp)
   4b6d8:	d9c00215 	stw	r7,8(sp)
   4b6dc:	da400115 	stw	r9,4(sp)
   4b6e0:	00406700 	call	40670 <__udivsi3>
   4b6e4:	a00b883a 	mov	r5,r20
   4b6e8:	9009883a 	mov	r4,r18
   4b6ec:	d8800015 	stw	r2,0(sp)
   4b6f0:	00406d40 	call	406d4 <__umodsi3>
   4b6f4:	d9c00217 	ldw	r7,8(sp)
   4b6f8:	da000017 	ldw	r8,0(sp)
   4b6fc:	1006943a 	slli	r3,r2,16
   4b700:	3804d43a 	srli	r2,r7,16
   4b704:	ba21383a 	mul	r16,r23,r8
   4b708:	d9800317 	ldw	r6,12(sp)
   4b70c:	10c4b03a 	or	r2,r2,r3
   4b710:	da400117 	ldw	r9,4(sp)
   4b714:	1400062e 	bgeu	r2,r16,4b730 <__divdf3+0x4cc>
   4b718:	1705883a 	add	r2,r2,fp
   4b71c:	40ffffc4 	addi	r3,r8,-1
   4b720:	1700ad36 	bltu	r2,fp,4b9d8 <__divdf3+0x774>
   4b724:	1400ac2e 	bgeu	r2,r16,4b9d8 <__divdf3+0x774>
   4b728:	423fff84 	addi	r8,r8,-2
   4b72c:	1705883a 	add	r2,r2,fp
   4b730:	1421c83a 	sub	r16,r2,r16
   4b734:	a00b883a 	mov	r5,r20
   4b738:	8009883a 	mov	r4,r16
   4b73c:	d9800315 	stw	r6,12(sp)
   4b740:	d9c00215 	stw	r7,8(sp)
   4b744:	da000015 	stw	r8,0(sp)
   4b748:	da400115 	stw	r9,4(sp)
   4b74c:	00406700 	call	40670 <__udivsi3>
   4b750:	8009883a 	mov	r4,r16
   4b754:	a00b883a 	mov	r5,r20
   4b758:	1025883a 	mov	r18,r2
   4b75c:	00406d40 	call	406d4 <__umodsi3>
   4b760:	d9c00217 	ldw	r7,8(sp)
   4b764:	1004943a 	slli	r2,r2,16
   4b768:	bcaf383a 	mul	r23,r23,r18
   4b76c:	393fffcc 	andi	r4,r7,65535
   4b770:	2088b03a 	or	r4,r4,r2
   4b774:	d9800317 	ldw	r6,12(sp)
   4b778:	da000017 	ldw	r8,0(sp)
   4b77c:	da400117 	ldw	r9,4(sp)
   4b780:	25c0062e 	bgeu	r4,r23,4b79c <__divdf3+0x538>
   4b784:	2709883a 	add	r4,r4,fp
   4b788:	90bfffc4 	addi	r2,r18,-1
   4b78c:	27009436 	bltu	r4,fp,4b9e0 <__divdf3+0x77c>
   4b790:	25c0932e 	bgeu	r4,r23,4b9e0 <__divdf3+0x77c>
   4b794:	94bfff84 	addi	r18,r18,-2
   4b798:	2709883a 	add	r4,r4,fp
   4b79c:	4004943a 	slli	r2,r8,16
   4b7a0:	25efc83a 	sub	r23,r4,r23
   4b7a4:	1490b03a 	or	r8,r2,r18
   4b7a8:	4008d43a 	srli	r4,r8,16
   4b7ac:	40ffffcc 	andi	r3,r8,65535
   4b7b0:	30c5383a 	mul	r2,r6,r3
   4b7b4:	1a47383a 	mul	r3,r3,r9
   4b7b8:	310d383a 	mul	r6,r6,r4
   4b7bc:	100ad43a 	srli	r5,r2,16
   4b7c0:	4913383a 	mul	r9,r9,r4
   4b7c4:	1987883a 	add	r3,r3,r6
   4b7c8:	28c7883a 	add	r3,r5,r3
   4b7cc:	1980022e 	bgeu	r3,r6,4b7d8 <__divdf3+0x574>
   4b7d0:	01000074 	movhi	r4,1
   4b7d4:	4913883a 	add	r9,r9,r4
   4b7d8:	1808d43a 	srli	r4,r3,16
   4b7dc:	1806943a 	slli	r3,r3,16
   4b7e0:	10bfffcc 	andi	r2,r2,65535
   4b7e4:	2253883a 	add	r9,r4,r9
   4b7e8:	1887883a 	add	r3,r3,r2
   4b7ec:	ba403836 	bltu	r23,r9,4b8d0 <__divdf3+0x66c>
   4b7f0:	ba403626 	beq	r23,r9,4b8cc <__divdf3+0x668>
   4b7f4:	42000054 	ori	r8,r8,1
   4b7f8:	a880ffc4 	addi	r2,r21,1023
   4b7fc:	00bf570e 	bge	zero,r2,4b55c <__alt_data_end+0xfffe445c>
   4b800:	40c001cc 	andi	r3,r8,7
   4b804:	18000726 	beq	r3,zero,4b824 <__divdf3+0x5c0>
   4b808:	40c003cc 	andi	r3,r8,15
   4b80c:	01000104 	movi	r4,4
   4b810:	19000426 	beq	r3,r4,4b824 <__divdf3+0x5c0>
   4b814:	4107883a 	add	r3,r8,r4
   4b818:	1a11803a 	cmpltu	r8,r3,r8
   4b81c:	8a23883a 	add	r17,r17,r8
   4b820:	1811883a 	mov	r8,r3
   4b824:	88c0402c 	andhi	r3,r17,256
   4b828:	18000426 	beq	r3,zero,4b83c <__divdf3+0x5d8>
   4b82c:	00ffc034 	movhi	r3,65280
   4b830:	18ffffc4 	addi	r3,r3,-1
   4b834:	a8810004 	addi	r2,r21,1024
   4b838:	88e2703a 	and	r17,r17,r3
   4b83c:	00c1ff84 	movi	r3,2046
   4b840:	18bee316 	blt	r3,r2,4b3d0 <__alt_data_end+0xfffe42d0>
   4b844:	8824977a 	slli	r18,r17,29
   4b848:	4010d0fa 	srli	r8,r8,3
   4b84c:	8822927a 	slli	r17,r17,9
   4b850:	1081ffcc 	andi	r2,r2,2047
   4b854:	9224b03a 	or	r18,r18,r8
   4b858:	880ad33a 	srli	r5,r17,12
   4b85c:	98c0004c 	andi	r3,r19,1
   4b860:	003edf06 	br	4b3e0 <__alt_data_end+0xfffe42e0>
   4b864:	8080022c 	andhi	r2,r16,8
   4b868:	10001226 	beq	r2,zero,4b8b4 <__divdf3+0x650>
   4b86c:	8880022c 	andhi	r2,r17,8
   4b870:	1000101e 	bne	r2,zero,4b8b4 <__divdf3+0x650>
   4b874:	00800434 	movhi	r2,16
   4b878:	89400234 	orhi	r5,r17,8
   4b87c:	10bfffc4 	addi	r2,r2,-1
   4b880:	b007883a 	mov	r3,r22
   4b884:	288a703a 	and	r5,r5,r2
   4b888:	4025883a 	mov	r18,r8
   4b88c:	003f3106 	br	4b554 <__alt_data_end+0xfffe4454>
   4b890:	008000c4 	movi	r2,3
   4b894:	3880a626 	beq	r7,r2,4bb30 <__divdf3+0x8cc>
   4b898:	00800044 	movi	r2,1
   4b89c:	3880521e 	bne	r7,r2,4b9e8 <__divdf3+0x784>
   4b8a0:	b807883a 	mov	r3,r23
   4b8a4:	0005883a 	mov	r2,zero
   4b8a8:	000b883a 	mov	r5,zero
   4b8ac:	0025883a 	mov	r18,zero
   4b8b0:	003ecb06 	br	4b3e0 <__alt_data_end+0xfffe42e0>
   4b8b4:	00800434 	movhi	r2,16
   4b8b8:	81400234 	orhi	r5,r16,8
   4b8bc:	10bfffc4 	addi	r2,r2,-1
   4b8c0:	a007883a 	mov	r3,r20
   4b8c4:	288a703a 	and	r5,r5,r2
   4b8c8:	003f2206 	br	4b554 <__alt_data_end+0xfffe4454>
   4b8cc:	183fca26 	beq	r3,zero,4b7f8 <__alt_data_end+0xfffe46f8>
   4b8d0:	e5ef883a 	add	r23,fp,r23
   4b8d4:	40bfffc4 	addi	r2,r8,-1
   4b8d8:	bf00392e 	bgeu	r23,fp,4b9c0 <__divdf3+0x75c>
   4b8dc:	1011883a 	mov	r8,r2
   4b8e0:	ba7fc41e 	bne	r23,r9,4b7f4 <__alt_data_end+0xfffe46f4>
   4b8e4:	b0ffc31e 	bne	r22,r3,4b7f4 <__alt_data_end+0xfffe46f4>
   4b8e8:	003fc306 	br	4b7f8 <__alt_data_end+0xfffe46f8>
   4b8ec:	143ff604 	addi	r16,r2,-40
   4b8f0:	9c20983a 	sll	r16,r19,r16
   4b8f4:	0025883a 	mov	r18,zero
   4b8f8:	003ee206 	br	4b484 <__alt_data_end+0xfffe4384>
   4b8fc:	d9800315 	stw	r6,12(sp)
   4b900:	d9c00215 	stw	r7,8(sp)
   4b904:	004cfbc0 	call	4cfbc <__clzsi2>
   4b908:	10800804 	addi	r2,r2,32
   4b90c:	d9c00217 	ldw	r7,8(sp)
   4b910:	d9800317 	ldw	r6,12(sp)
   4b914:	003ed106 	br	4b45c <__alt_data_end+0xfffe435c>
   4b918:	147ff604 	addi	r17,r2,-40
   4b91c:	3462983a 	sll	r17,r6,r17
   4b920:	0011883a 	mov	r8,zero
   4b924:	003ef506 	br	4b4fc <__alt_data_end+0xfffe43fc>
   4b928:	3009883a 	mov	r4,r6
   4b92c:	d9800315 	stw	r6,12(sp)
   4b930:	da400115 	stw	r9,4(sp)
   4b934:	004cfbc0 	call	4cfbc <__clzsi2>
   4b938:	10800804 	addi	r2,r2,32
   4b93c:	da400117 	ldw	r9,4(sp)
   4b940:	d9800317 	ldw	r6,12(sp)
   4b944:	003ee306 	br	4b4d4 <__alt_data_end+0xfffe43d4>
   4b948:	85a1883a 	add	r16,r16,r22
   4b94c:	8585803a 	cmpltu	r2,r16,r22
   4b950:	1705883a 	add	r2,r2,fp
   4b954:	14a5883a 	add	r18,r2,r18
   4b958:	88bfffc4 	addi	r2,r17,-1
   4b95c:	e4800c2e 	bgeu	fp,r18,4b990 <__divdf3+0x72c>
   4b960:	90c03e36 	bltu	r18,r3,4ba5c <__divdf3+0x7f8>
   4b964:	1c806926 	beq	r3,r18,4bb0c <__divdf3+0x8a8>
   4b968:	90c7c83a 	sub	r3,r18,r3
   4b96c:	1023883a 	mov	r17,r2
   4b970:	003f5206 	br	4b6bc <__alt_data_end+0xfffe45bc>
   4b974:	923f0436 	bltu	r18,r8,4b588 <__alt_data_end+0xfffe4488>
   4b978:	800897fa 	slli	r4,r16,31
   4b97c:	9004d07a 	srli	r2,r18,1
   4b980:	8006d07a 	srli	r3,r16,1
   4b984:	902097fa 	slli	r16,r18,31
   4b988:	20a4b03a 	or	r18,r4,r2
   4b98c:	003f0106 	br	4b594 <__alt_data_end+0xfffe4494>
   4b990:	e4bff51e 	bne	fp,r18,4b968 <__alt_data_end+0xfffe4868>
   4b994:	85bff22e 	bgeu	r16,r22,4b960 <__alt_data_end+0xfffe4860>
   4b998:	e0c7c83a 	sub	r3,fp,r3
   4b99c:	1023883a 	mov	r17,r2
   4b9a0:	003f4606 	br	4b6bc <__alt_data_end+0xfffe45bc>
   4b9a4:	100f883a 	mov	r7,r2
   4b9a8:	003f2b06 	br	4b658 <__alt_data_end+0xfffe4558>
   4b9ac:	180d883a 	mov	r6,r3
   4b9b0:	003f1306 	br	4b600 <__alt_data_end+0xfffe4500>
   4b9b4:	813fe436 	bltu	r16,r4,4b948 <__alt_data_end+0xfffe4848>
   4b9b8:	0007883a 	mov	r3,zero
   4b9bc:	003f3f06 	br	4b6bc <__alt_data_end+0xfffe45bc>
   4b9c0:	ba402c36 	bltu	r23,r9,4ba74 <__divdf3+0x810>
   4b9c4:	4dc05426 	beq	r9,r23,4bb18 <__divdf3+0x8b4>
   4b9c8:	1011883a 	mov	r8,r2
   4b9cc:	003f8906 	br	4b7f4 <__alt_data_end+0xfffe46f4>
   4b9d0:	023fffc4 	movi	r8,-1
   4b9d4:	003f8806 	br	4b7f8 <__alt_data_end+0xfffe46f8>
   4b9d8:	1811883a 	mov	r8,r3
   4b9dc:	003f5406 	br	4b730 <__alt_data_end+0xfffe4630>
   4b9e0:	1025883a 	mov	r18,r2
   4b9e4:	003f6d06 	br	4b79c <__alt_data_end+0xfffe469c>
   4b9e8:	b827883a 	mov	r19,r23
   4b9ec:	003f8206 	br	4b7f8 <__alt_data_end+0xfffe46f8>
   4b9f0:	010007c4 	movi	r4,31
   4b9f4:	20c02616 	blt	r4,r3,4ba90 <__divdf3+0x82c>
   4b9f8:	00800804 	movi	r2,32
   4b9fc:	10c5c83a 	sub	r2,r2,r3
   4ba00:	888a983a 	sll	r5,r17,r2
   4ba04:	40c8d83a 	srl	r4,r8,r3
   4ba08:	4084983a 	sll	r2,r8,r2
   4ba0c:	88e2d83a 	srl	r17,r17,r3
   4ba10:	2906b03a 	or	r3,r5,r4
   4ba14:	1004c03a 	cmpne	r2,r2,zero
   4ba18:	1886b03a 	or	r3,r3,r2
   4ba1c:	188001cc 	andi	r2,r3,7
   4ba20:	10000726 	beq	r2,zero,4ba40 <__divdf3+0x7dc>
   4ba24:	188003cc 	andi	r2,r3,15
   4ba28:	01000104 	movi	r4,4
   4ba2c:	11000426 	beq	r2,r4,4ba40 <__divdf3+0x7dc>
   4ba30:	1805883a 	mov	r2,r3
   4ba34:	10c00104 	addi	r3,r2,4
   4ba38:	1885803a 	cmpltu	r2,r3,r2
   4ba3c:	88a3883a 	add	r17,r17,r2
   4ba40:	8880202c 	andhi	r2,r17,128
   4ba44:	10002726 	beq	r2,zero,4bae4 <__divdf3+0x880>
   4ba48:	98c0004c 	andi	r3,r19,1
   4ba4c:	00800044 	movi	r2,1
   4ba50:	000b883a 	mov	r5,zero
   4ba54:	0025883a 	mov	r18,zero
   4ba58:	003e6106 	br	4b3e0 <__alt_data_end+0xfffe42e0>
   4ba5c:	85a1883a 	add	r16,r16,r22
   4ba60:	8585803a 	cmpltu	r2,r16,r22
   4ba64:	1705883a 	add	r2,r2,fp
   4ba68:	14a5883a 	add	r18,r2,r18
   4ba6c:	8c7fff84 	addi	r17,r17,-2
   4ba70:	003f1106 	br	4b6b8 <__alt_data_end+0xfffe45b8>
   4ba74:	b589883a 	add	r4,r22,r22
   4ba78:	25ad803a 	cmpltu	r22,r4,r22
   4ba7c:	b739883a 	add	fp,r22,fp
   4ba80:	40bfff84 	addi	r2,r8,-2
   4ba84:	bf2f883a 	add	r23,r23,fp
   4ba88:	202d883a 	mov	r22,r4
   4ba8c:	003f9306 	br	4b8dc <__alt_data_end+0xfffe47dc>
   4ba90:	013ff844 	movi	r4,-31
   4ba94:	2085c83a 	sub	r2,r4,r2
   4ba98:	8888d83a 	srl	r4,r17,r2
   4ba9c:	00800804 	movi	r2,32
   4baa0:	18802126 	beq	r3,r2,4bb28 <__divdf3+0x8c4>
   4baa4:	00801004 	movi	r2,64
   4baa8:	10c5c83a 	sub	r2,r2,r3
   4baac:	8884983a 	sll	r2,r17,r2
   4bab0:	1204b03a 	or	r2,r2,r8
   4bab4:	1004c03a 	cmpne	r2,r2,zero
   4bab8:	2084b03a 	or	r2,r4,r2
   4babc:	144001cc 	andi	r17,r2,7
   4bac0:	88000d1e 	bne	r17,zero,4baf8 <__divdf3+0x894>
   4bac4:	000b883a 	mov	r5,zero
   4bac8:	1024d0fa 	srli	r18,r2,3
   4bacc:	98c0004c 	andi	r3,r19,1
   4bad0:	0005883a 	mov	r2,zero
   4bad4:	9464b03a 	or	r18,r18,r17
   4bad8:	003e4106 	br	4b3e0 <__alt_data_end+0xfffe42e0>
   4badc:	1007883a 	mov	r3,r2
   4bae0:	0023883a 	mov	r17,zero
   4bae4:	880a927a 	slli	r5,r17,9
   4bae8:	1805883a 	mov	r2,r3
   4baec:	8822977a 	slli	r17,r17,29
   4baf0:	280ad33a 	srli	r5,r5,12
   4baf4:	003ff406 	br	4bac8 <__alt_data_end+0xfffe49c8>
   4baf8:	10c003cc 	andi	r3,r2,15
   4bafc:	01000104 	movi	r4,4
   4bb00:	193ff626 	beq	r3,r4,4badc <__alt_data_end+0xfffe49dc>
   4bb04:	0023883a 	mov	r17,zero
   4bb08:	003fca06 	br	4ba34 <__alt_data_end+0xfffe4934>
   4bb0c:	813fd336 	bltu	r16,r4,4ba5c <__alt_data_end+0xfffe495c>
   4bb10:	1023883a 	mov	r17,r2
   4bb14:	003fa806 	br	4b9b8 <__alt_data_end+0xfffe48b8>
   4bb18:	b0ffd636 	bltu	r22,r3,4ba74 <__alt_data_end+0xfffe4974>
   4bb1c:	1011883a 	mov	r8,r2
   4bb20:	b0ff341e 	bne	r22,r3,4b7f4 <__alt_data_end+0xfffe46f4>
   4bb24:	003f3406 	br	4b7f8 <__alt_data_end+0xfffe46f8>
   4bb28:	0005883a 	mov	r2,zero
   4bb2c:	003fe006 	br	4bab0 <__alt_data_end+0xfffe49b0>
   4bb30:	00800434 	movhi	r2,16
   4bb34:	89400234 	orhi	r5,r17,8
   4bb38:	10bfffc4 	addi	r2,r2,-1
   4bb3c:	b807883a 	mov	r3,r23
   4bb40:	288a703a 	and	r5,r5,r2
   4bb44:	4025883a 	mov	r18,r8
   4bb48:	003e8206 	br	4b554 <__alt_data_end+0xfffe4454>

0004bb4c <__eqdf2>:
   4bb4c:	2804d53a 	srli	r2,r5,20
   4bb50:	3806d53a 	srli	r3,r7,20
   4bb54:	02000434 	movhi	r8,16
   4bb58:	423fffc4 	addi	r8,r8,-1
   4bb5c:	1081ffcc 	andi	r2,r2,2047
   4bb60:	0281ffc4 	movi	r10,2047
   4bb64:	2a12703a 	and	r9,r5,r8
   4bb68:	18c1ffcc 	andi	r3,r3,2047
   4bb6c:	3a10703a 	and	r8,r7,r8
   4bb70:	280ad7fa 	srli	r5,r5,31
   4bb74:	380ed7fa 	srli	r7,r7,31
   4bb78:	12801026 	beq	r2,r10,4bbbc <__eqdf2+0x70>
   4bb7c:	0281ffc4 	movi	r10,2047
   4bb80:	1a800a26 	beq	r3,r10,4bbac <__eqdf2+0x60>
   4bb84:	10c00226 	beq	r2,r3,4bb90 <__eqdf2+0x44>
   4bb88:	00800044 	movi	r2,1
   4bb8c:	f800283a 	ret
   4bb90:	4a3ffd1e 	bne	r9,r8,4bb88 <__alt_data_end+0xfffe4a88>
   4bb94:	21bffc1e 	bne	r4,r6,4bb88 <__alt_data_end+0xfffe4a88>
   4bb98:	29c00c26 	beq	r5,r7,4bbcc <__eqdf2+0x80>
   4bb9c:	103ffa1e 	bne	r2,zero,4bb88 <__alt_data_end+0xfffe4a88>
   4bba0:	2244b03a 	or	r2,r4,r9
   4bba4:	1004c03a 	cmpne	r2,r2,zero
   4bba8:	f800283a 	ret
   4bbac:	3214b03a 	or	r10,r6,r8
   4bbb0:	503ff426 	beq	r10,zero,4bb84 <__alt_data_end+0xfffe4a84>
   4bbb4:	00800044 	movi	r2,1
   4bbb8:	f800283a 	ret
   4bbbc:	2254b03a 	or	r10,r4,r9
   4bbc0:	503fee26 	beq	r10,zero,4bb7c <__alt_data_end+0xfffe4a7c>
   4bbc4:	00800044 	movi	r2,1
   4bbc8:	f800283a 	ret
   4bbcc:	0005883a 	mov	r2,zero
   4bbd0:	f800283a 	ret

0004bbd4 <__gedf2>:
   4bbd4:	2804d53a 	srli	r2,r5,20
   4bbd8:	3806d53a 	srli	r3,r7,20
   4bbdc:	02000434 	movhi	r8,16
   4bbe0:	423fffc4 	addi	r8,r8,-1
   4bbe4:	1081ffcc 	andi	r2,r2,2047
   4bbe8:	0241ffc4 	movi	r9,2047
   4bbec:	2a14703a 	and	r10,r5,r8
   4bbf0:	18c1ffcc 	andi	r3,r3,2047
   4bbf4:	3a10703a 	and	r8,r7,r8
   4bbf8:	280ad7fa 	srli	r5,r5,31
   4bbfc:	380ed7fa 	srli	r7,r7,31
   4bc00:	12401d26 	beq	r2,r9,4bc78 <__gedf2+0xa4>
   4bc04:	0241ffc4 	movi	r9,2047
   4bc08:	1a401226 	beq	r3,r9,4bc54 <__gedf2+0x80>
   4bc0c:	1000081e 	bne	r2,zero,4bc30 <__gedf2+0x5c>
   4bc10:	2296b03a 	or	r11,r4,r10
   4bc14:	5813003a 	cmpeq	r9,r11,zero
   4bc18:	1800091e 	bne	r3,zero,4bc40 <__gedf2+0x6c>
   4bc1c:	3218b03a 	or	r12,r6,r8
   4bc20:	6000071e 	bne	r12,zero,4bc40 <__gedf2+0x6c>
   4bc24:	0005883a 	mov	r2,zero
   4bc28:	5800101e 	bne	r11,zero,4bc6c <__gedf2+0x98>
   4bc2c:	f800283a 	ret
   4bc30:	18000c1e 	bne	r3,zero,4bc64 <__gedf2+0x90>
   4bc34:	3212b03a 	or	r9,r6,r8
   4bc38:	48000c26 	beq	r9,zero,4bc6c <__gedf2+0x98>
   4bc3c:	0013883a 	mov	r9,zero
   4bc40:	39c03fcc 	andi	r7,r7,255
   4bc44:	48000826 	beq	r9,zero,4bc68 <__gedf2+0x94>
   4bc48:	38000926 	beq	r7,zero,4bc70 <__gedf2+0x9c>
   4bc4c:	00800044 	movi	r2,1
   4bc50:	f800283a 	ret
   4bc54:	3212b03a 	or	r9,r6,r8
   4bc58:	483fec26 	beq	r9,zero,4bc0c <__alt_data_end+0xfffe4b0c>
   4bc5c:	00bfff84 	movi	r2,-2
   4bc60:	f800283a 	ret
   4bc64:	39c03fcc 	andi	r7,r7,255
   4bc68:	29c00626 	beq	r5,r7,4bc84 <__gedf2+0xb0>
   4bc6c:	283ff726 	beq	r5,zero,4bc4c <__alt_data_end+0xfffe4b4c>
   4bc70:	00bfffc4 	movi	r2,-1
   4bc74:	f800283a 	ret
   4bc78:	2292b03a 	or	r9,r4,r10
   4bc7c:	483fe126 	beq	r9,zero,4bc04 <__alt_data_end+0xfffe4b04>
   4bc80:	003ff606 	br	4bc5c <__alt_data_end+0xfffe4b5c>
   4bc84:	18bff916 	blt	r3,r2,4bc6c <__alt_data_end+0xfffe4b6c>
   4bc88:	10c00316 	blt	r2,r3,4bc98 <__gedf2+0xc4>
   4bc8c:	42bff736 	bltu	r8,r10,4bc6c <__alt_data_end+0xfffe4b6c>
   4bc90:	52000326 	beq	r10,r8,4bca0 <__gedf2+0xcc>
   4bc94:	5200042e 	bgeu	r10,r8,4bca8 <__gedf2+0xd4>
   4bc98:	283fec1e 	bne	r5,zero,4bc4c <__alt_data_end+0xfffe4b4c>
   4bc9c:	003ff406 	br	4bc70 <__alt_data_end+0xfffe4b70>
   4bca0:	313ff236 	bltu	r6,r4,4bc6c <__alt_data_end+0xfffe4b6c>
   4bca4:	21bffc36 	bltu	r4,r6,4bc98 <__alt_data_end+0xfffe4b98>
   4bca8:	0005883a 	mov	r2,zero
   4bcac:	f800283a 	ret

0004bcb0 <__ledf2>:
   4bcb0:	2804d53a 	srli	r2,r5,20
   4bcb4:	3810d53a 	srli	r8,r7,20
   4bcb8:	00c00434 	movhi	r3,16
   4bcbc:	18ffffc4 	addi	r3,r3,-1
   4bcc0:	1081ffcc 	andi	r2,r2,2047
   4bcc4:	0241ffc4 	movi	r9,2047
   4bcc8:	28d4703a 	and	r10,r5,r3
   4bccc:	4201ffcc 	andi	r8,r8,2047
   4bcd0:	38c6703a 	and	r3,r7,r3
   4bcd4:	280ad7fa 	srli	r5,r5,31
   4bcd8:	380ed7fa 	srli	r7,r7,31
   4bcdc:	12401f26 	beq	r2,r9,4bd5c <__ledf2+0xac>
   4bce0:	0241ffc4 	movi	r9,2047
   4bce4:	42401426 	beq	r8,r9,4bd38 <__ledf2+0x88>
   4bce8:	1000091e 	bne	r2,zero,4bd10 <__ledf2+0x60>
   4bcec:	2296b03a 	or	r11,r4,r10
   4bcf0:	5813003a 	cmpeq	r9,r11,zero
   4bcf4:	29403fcc 	andi	r5,r5,255
   4bcf8:	40000a1e 	bne	r8,zero,4bd24 <__ledf2+0x74>
   4bcfc:	30d8b03a 	or	r12,r6,r3
   4bd00:	6000081e 	bne	r12,zero,4bd24 <__ledf2+0x74>
   4bd04:	0005883a 	mov	r2,zero
   4bd08:	5800111e 	bne	r11,zero,4bd50 <__ledf2+0xa0>
   4bd0c:	f800283a 	ret
   4bd10:	29403fcc 	andi	r5,r5,255
   4bd14:	40000c1e 	bne	r8,zero,4bd48 <__ledf2+0x98>
   4bd18:	30d2b03a 	or	r9,r6,r3
   4bd1c:	48000c26 	beq	r9,zero,4bd50 <__ledf2+0xa0>
   4bd20:	0013883a 	mov	r9,zero
   4bd24:	39c03fcc 	andi	r7,r7,255
   4bd28:	48000826 	beq	r9,zero,4bd4c <__ledf2+0x9c>
   4bd2c:	38001126 	beq	r7,zero,4bd74 <__ledf2+0xc4>
   4bd30:	00800044 	movi	r2,1
   4bd34:	f800283a 	ret
   4bd38:	30d2b03a 	or	r9,r6,r3
   4bd3c:	483fea26 	beq	r9,zero,4bce8 <__alt_data_end+0xfffe4be8>
   4bd40:	00800084 	movi	r2,2
   4bd44:	f800283a 	ret
   4bd48:	39c03fcc 	andi	r7,r7,255
   4bd4c:	39400726 	beq	r7,r5,4bd6c <__ledf2+0xbc>
   4bd50:	2800081e 	bne	r5,zero,4bd74 <__ledf2+0xc4>
   4bd54:	00800044 	movi	r2,1
   4bd58:	f800283a 	ret
   4bd5c:	2292b03a 	or	r9,r4,r10
   4bd60:	483fdf26 	beq	r9,zero,4bce0 <__alt_data_end+0xfffe4be0>
   4bd64:	00800084 	movi	r2,2
   4bd68:	f800283a 	ret
   4bd6c:	4080030e 	bge	r8,r2,4bd7c <__ledf2+0xcc>
   4bd70:	383fef26 	beq	r7,zero,4bd30 <__alt_data_end+0xfffe4c30>
   4bd74:	00bfffc4 	movi	r2,-1
   4bd78:	f800283a 	ret
   4bd7c:	123feb16 	blt	r2,r8,4bd2c <__alt_data_end+0xfffe4c2c>
   4bd80:	1abff336 	bltu	r3,r10,4bd50 <__alt_data_end+0xfffe4c50>
   4bd84:	50c00326 	beq	r10,r3,4bd94 <__ledf2+0xe4>
   4bd88:	50c0042e 	bgeu	r10,r3,4bd9c <__ledf2+0xec>
   4bd8c:	283fe81e 	bne	r5,zero,4bd30 <__alt_data_end+0xfffe4c30>
   4bd90:	003ff806 	br	4bd74 <__alt_data_end+0xfffe4c74>
   4bd94:	313fee36 	bltu	r6,r4,4bd50 <__alt_data_end+0xfffe4c50>
   4bd98:	21bffc36 	bltu	r4,r6,4bd8c <__alt_data_end+0xfffe4c8c>
   4bd9c:	0005883a 	mov	r2,zero
   4bda0:	f800283a 	ret

0004bda4 <__muldf3>:
   4bda4:	defff304 	addi	sp,sp,-52
   4bda8:	2804d53a 	srli	r2,r5,20
   4bdac:	dd800915 	stw	r22,36(sp)
   4bdb0:	282cd7fa 	srli	r22,r5,31
   4bdb4:	dc000315 	stw	r16,12(sp)
   4bdb8:	04000434 	movhi	r16,16
   4bdbc:	dd400815 	stw	r21,32(sp)
   4bdc0:	dc800515 	stw	r18,20(sp)
   4bdc4:	843fffc4 	addi	r16,r16,-1
   4bdc8:	dfc00c15 	stw	ra,48(sp)
   4bdcc:	df000b15 	stw	fp,44(sp)
   4bdd0:	ddc00a15 	stw	r23,40(sp)
   4bdd4:	dd000715 	stw	r20,28(sp)
   4bdd8:	dcc00615 	stw	r19,24(sp)
   4bddc:	dc400415 	stw	r17,16(sp)
   4bde0:	1481ffcc 	andi	r18,r2,2047
   4bde4:	2c20703a 	and	r16,r5,r16
   4bde8:	b02b883a 	mov	r21,r22
   4bdec:	b2403fcc 	andi	r9,r22,255
   4bdf0:	90006026 	beq	r18,zero,4bf74 <__muldf3+0x1d0>
   4bdf4:	0081ffc4 	movi	r2,2047
   4bdf8:	2029883a 	mov	r20,r4
   4bdfc:	90803626 	beq	r18,r2,4bed8 <__muldf3+0x134>
   4be00:	80800434 	orhi	r2,r16,16
   4be04:	100490fa 	slli	r2,r2,3
   4be08:	2020d77a 	srli	r16,r4,29
   4be0c:	202890fa 	slli	r20,r4,3
   4be10:	94bf0044 	addi	r18,r18,-1023
   4be14:	80a0b03a 	or	r16,r16,r2
   4be18:	0027883a 	mov	r19,zero
   4be1c:	0039883a 	mov	fp,zero
   4be20:	3804d53a 	srli	r2,r7,20
   4be24:	382ed7fa 	srli	r23,r7,31
   4be28:	04400434 	movhi	r17,16
   4be2c:	8c7fffc4 	addi	r17,r17,-1
   4be30:	1081ffcc 	andi	r2,r2,2047
   4be34:	3011883a 	mov	r8,r6
   4be38:	3c62703a 	and	r17,r7,r17
   4be3c:	ba803fcc 	andi	r10,r23,255
   4be40:	10006d26 	beq	r2,zero,4bff8 <__muldf3+0x254>
   4be44:	00c1ffc4 	movi	r3,2047
   4be48:	10c06526 	beq	r2,r3,4bfe0 <__muldf3+0x23c>
   4be4c:	88c00434 	orhi	r3,r17,16
   4be50:	180690fa 	slli	r3,r3,3
   4be54:	3022d77a 	srli	r17,r6,29
   4be58:	301090fa 	slli	r8,r6,3
   4be5c:	10bf0044 	addi	r2,r2,-1023
   4be60:	88e2b03a 	or	r17,r17,r3
   4be64:	000b883a 	mov	r5,zero
   4be68:	9085883a 	add	r2,r18,r2
   4be6c:	2cc8b03a 	or	r4,r5,r19
   4be70:	00c003c4 	movi	r3,15
   4be74:	bdacf03a 	xor	r22,r23,r22
   4be78:	12c00044 	addi	r11,r2,1
   4be7c:	19009936 	bltu	r3,r4,4c0e4 <__muldf3+0x340>
   4be80:	200890ba 	slli	r4,r4,2
   4be84:	00c00174 	movhi	r3,5
   4be88:	18efa604 	addi	r3,r3,-16744
   4be8c:	20c9883a 	add	r4,r4,r3
   4be90:	20c00017 	ldw	r3,0(r4)
   4be94:	1800683a 	jmp	r3
   4be98:	0004c0e4 	muli	zero,zero,4867
   4be9c:	0004bef8 	rdprs	zero,zero,4859
   4bea0:	0004bef8 	rdprs	zero,zero,4859
   4bea4:	0004bef4 	movhi	zero,4859
   4bea8:	0004c0c0 	call	4c0c <__alt_mem_onchip_memory2-0x3b3f4>
   4beac:	0004c0c0 	call	4c0c <__alt_mem_onchip_memory2-0x3b3f4>
   4beb0:	0004c0a8 	cmpgeui	zero,zero,4866
   4beb4:	0004bef4 	movhi	zero,4859
   4beb8:	0004c0c0 	call	4c0c <__alt_mem_onchip_memory2-0x3b3f4>
   4bebc:	0004c0a8 	cmpgeui	zero,zero,4866
   4bec0:	0004c0c0 	call	4c0c <__alt_mem_onchip_memory2-0x3b3f4>
   4bec4:	0004bef4 	movhi	zero,4859
   4bec8:	0004c0d0 	cmplti	zero,zero,4867
   4becc:	0004c0d0 	cmplti	zero,zero,4867
   4bed0:	0004c0d0 	cmplti	zero,zero,4867
   4bed4:	0004c2ec 	andhi	zero,zero,4875
   4bed8:	2404b03a 	or	r2,r4,r16
   4bedc:	10006f1e 	bne	r2,zero,4c09c <__muldf3+0x2f8>
   4bee0:	04c00204 	movi	r19,8
   4bee4:	0021883a 	mov	r16,zero
   4bee8:	0029883a 	mov	r20,zero
   4beec:	07000084 	movi	fp,2
   4bef0:	003fcb06 	br	4be20 <__alt_data_end+0xfffe4d20>
   4bef4:	502d883a 	mov	r22,r10
   4bef8:	00800084 	movi	r2,2
   4befc:	28805726 	beq	r5,r2,4c05c <__muldf3+0x2b8>
   4bf00:	008000c4 	movi	r2,3
   4bf04:	28816626 	beq	r5,r2,4c4a0 <__muldf3+0x6fc>
   4bf08:	00800044 	movi	r2,1
   4bf0c:	2881411e 	bne	r5,r2,4c414 <__muldf3+0x670>
   4bf10:	b02b883a 	mov	r21,r22
   4bf14:	0005883a 	mov	r2,zero
   4bf18:	000b883a 	mov	r5,zero
   4bf1c:	0029883a 	mov	r20,zero
   4bf20:	1004953a 	slli	r2,r2,20
   4bf24:	a8c03fcc 	andi	r3,r21,255
   4bf28:	04400434 	movhi	r17,16
   4bf2c:	8c7fffc4 	addi	r17,r17,-1
   4bf30:	180697fa 	slli	r3,r3,31
   4bf34:	2c4a703a 	and	r5,r5,r17
   4bf38:	288ab03a 	or	r5,r5,r2
   4bf3c:	28c6b03a 	or	r3,r5,r3
   4bf40:	a005883a 	mov	r2,r20
   4bf44:	dfc00c17 	ldw	ra,48(sp)
   4bf48:	df000b17 	ldw	fp,44(sp)
   4bf4c:	ddc00a17 	ldw	r23,40(sp)
   4bf50:	dd800917 	ldw	r22,36(sp)
   4bf54:	dd400817 	ldw	r21,32(sp)
   4bf58:	dd000717 	ldw	r20,28(sp)
   4bf5c:	dcc00617 	ldw	r19,24(sp)
   4bf60:	dc800517 	ldw	r18,20(sp)
   4bf64:	dc400417 	ldw	r17,16(sp)
   4bf68:	dc000317 	ldw	r16,12(sp)
   4bf6c:	dec00d04 	addi	sp,sp,52
   4bf70:	f800283a 	ret
   4bf74:	2404b03a 	or	r2,r4,r16
   4bf78:	2027883a 	mov	r19,r4
   4bf7c:	10004226 	beq	r2,zero,4c088 <__muldf3+0x2e4>
   4bf80:	8000fc26 	beq	r16,zero,4c374 <__muldf3+0x5d0>
   4bf84:	8009883a 	mov	r4,r16
   4bf88:	d9800215 	stw	r6,8(sp)
   4bf8c:	d9c00015 	stw	r7,0(sp)
   4bf90:	da400115 	stw	r9,4(sp)
   4bf94:	004cfbc0 	call	4cfbc <__clzsi2>
   4bf98:	d9800217 	ldw	r6,8(sp)
   4bf9c:	d9c00017 	ldw	r7,0(sp)
   4bfa0:	da400117 	ldw	r9,4(sp)
   4bfa4:	113ffd44 	addi	r4,r2,-11
   4bfa8:	00c00704 	movi	r3,28
   4bfac:	1900ed16 	blt	r3,r4,4c364 <__muldf3+0x5c0>
   4bfb0:	00c00744 	movi	r3,29
   4bfb4:	147ffe04 	addi	r17,r2,-8
   4bfb8:	1907c83a 	sub	r3,r3,r4
   4bfbc:	8460983a 	sll	r16,r16,r17
   4bfc0:	98c6d83a 	srl	r3,r19,r3
   4bfc4:	9c68983a 	sll	r20,r19,r17
   4bfc8:	1c20b03a 	or	r16,r3,r16
   4bfcc:	1080fcc4 	addi	r2,r2,1011
   4bfd0:	00a5c83a 	sub	r18,zero,r2
   4bfd4:	0027883a 	mov	r19,zero
   4bfd8:	0039883a 	mov	fp,zero
   4bfdc:	003f9006 	br	4be20 <__alt_data_end+0xfffe4d20>
   4bfe0:	3446b03a 	or	r3,r6,r17
   4bfe4:	1800261e 	bne	r3,zero,4c080 <__muldf3+0x2dc>
   4bfe8:	0023883a 	mov	r17,zero
   4bfec:	0011883a 	mov	r8,zero
   4bff0:	01400084 	movi	r5,2
   4bff4:	003f9c06 	br	4be68 <__alt_data_end+0xfffe4d68>
   4bff8:	3446b03a 	or	r3,r6,r17
   4bffc:	18001c26 	beq	r3,zero,4c070 <__muldf3+0x2cc>
   4c000:	8800ce26 	beq	r17,zero,4c33c <__muldf3+0x598>
   4c004:	8809883a 	mov	r4,r17
   4c008:	d9800215 	stw	r6,8(sp)
   4c00c:	da400115 	stw	r9,4(sp)
   4c010:	da800015 	stw	r10,0(sp)
   4c014:	004cfbc0 	call	4cfbc <__clzsi2>
   4c018:	d9800217 	ldw	r6,8(sp)
   4c01c:	da400117 	ldw	r9,4(sp)
   4c020:	da800017 	ldw	r10,0(sp)
   4c024:	113ffd44 	addi	r4,r2,-11
   4c028:	00c00704 	movi	r3,28
   4c02c:	1900bf16 	blt	r3,r4,4c32c <__muldf3+0x588>
   4c030:	00c00744 	movi	r3,29
   4c034:	123ffe04 	addi	r8,r2,-8
   4c038:	1907c83a 	sub	r3,r3,r4
   4c03c:	8a22983a 	sll	r17,r17,r8
   4c040:	30c6d83a 	srl	r3,r6,r3
   4c044:	3210983a 	sll	r8,r6,r8
   4c048:	1c62b03a 	or	r17,r3,r17
   4c04c:	1080fcc4 	addi	r2,r2,1011
   4c050:	0085c83a 	sub	r2,zero,r2
   4c054:	000b883a 	mov	r5,zero
   4c058:	003f8306 	br	4be68 <__alt_data_end+0xfffe4d68>
   4c05c:	b02b883a 	mov	r21,r22
   4c060:	0081ffc4 	movi	r2,2047
   4c064:	000b883a 	mov	r5,zero
   4c068:	0029883a 	mov	r20,zero
   4c06c:	003fac06 	br	4bf20 <__alt_data_end+0xfffe4e20>
   4c070:	0023883a 	mov	r17,zero
   4c074:	0011883a 	mov	r8,zero
   4c078:	01400044 	movi	r5,1
   4c07c:	003f7a06 	br	4be68 <__alt_data_end+0xfffe4d68>
   4c080:	014000c4 	movi	r5,3
   4c084:	003f7806 	br	4be68 <__alt_data_end+0xfffe4d68>
   4c088:	04c00104 	movi	r19,4
   4c08c:	0021883a 	mov	r16,zero
   4c090:	0029883a 	mov	r20,zero
   4c094:	07000044 	movi	fp,1
   4c098:	003f6106 	br	4be20 <__alt_data_end+0xfffe4d20>
   4c09c:	04c00304 	movi	r19,12
   4c0a0:	070000c4 	movi	fp,3
   4c0a4:	003f5e06 	br	4be20 <__alt_data_end+0xfffe4d20>
   4c0a8:	01400434 	movhi	r5,16
   4c0ac:	002b883a 	mov	r21,zero
   4c0b0:	297fffc4 	addi	r5,r5,-1
   4c0b4:	053fffc4 	movi	r20,-1
   4c0b8:	0081ffc4 	movi	r2,2047
   4c0bc:	003f9806 	br	4bf20 <__alt_data_end+0xfffe4e20>
   4c0c0:	8023883a 	mov	r17,r16
   4c0c4:	a011883a 	mov	r8,r20
   4c0c8:	e00b883a 	mov	r5,fp
   4c0cc:	003f8a06 	br	4bef8 <__alt_data_end+0xfffe4df8>
   4c0d0:	8023883a 	mov	r17,r16
   4c0d4:	a011883a 	mov	r8,r20
   4c0d8:	482d883a 	mov	r22,r9
   4c0dc:	e00b883a 	mov	r5,fp
   4c0e0:	003f8506 	br	4bef8 <__alt_data_end+0xfffe4df8>
   4c0e4:	a00ad43a 	srli	r5,r20,16
   4c0e8:	401ad43a 	srli	r13,r8,16
   4c0ec:	a53fffcc 	andi	r20,r20,65535
   4c0f0:	423fffcc 	andi	r8,r8,65535
   4c0f4:	4519383a 	mul	r12,r8,r20
   4c0f8:	4147383a 	mul	r3,r8,r5
   4c0fc:	6d09383a 	mul	r4,r13,r20
   4c100:	600cd43a 	srli	r6,r12,16
   4c104:	2b5d383a 	mul	r14,r5,r13
   4c108:	20c9883a 	add	r4,r4,r3
   4c10c:	310d883a 	add	r6,r6,r4
   4c110:	30c0022e 	bgeu	r6,r3,4c11c <__muldf3+0x378>
   4c114:	00c00074 	movhi	r3,1
   4c118:	70dd883a 	add	r14,r14,r3
   4c11c:	8826d43a 	srli	r19,r17,16
   4c120:	8bffffcc 	andi	r15,r17,65535
   4c124:	7d23383a 	mul	r17,r15,r20
   4c128:	7949383a 	mul	r4,r15,r5
   4c12c:	9d29383a 	mul	r20,r19,r20
   4c130:	8814d43a 	srli	r10,r17,16
   4c134:	3012943a 	slli	r9,r6,16
   4c138:	a129883a 	add	r20,r20,r4
   4c13c:	633fffcc 	andi	r12,r12,65535
   4c140:	5515883a 	add	r10,r10,r20
   4c144:	3006d43a 	srli	r3,r6,16
   4c148:	4b13883a 	add	r9,r9,r12
   4c14c:	2ccb383a 	mul	r5,r5,r19
   4c150:	5100022e 	bgeu	r10,r4,4c15c <__muldf3+0x3b8>
   4c154:	01000074 	movhi	r4,1
   4c158:	290b883a 	add	r5,r5,r4
   4c15c:	802ad43a 	srli	r21,r16,16
   4c160:	843fffcc 	andi	r16,r16,65535
   4c164:	440d383a 	mul	r6,r8,r16
   4c168:	4565383a 	mul	r18,r8,r21
   4c16c:	8349383a 	mul	r4,r16,r13
   4c170:	500e943a 	slli	r7,r10,16
   4c174:	3010d43a 	srli	r8,r6,16
   4c178:	5028d43a 	srli	r20,r10,16
   4c17c:	2489883a 	add	r4,r4,r18
   4c180:	8abfffcc 	andi	r10,r17,65535
   4c184:	3a95883a 	add	r10,r7,r10
   4c188:	4119883a 	add	r12,r8,r4
   4c18c:	a169883a 	add	r20,r20,r5
   4c190:	1a87883a 	add	r3,r3,r10
   4c194:	6d5b383a 	mul	r13,r13,r21
   4c198:	6480022e 	bgeu	r12,r18,4c1a4 <__muldf3+0x400>
   4c19c:	01000074 	movhi	r4,1
   4c1a0:	691b883a 	add	r13,r13,r4
   4c1a4:	7c25383a 	mul	r18,r15,r16
   4c1a8:	7d4b383a 	mul	r5,r15,r21
   4c1ac:	84cf383a 	mul	r7,r16,r19
   4c1b0:	901ed43a 	srli	r15,r18,16
   4c1b4:	6008d43a 	srli	r4,r12,16
   4c1b8:	6010943a 	slli	r8,r12,16
   4c1bc:	394f883a 	add	r7,r7,r5
   4c1c0:	333fffcc 	andi	r12,r6,65535
   4c1c4:	79df883a 	add	r15,r15,r7
   4c1c8:	235b883a 	add	r13,r4,r13
   4c1cc:	9d63383a 	mul	r17,r19,r21
   4c1d0:	4309883a 	add	r4,r8,r12
   4c1d4:	7940022e 	bgeu	r15,r5,4c1e0 <__muldf3+0x43c>
   4c1d8:	01400074 	movhi	r5,1
   4c1dc:	8963883a 	add	r17,r17,r5
   4c1e0:	780a943a 	slli	r5,r15,16
   4c1e4:	91bfffcc 	andi	r6,r18,65535
   4c1e8:	70c7883a 	add	r3,r14,r3
   4c1ec:	298d883a 	add	r6,r5,r6
   4c1f0:	1a8f803a 	cmpltu	r7,r3,r10
   4c1f4:	350b883a 	add	r5,r6,r20
   4c1f8:	20c7883a 	add	r3,r4,r3
   4c1fc:	3955883a 	add	r10,r7,r5
   4c200:	1909803a 	cmpltu	r4,r3,r4
   4c204:	6a91883a 	add	r8,r13,r10
   4c208:	780cd43a 	srli	r6,r15,16
   4c20c:	2219883a 	add	r12,r4,r8
   4c210:	2d0b803a 	cmpltu	r5,r5,r20
   4c214:	51cf803a 	cmpltu	r7,r10,r7
   4c218:	29ceb03a 	or	r7,r5,r7
   4c21c:	4351803a 	cmpltu	r8,r8,r13
   4c220:	610b803a 	cmpltu	r5,r12,r4
   4c224:	4148b03a 	or	r4,r8,r5
   4c228:	398f883a 	add	r7,r7,r6
   4c22c:	3909883a 	add	r4,r7,r4
   4c230:	1810927a 	slli	r8,r3,9
   4c234:	2449883a 	add	r4,r4,r17
   4c238:	2008927a 	slli	r4,r4,9
   4c23c:	6022d5fa 	srli	r17,r12,23
   4c240:	1806d5fa 	srli	r3,r3,23
   4c244:	4252b03a 	or	r9,r8,r9
   4c248:	600a927a 	slli	r5,r12,9
   4c24c:	4810c03a 	cmpne	r8,r9,zero
   4c250:	2462b03a 	or	r17,r4,r17
   4c254:	40c6b03a 	or	r3,r8,r3
   4c258:	8900402c 	andhi	r4,r17,256
   4c25c:	1950b03a 	or	r8,r3,r5
   4c260:	20000726 	beq	r4,zero,4c280 <__muldf3+0x4dc>
   4c264:	4006d07a 	srli	r3,r8,1
   4c268:	880497fa 	slli	r2,r17,31
   4c26c:	4200004c 	andi	r8,r8,1
   4c270:	8822d07a 	srli	r17,r17,1
   4c274:	1a10b03a 	or	r8,r3,r8
   4c278:	1210b03a 	or	r8,r2,r8
   4c27c:	5805883a 	mov	r2,r11
   4c280:	1140ffc4 	addi	r5,r2,1023
   4c284:	0140440e 	bge	zero,r5,4c398 <__muldf3+0x5f4>
   4c288:	40c001cc 	andi	r3,r8,7
   4c28c:	18000726 	beq	r3,zero,4c2ac <__muldf3+0x508>
   4c290:	40c003cc 	andi	r3,r8,15
   4c294:	01000104 	movi	r4,4
   4c298:	19000426 	beq	r3,r4,4c2ac <__muldf3+0x508>
   4c29c:	4107883a 	add	r3,r8,r4
   4c2a0:	1a11803a 	cmpltu	r8,r3,r8
   4c2a4:	8a23883a 	add	r17,r17,r8
   4c2a8:	1811883a 	mov	r8,r3
   4c2ac:	88c0402c 	andhi	r3,r17,256
   4c2b0:	18000426 	beq	r3,zero,4c2c4 <__muldf3+0x520>
   4c2b4:	11410004 	addi	r5,r2,1024
   4c2b8:	00bfc034 	movhi	r2,65280
   4c2bc:	10bfffc4 	addi	r2,r2,-1
   4c2c0:	88a2703a 	and	r17,r17,r2
   4c2c4:	0081ff84 	movi	r2,2046
   4c2c8:	117f6416 	blt	r2,r5,4c05c <__alt_data_end+0xfffe4f5c>
   4c2cc:	8828977a 	slli	r20,r17,29
   4c2d0:	4010d0fa 	srli	r8,r8,3
   4c2d4:	8822927a 	slli	r17,r17,9
   4c2d8:	2881ffcc 	andi	r2,r5,2047
   4c2dc:	a228b03a 	or	r20,r20,r8
   4c2e0:	880ad33a 	srli	r5,r17,12
   4c2e4:	b02b883a 	mov	r21,r22
   4c2e8:	003f0d06 	br	4bf20 <__alt_data_end+0xfffe4e20>
   4c2ec:	8080022c 	andhi	r2,r16,8
   4c2f0:	10000926 	beq	r2,zero,4c318 <__muldf3+0x574>
   4c2f4:	8880022c 	andhi	r2,r17,8
   4c2f8:	1000071e 	bne	r2,zero,4c318 <__muldf3+0x574>
   4c2fc:	00800434 	movhi	r2,16
   4c300:	89400234 	orhi	r5,r17,8
   4c304:	10bfffc4 	addi	r2,r2,-1
   4c308:	b82b883a 	mov	r21,r23
   4c30c:	288a703a 	and	r5,r5,r2
   4c310:	4029883a 	mov	r20,r8
   4c314:	003f6806 	br	4c0b8 <__alt_data_end+0xfffe4fb8>
   4c318:	00800434 	movhi	r2,16
   4c31c:	81400234 	orhi	r5,r16,8
   4c320:	10bfffc4 	addi	r2,r2,-1
   4c324:	288a703a 	and	r5,r5,r2
   4c328:	003f6306 	br	4c0b8 <__alt_data_end+0xfffe4fb8>
   4c32c:	147ff604 	addi	r17,r2,-40
   4c330:	3462983a 	sll	r17,r6,r17
   4c334:	0011883a 	mov	r8,zero
   4c338:	003f4406 	br	4c04c <__alt_data_end+0xfffe4f4c>
   4c33c:	3009883a 	mov	r4,r6
   4c340:	d9800215 	stw	r6,8(sp)
   4c344:	da400115 	stw	r9,4(sp)
   4c348:	da800015 	stw	r10,0(sp)
   4c34c:	004cfbc0 	call	4cfbc <__clzsi2>
   4c350:	10800804 	addi	r2,r2,32
   4c354:	da800017 	ldw	r10,0(sp)
   4c358:	da400117 	ldw	r9,4(sp)
   4c35c:	d9800217 	ldw	r6,8(sp)
   4c360:	003f3006 	br	4c024 <__alt_data_end+0xfffe4f24>
   4c364:	143ff604 	addi	r16,r2,-40
   4c368:	9c20983a 	sll	r16,r19,r16
   4c36c:	0029883a 	mov	r20,zero
   4c370:	003f1606 	br	4bfcc <__alt_data_end+0xfffe4ecc>
   4c374:	d9800215 	stw	r6,8(sp)
   4c378:	d9c00015 	stw	r7,0(sp)
   4c37c:	da400115 	stw	r9,4(sp)
   4c380:	004cfbc0 	call	4cfbc <__clzsi2>
   4c384:	10800804 	addi	r2,r2,32
   4c388:	da400117 	ldw	r9,4(sp)
   4c38c:	d9c00017 	ldw	r7,0(sp)
   4c390:	d9800217 	ldw	r6,8(sp)
   4c394:	003f0306 	br	4bfa4 <__alt_data_end+0xfffe4ea4>
   4c398:	00c00044 	movi	r3,1
   4c39c:	1947c83a 	sub	r3,r3,r5
   4c3a0:	00800e04 	movi	r2,56
   4c3a4:	10feda16 	blt	r2,r3,4bf10 <__alt_data_end+0xfffe4e10>
   4c3a8:	008007c4 	movi	r2,31
   4c3ac:	10c01b16 	blt	r2,r3,4c41c <__muldf3+0x678>
   4c3b0:	00800804 	movi	r2,32
   4c3b4:	10c5c83a 	sub	r2,r2,r3
   4c3b8:	888a983a 	sll	r5,r17,r2
   4c3bc:	40c8d83a 	srl	r4,r8,r3
   4c3c0:	4084983a 	sll	r2,r8,r2
   4c3c4:	88e2d83a 	srl	r17,r17,r3
   4c3c8:	2906b03a 	or	r3,r5,r4
   4c3cc:	1004c03a 	cmpne	r2,r2,zero
   4c3d0:	1886b03a 	or	r3,r3,r2
   4c3d4:	188001cc 	andi	r2,r3,7
   4c3d8:	10000726 	beq	r2,zero,4c3f8 <__muldf3+0x654>
   4c3dc:	188003cc 	andi	r2,r3,15
   4c3e0:	01000104 	movi	r4,4
   4c3e4:	11000426 	beq	r2,r4,4c3f8 <__muldf3+0x654>
   4c3e8:	1805883a 	mov	r2,r3
   4c3ec:	10c00104 	addi	r3,r2,4
   4c3f0:	1885803a 	cmpltu	r2,r3,r2
   4c3f4:	88a3883a 	add	r17,r17,r2
   4c3f8:	8880202c 	andhi	r2,r17,128
   4c3fc:	10001c26 	beq	r2,zero,4c470 <__muldf3+0x6cc>
   4c400:	b02b883a 	mov	r21,r22
   4c404:	00800044 	movi	r2,1
   4c408:	000b883a 	mov	r5,zero
   4c40c:	0029883a 	mov	r20,zero
   4c410:	003ec306 	br	4bf20 <__alt_data_end+0xfffe4e20>
   4c414:	5805883a 	mov	r2,r11
   4c418:	003f9906 	br	4c280 <__alt_data_end+0xfffe5180>
   4c41c:	00bff844 	movi	r2,-31
   4c420:	1145c83a 	sub	r2,r2,r5
   4c424:	8888d83a 	srl	r4,r17,r2
   4c428:	00800804 	movi	r2,32
   4c42c:	18801a26 	beq	r3,r2,4c498 <__muldf3+0x6f4>
   4c430:	00801004 	movi	r2,64
   4c434:	10c5c83a 	sub	r2,r2,r3
   4c438:	8884983a 	sll	r2,r17,r2
   4c43c:	1204b03a 	or	r2,r2,r8
   4c440:	1004c03a 	cmpne	r2,r2,zero
   4c444:	2084b03a 	or	r2,r4,r2
   4c448:	144001cc 	andi	r17,r2,7
   4c44c:	88000d1e 	bne	r17,zero,4c484 <__muldf3+0x6e0>
   4c450:	000b883a 	mov	r5,zero
   4c454:	1028d0fa 	srli	r20,r2,3
   4c458:	b02b883a 	mov	r21,r22
   4c45c:	0005883a 	mov	r2,zero
   4c460:	a468b03a 	or	r20,r20,r17
   4c464:	003eae06 	br	4bf20 <__alt_data_end+0xfffe4e20>
   4c468:	1007883a 	mov	r3,r2
   4c46c:	0023883a 	mov	r17,zero
   4c470:	880a927a 	slli	r5,r17,9
   4c474:	1805883a 	mov	r2,r3
   4c478:	8822977a 	slli	r17,r17,29
   4c47c:	280ad33a 	srli	r5,r5,12
   4c480:	003ff406 	br	4c454 <__alt_data_end+0xfffe5354>
   4c484:	10c003cc 	andi	r3,r2,15
   4c488:	01000104 	movi	r4,4
   4c48c:	193ff626 	beq	r3,r4,4c468 <__alt_data_end+0xfffe5368>
   4c490:	0023883a 	mov	r17,zero
   4c494:	003fd506 	br	4c3ec <__alt_data_end+0xfffe52ec>
   4c498:	0005883a 	mov	r2,zero
   4c49c:	003fe706 	br	4c43c <__alt_data_end+0xfffe533c>
   4c4a0:	00800434 	movhi	r2,16
   4c4a4:	89400234 	orhi	r5,r17,8
   4c4a8:	10bfffc4 	addi	r2,r2,-1
   4c4ac:	b02b883a 	mov	r21,r22
   4c4b0:	288a703a 	and	r5,r5,r2
   4c4b4:	4029883a 	mov	r20,r8
   4c4b8:	003eff06 	br	4c0b8 <__alt_data_end+0xfffe4fb8>

0004c4bc <__subdf3>:
   4c4bc:	02000434 	movhi	r8,16
   4c4c0:	423fffc4 	addi	r8,r8,-1
   4c4c4:	defffb04 	addi	sp,sp,-20
   4c4c8:	2a14703a 	and	r10,r5,r8
   4c4cc:	3812d53a 	srli	r9,r7,20
   4c4d0:	3a10703a 	and	r8,r7,r8
   4c4d4:	2006d77a 	srli	r3,r4,29
   4c4d8:	3004d77a 	srli	r2,r6,29
   4c4dc:	dc000015 	stw	r16,0(sp)
   4c4e0:	501490fa 	slli	r10,r10,3
   4c4e4:	2820d53a 	srli	r16,r5,20
   4c4e8:	401090fa 	slli	r8,r8,3
   4c4ec:	dc800215 	stw	r18,8(sp)
   4c4f0:	dc400115 	stw	r17,4(sp)
   4c4f4:	dfc00415 	stw	ra,16(sp)
   4c4f8:	202290fa 	slli	r17,r4,3
   4c4fc:	dcc00315 	stw	r19,12(sp)
   4c500:	4a41ffcc 	andi	r9,r9,2047
   4c504:	0101ffc4 	movi	r4,2047
   4c508:	2824d7fa 	srli	r18,r5,31
   4c50c:	8401ffcc 	andi	r16,r16,2047
   4c510:	50c6b03a 	or	r3,r10,r3
   4c514:	380ed7fa 	srli	r7,r7,31
   4c518:	408ab03a 	or	r5,r8,r2
   4c51c:	300c90fa 	slli	r6,r6,3
   4c520:	49009626 	beq	r9,r4,4c77c <__subdf3+0x2c0>
   4c524:	39c0005c 	xori	r7,r7,1
   4c528:	8245c83a 	sub	r2,r16,r9
   4c52c:	3c807426 	beq	r7,r18,4c700 <__subdf3+0x244>
   4c530:	0080af0e 	bge	zero,r2,4c7f0 <__subdf3+0x334>
   4c534:	48002a1e 	bne	r9,zero,4c5e0 <__subdf3+0x124>
   4c538:	2988b03a 	or	r4,r5,r6
   4c53c:	20009a1e 	bne	r4,zero,4c7a8 <__subdf3+0x2ec>
   4c540:	888001cc 	andi	r2,r17,7
   4c544:	10000726 	beq	r2,zero,4c564 <__subdf3+0xa8>
   4c548:	888003cc 	andi	r2,r17,15
   4c54c:	01000104 	movi	r4,4
   4c550:	11000426 	beq	r2,r4,4c564 <__subdf3+0xa8>
   4c554:	890b883a 	add	r5,r17,r4
   4c558:	2c63803a 	cmpltu	r17,r5,r17
   4c55c:	1c47883a 	add	r3,r3,r17
   4c560:	2823883a 	mov	r17,r5
   4c564:	1880202c 	andhi	r2,r3,128
   4c568:	10005926 	beq	r2,zero,4c6d0 <__subdf3+0x214>
   4c56c:	84000044 	addi	r16,r16,1
   4c570:	0081ffc4 	movi	r2,2047
   4c574:	8080be26 	beq	r16,r2,4c870 <__subdf3+0x3b4>
   4c578:	017fe034 	movhi	r5,65408
   4c57c:	297fffc4 	addi	r5,r5,-1
   4c580:	1946703a 	and	r3,r3,r5
   4c584:	1804977a 	slli	r2,r3,29
   4c588:	1806927a 	slli	r3,r3,9
   4c58c:	8822d0fa 	srli	r17,r17,3
   4c590:	8401ffcc 	andi	r16,r16,2047
   4c594:	180ad33a 	srli	r5,r3,12
   4c598:	9100004c 	andi	r4,r18,1
   4c59c:	1444b03a 	or	r2,r2,r17
   4c5a0:	80c1ffcc 	andi	r3,r16,2047
   4c5a4:	1820953a 	slli	r16,r3,20
   4c5a8:	20c03fcc 	andi	r3,r4,255
   4c5ac:	180897fa 	slli	r4,r3,31
   4c5b0:	00c00434 	movhi	r3,16
   4c5b4:	18ffffc4 	addi	r3,r3,-1
   4c5b8:	28c6703a 	and	r3,r5,r3
   4c5bc:	1c06b03a 	or	r3,r3,r16
   4c5c0:	1906b03a 	or	r3,r3,r4
   4c5c4:	dfc00417 	ldw	ra,16(sp)
   4c5c8:	dcc00317 	ldw	r19,12(sp)
   4c5cc:	dc800217 	ldw	r18,8(sp)
   4c5d0:	dc400117 	ldw	r17,4(sp)
   4c5d4:	dc000017 	ldw	r16,0(sp)
   4c5d8:	dec00504 	addi	sp,sp,20
   4c5dc:	f800283a 	ret
   4c5e0:	0101ffc4 	movi	r4,2047
   4c5e4:	813fd626 	beq	r16,r4,4c540 <__alt_data_end+0xfffe5440>
   4c5e8:	29402034 	orhi	r5,r5,128
   4c5ec:	01000e04 	movi	r4,56
   4c5f0:	2080a316 	blt	r4,r2,4c880 <__subdf3+0x3c4>
   4c5f4:	010007c4 	movi	r4,31
   4c5f8:	2080c616 	blt	r4,r2,4c914 <__subdf3+0x458>
   4c5fc:	01000804 	movi	r4,32
   4c600:	2089c83a 	sub	r4,r4,r2
   4c604:	2910983a 	sll	r8,r5,r4
   4c608:	308ed83a 	srl	r7,r6,r2
   4c60c:	3108983a 	sll	r4,r6,r4
   4c610:	2884d83a 	srl	r2,r5,r2
   4c614:	41ccb03a 	or	r6,r8,r7
   4c618:	2008c03a 	cmpne	r4,r4,zero
   4c61c:	310cb03a 	or	r6,r6,r4
   4c620:	898dc83a 	sub	r6,r17,r6
   4c624:	89a3803a 	cmpltu	r17,r17,r6
   4c628:	1887c83a 	sub	r3,r3,r2
   4c62c:	1c47c83a 	sub	r3,r3,r17
   4c630:	3023883a 	mov	r17,r6
   4c634:	1880202c 	andhi	r2,r3,128
   4c638:	10002326 	beq	r2,zero,4c6c8 <__subdf3+0x20c>
   4c63c:	04c02034 	movhi	r19,128
   4c640:	9cffffc4 	addi	r19,r19,-1
   4c644:	1ce6703a 	and	r19,r3,r19
   4c648:	98007a26 	beq	r19,zero,4c834 <__subdf3+0x378>
   4c64c:	9809883a 	mov	r4,r19
   4c650:	004cfbc0 	call	4cfbc <__clzsi2>
   4c654:	113ffe04 	addi	r4,r2,-8
   4c658:	00c007c4 	movi	r3,31
   4c65c:	19007b16 	blt	r3,r4,4c84c <__subdf3+0x390>
   4c660:	00800804 	movi	r2,32
   4c664:	1105c83a 	sub	r2,r2,r4
   4c668:	8884d83a 	srl	r2,r17,r2
   4c66c:	9906983a 	sll	r3,r19,r4
   4c670:	8922983a 	sll	r17,r17,r4
   4c674:	10c4b03a 	or	r2,r2,r3
   4c678:	24007816 	blt	r4,r16,4c85c <__subdf3+0x3a0>
   4c67c:	2421c83a 	sub	r16,r4,r16
   4c680:	80c00044 	addi	r3,r16,1
   4c684:	010007c4 	movi	r4,31
   4c688:	20c09516 	blt	r4,r3,4c8e0 <__subdf3+0x424>
   4c68c:	01400804 	movi	r5,32
   4c690:	28cbc83a 	sub	r5,r5,r3
   4c694:	88c8d83a 	srl	r4,r17,r3
   4c698:	8962983a 	sll	r17,r17,r5
   4c69c:	114a983a 	sll	r5,r2,r5
   4c6a0:	10c6d83a 	srl	r3,r2,r3
   4c6a4:	8804c03a 	cmpne	r2,r17,zero
   4c6a8:	290ab03a 	or	r5,r5,r4
   4c6ac:	28a2b03a 	or	r17,r5,r2
   4c6b0:	0021883a 	mov	r16,zero
   4c6b4:	003fa206 	br	4c540 <__alt_data_end+0xfffe5440>
   4c6b8:	2090b03a 	or	r8,r4,r2
   4c6bc:	40018e26 	beq	r8,zero,4ccf8 <__subdf3+0x83c>
   4c6c0:	1007883a 	mov	r3,r2
   4c6c4:	2023883a 	mov	r17,r4
   4c6c8:	888001cc 	andi	r2,r17,7
   4c6cc:	103f9e1e 	bne	r2,zero,4c548 <__alt_data_end+0xfffe5448>
   4c6d0:	1804977a 	slli	r2,r3,29
   4c6d4:	8822d0fa 	srli	r17,r17,3
   4c6d8:	1810d0fa 	srli	r8,r3,3
   4c6dc:	9100004c 	andi	r4,r18,1
   4c6e0:	1444b03a 	or	r2,r2,r17
   4c6e4:	00c1ffc4 	movi	r3,2047
   4c6e8:	80c02826 	beq	r16,r3,4c78c <__subdf3+0x2d0>
   4c6ec:	01400434 	movhi	r5,16
   4c6f0:	297fffc4 	addi	r5,r5,-1
   4c6f4:	80e0703a 	and	r16,r16,r3
   4c6f8:	414a703a 	and	r5,r8,r5
   4c6fc:	003fa806 	br	4c5a0 <__alt_data_end+0xfffe54a0>
   4c700:	0080630e 	bge	zero,r2,4c890 <__subdf3+0x3d4>
   4c704:	48003026 	beq	r9,zero,4c7c8 <__subdf3+0x30c>
   4c708:	0101ffc4 	movi	r4,2047
   4c70c:	813f8c26 	beq	r16,r4,4c540 <__alt_data_end+0xfffe5440>
   4c710:	29402034 	orhi	r5,r5,128
   4c714:	01000e04 	movi	r4,56
   4c718:	2080a90e 	bge	r4,r2,4c9c0 <__subdf3+0x504>
   4c71c:	298cb03a 	or	r6,r5,r6
   4c720:	3012c03a 	cmpne	r9,r6,zero
   4c724:	0005883a 	mov	r2,zero
   4c728:	4c53883a 	add	r9,r9,r17
   4c72c:	4c63803a 	cmpltu	r17,r9,r17
   4c730:	10c7883a 	add	r3,r2,r3
   4c734:	88c7883a 	add	r3,r17,r3
   4c738:	4823883a 	mov	r17,r9
   4c73c:	1880202c 	andhi	r2,r3,128
   4c740:	1000d026 	beq	r2,zero,4ca84 <__subdf3+0x5c8>
   4c744:	84000044 	addi	r16,r16,1
   4c748:	0081ffc4 	movi	r2,2047
   4c74c:	8080fe26 	beq	r16,r2,4cb48 <__subdf3+0x68c>
   4c750:	00bfe034 	movhi	r2,65408
   4c754:	10bfffc4 	addi	r2,r2,-1
   4c758:	1886703a 	and	r3,r3,r2
   4c75c:	880ad07a 	srli	r5,r17,1
   4c760:	180497fa 	slli	r2,r3,31
   4c764:	8900004c 	andi	r4,r17,1
   4c768:	2922b03a 	or	r17,r5,r4
   4c76c:	1806d07a 	srli	r3,r3,1
   4c770:	1462b03a 	or	r17,r2,r17
   4c774:	3825883a 	mov	r18,r7
   4c778:	003f7106 	br	4c540 <__alt_data_end+0xfffe5440>
   4c77c:	2984b03a 	or	r2,r5,r6
   4c780:	103f6826 	beq	r2,zero,4c524 <__alt_data_end+0xfffe5424>
   4c784:	39c03fcc 	andi	r7,r7,255
   4c788:	003f6706 	br	4c528 <__alt_data_end+0xfffe5428>
   4c78c:	4086b03a 	or	r3,r8,r2
   4c790:	18015226 	beq	r3,zero,4ccdc <__subdf3+0x820>
   4c794:	00c00434 	movhi	r3,16
   4c798:	41400234 	orhi	r5,r8,8
   4c79c:	18ffffc4 	addi	r3,r3,-1
   4c7a0:	28ca703a 	and	r5,r5,r3
   4c7a4:	003f7e06 	br	4c5a0 <__alt_data_end+0xfffe54a0>
   4c7a8:	10bfffc4 	addi	r2,r2,-1
   4c7ac:	1000491e 	bne	r2,zero,4c8d4 <__subdf3+0x418>
   4c7b0:	898fc83a 	sub	r7,r17,r6
   4c7b4:	89e3803a 	cmpltu	r17,r17,r7
   4c7b8:	1947c83a 	sub	r3,r3,r5
   4c7bc:	1c47c83a 	sub	r3,r3,r17
   4c7c0:	3823883a 	mov	r17,r7
   4c7c4:	003f9b06 	br	4c634 <__alt_data_end+0xfffe5534>
   4c7c8:	2988b03a 	or	r4,r5,r6
   4c7cc:	203f5c26 	beq	r4,zero,4c540 <__alt_data_end+0xfffe5440>
   4c7d0:	10bfffc4 	addi	r2,r2,-1
   4c7d4:	1000931e 	bne	r2,zero,4ca24 <__subdf3+0x568>
   4c7d8:	898d883a 	add	r6,r17,r6
   4c7dc:	3463803a 	cmpltu	r17,r6,r17
   4c7e0:	1947883a 	add	r3,r3,r5
   4c7e4:	88c7883a 	add	r3,r17,r3
   4c7e8:	3023883a 	mov	r17,r6
   4c7ec:	003fd306 	br	4c73c <__alt_data_end+0xfffe563c>
   4c7f0:	1000541e 	bne	r2,zero,4c944 <__subdf3+0x488>
   4c7f4:	80800044 	addi	r2,r16,1
   4c7f8:	1081ffcc 	andi	r2,r2,2047
   4c7fc:	01000044 	movi	r4,1
   4c800:	2080a20e 	bge	r4,r2,4ca8c <__subdf3+0x5d0>
   4c804:	8989c83a 	sub	r4,r17,r6
   4c808:	8905803a 	cmpltu	r2,r17,r4
   4c80c:	1967c83a 	sub	r19,r3,r5
   4c810:	98a7c83a 	sub	r19,r19,r2
   4c814:	9880202c 	andhi	r2,r19,128
   4c818:	10006326 	beq	r2,zero,4c9a8 <__subdf3+0x4ec>
   4c81c:	3463c83a 	sub	r17,r6,r17
   4c820:	28c7c83a 	sub	r3,r5,r3
   4c824:	344d803a 	cmpltu	r6,r6,r17
   4c828:	19a7c83a 	sub	r19,r3,r6
   4c82c:	3825883a 	mov	r18,r7
   4c830:	983f861e 	bne	r19,zero,4c64c <__alt_data_end+0xfffe554c>
   4c834:	8809883a 	mov	r4,r17
   4c838:	004cfbc0 	call	4cfbc <__clzsi2>
   4c83c:	10800804 	addi	r2,r2,32
   4c840:	113ffe04 	addi	r4,r2,-8
   4c844:	00c007c4 	movi	r3,31
   4c848:	193f850e 	bge	r3,r4,4c660 <__alt_data_end+0xfffe5560>
   4c84c:	10bff604 	addi	r2,r2,-40
   4c850:	8884983a 	sll	r2,r17,r2
   4c854:	0023883a 	mov	r17,zero
   4c858:	243f880e 	bge	r4,r16,4c67c <__alt_data_end+0xfffe557c>
   4c85c:	00ffe034 	movhi	r3,65408
   4c860:	18ffffc4 	addi	r3,r3,-1
   4c864:	8121c83a 	sub	r16,r16,r4
   4c868:	10c6703a 	and	r3,r2,r3
   4c86c:	003f3406 	br	4c540 <__alt_data_end+0xfffe5440>
   4c870:	9100004c 	andi	r4,r18,1
   4c874:	000b883a 	mov	r5,zero
   4c878:	0005883a 	mov	r2,zero
   4c87c:	003f4806 	br	4c5a0 <__alt_data_end+0xfffe54a0>
   4c880:	298cb03a 	or	r6,r5,r6
   4c884:	300cc03a 	cmpne	r6,r6,zero
   4c888:	0005883a 	mov	r2,zero
   4c88c:	003f6406 	br	4c620 <__alt_data_end+0xfffe5520>
   4c890:	10009a1e 	bne	r2,zero,4cafc <__subdf3+0x640>
   4c894:	82400044 	addi	r9,r16,1
   4c898:	4881ffcc 	andi	r2,r9,2047
   4c89c:	02800044 	movi	r10,1
   4c8a0:	5080670e 	bge	r10,r2,4ca40 <__subdf3+0x584>
   4c8a4:	0081ffc4 	movi	r2,2047
   4c8a8:	4880af26 	beq	r9,r2,4cb68 <__subdf3+0x6ac>
   4c8ac:	898d883a 	add	r6,r17,r6
   4c8b0:	1945883a 	add	r2,r3,r5
   4c8b4:	3447803a 	cmpltu	r3,r6,r17
   4c8b8:	1887883a 	add	r3,r3,r2
   4c8bc:	182297fa 	slli	r17,r3,31
   4c8c0:	300cd07a 	srli	r6,r6,1
   4c8c4:	1806d07a 	srli	r3,r3,1
   4c8c8:	4821883a 	mov	r16,r9
   4c8cc:	89a2b03a 	or	r17,r17,r6
   4c8d0:	003f1b06 	br	4c540 <__alt_data_end+0xfffe5440>
   4c8d4:	0101ffc4 	movi	r4,2047
   4c8d8:	813f441e 	bne	r16,r4,4c5ec <__alt_data_end+0xfffe54ec>
   4c8dc:	003f1806 	br	4c540 <__alt_data_end+0xfffe5440>
   4c8e0:	843ff844 	addi	r16,r16,-31
   4c8e4:	01400804 	movi	r5,32
   4c8e8:	1408d83a 	srl	r4,r2,r16
   4c8ec:	19405026 	beq	r3,r5,4ca30 <__subdf3+0x574>
   4c8f0:	01401004 	movi	r5,64
   4c8f4:	28c7c83a 	sub	r3,r5,r3
   4c8f8:	10c4983a 	sll	r2,r2,r3
   4c8fc:	88a2b03a 	or	r17,r17,r2
   4c900:	8822c03a 	cmpne	r17,r17,zero
   4c904:	2462b03a 	or	r17,r4,r17
   4c908:	0007883a 	mov	r3,zero
   4c90c:	0021883a 	mov	r16,zero
   4c910:	003f6d06 	br	4c6c8 <__alt_data_end+0xfffe55c8>
   4c914:	11fff804 	addi	r7,r2,-32
   4c918:	01000804 	movi	r4,32
   4c91c:	29ced83a 	srl	r7,r5,r7
   4c920:	11004526 	beq	r2,r4,4ca38 <__subdf3+0x57c>
   4c924:	01001004 	movi	r4,64
   4c928:	2089c83a 	sub	r4,r4,r2
   4c92c:	2904983a 	sll	r2,r5,r4
   4c930:	118cb03a 	or	r6,r2,r6
   4c934:	300cc03a 	cmpne	r6,r6,zero
   4c938:	398cb03a 	or	r6,r7,r6
   4c93c:	0005883a 	mov	r2,zero
   4c940:	003f3706 	br	4c620 <__alt_data_end+0xfffe5520>
   4c944:	80002a26 	beq	r16,zero,4c9f0 <__subdf3+0x534>
   4c948:	0101ffc4 	movi	r4,2047
   4c94c:	49006626 	beq	r9,r4,4cae8 <__subdf3+0x62c>
   4c950:	0085c83a 	sub	r2,zero,r2
   4c954:	18c02034 	orhi	r3,r3,128
   4c958:	01000e04 	movi	r4,56
   4c95c:	20807e16 	blt	r4,r2,4cb58 <__subdf3+0x69c>
   4c960:	010007c4 	movi	r4,31
   4c964:	2080e716 	blt	r4,r2,4cd04 <__subdf3+0x848>
   4c968:	01000804 	movi	r4,32
   4c96c:	2089c83a 	sub	r4,r4,r2
   4c970:	1914983a 	sll	r10,r3,r4
   4c974:	8890d83a 	srl	r8,r17,r2
   4c978:	8908983a 	sll	r4,r17,r4
   4c97c:	1884d83a 	srl	r2,r3,r2
   4c980:	5222b03a 	or	r17,r10,r8
   4c984:	2006c03a 	cmpne	r3,r4,zero
   4c988:	88e2b03a 	or	r17,r17,r3
   4c98c:	3463c83a 	sub	r17,r6,r17
   4c990:	2885c83a 	sub	r2,r5,r2
   4c994:	344d803a 	cmpltu	r6,r6,r17
   4c998:	1187c83a 	sub	r3,r2,r6
   4c99c:	4821883a 	mov	r16,r9
   4c9a0:	3825883a 	mov	r18,r7
   4c9a4:	003f2306 	br	4c634 <__alt_data_end+0xfffe5534>
   4c9a8:	24d0b03a 	or	r8,r4,r19
   4c9ac:	40001b1e 	bne	r8,zero,4ca1c <__subdf3+0x560>
   4c9b0:	0005883a 	mov	r2,zero
   4c9b4:	0009883a 	mov	r4,zero
   4c9b8:	0021883a 	mov	r16,zero
   4c9bc:	003f4906 	br	4c6e4 <__alt_data_end+0xfffe55e4>
   4c9c0:	010007c4 	movi	r4,31
   4c9c4:	20803a16 	blt	r4,r2,4cab0 <__subdf3+0x5f4>
   4c9c8:	01000804 	movi	r4,32
   4c9cc:	2089c83a 	sub	r4,r4,r2
   4c9d0:	2912983a 	sll	r9,r5,r4
   4c9d4:	3090d83a 	srl	r8,r6,r2
   4c9d8:	3108983a 	sll	r4,r6,r4
   4c9dc:	2884d83a 	srl	r2,r5,r2
   4c9e0:	4a12b03a 	or	r9,r9,r8
   4c9e4:	2008c03a 	cmpne	r4,r4,zero
   4c9e8:	4912b03a 	or	r9,r9,r4
   4c9ec:	003f4e06 	br	4c728 <__alt_data_end+0xfffe5628>
   4c9f0:	1c48b03a 	or	r4,r3,r17
   4c9f4:	20003c26 	beq	r4,zero,4cae8 <__subdf3+0x62c>
   4c9f8:	0084303a 	nor	r2,zero,r2
   4c9fc:	1000381e 	bne	r2,zero,4cae0 <__subdf3+0x624>
   4ca00:	3463c83a 	sub	r17,r6,r17
   4ca04:	28c5c83a 	sub	r2,r5,r3
   4ca08:	344d803a 	cmpltu	r6,r6,r17
   4ca0c:	1187c83a 	sub	r3,r2,r6
   4ca10:	4821883a 	mov	r16,r9
   4ca14:	3825883a 	mov	r18,r7
   4ca18:	003f0606 	br	4c634 <__alt_data_end+0xfffe5534>
   4ca1c:	2023883a 	mov	r17,r4
   4ca20:	003f0906 	br	4c648 <__alt_data_end+0xfffe5548>
   4ca24:	0101ffc4 	movi	r4,2047
   4ca28:	813f3a1e 	bne	r16,r4,4c714 <__alt_data_end+0xfffe5614>
   4ca2c:	003ec406 	br	4c540 <__alt_data_end+0xfffe5440>
   4ca30:	0005883a 	mov	r2,zero
   4ca34:	003fb106 	br	4c8fc <__alt_data_end+0xfffe57fc>
   4ca38:	0005883a 	mov	r2,zero
   4ca3c:	003fbc06 	br	4c930 <__alt_data_end+0xfffe5830>
   4ca40:	1c44b03a 	or	r2,r3,r17
   4ca44:	80008e1e 	bne	r16,zero,4cc80 <__subdf3+0x7c4>
   4ca48:	1000c826 	beq	r2,zero,4cd6c <__subdf3+0x8b0>
   4ca4c:	2984b03a 	or	r2,r5,r6
   4ca50:	103ebb26 	beq	r2,zero,4c540 <__alt_data_end+0xfffe5440>
   4ca54:	8989883a 	add	r4,r17,r6
   4ca58:	1945883a 	add	r2,r3,r5
   4ca5c:	2447803a 	cmpltu	r3,r4,r17
   4ca60:	1887883a 	add	r3,r3,r2
   4ca64:	1880202c 	andhi	r2,r3,128
   4ca68:	2023883a 	mov	r17,r4
   4ca6c:	103f1626 	beq	r2,zero,4c6c8 <__alt_data_end+0xfffe55c8>
   4ca70:	00bfe034 	movhi	r2,65408
   4ca74:	10bfffc4 	addi	r2,r2,-1
   4ca78:	5021883a 	mov	r16,r10
   4ca7c:	1886703a 	and	r3,r3,r2
   4ca80:	003eaf06 	br	4c540 <__alt_data_end+0xfffe5440>
   4ca84:	3825883a 	mov	r18,r7
   4ca88:	003f0f06 	br	4c6c8 <__alt_data_end+0xfffe55c8>
   4ca8c:	1c44b03a 	or	r2,r3,r17
   4ca90:	8000251e 	bne	r16,zero,4cb28 <__subdf3+0x66c>
   4ca94:	1000661e 	bne	r2,zero,4cc30 <__subdf3+0x774>
   4ca98:	2990b03a 	or	r8,r5,r6
   4ca9c:	40009626 	beq	r8,zero,4ccf8 <__subdf3+0x83c>
   4caa0:	2807883a 	mov	r3,r5
   4caa4:	3023883a 	mov	r17,r6
   4caa8:	3825883a 	mov	r18,r7
   4caac:	003ea406 	br	4c540 <__alt_data_end+0xfffe5440>
   4cab0:	127ff804 	addi	r9,r2,-32
   4cab4:	01000804 	movi	r4,32
   4cab8:	2a52d83a 	srl	r9,r5,r9
   4cabc:	11008c26 	beq	r2,r4,4ccf0 <__subdf3+0x834>
   4cac0:	01001004 	movi	r4,64
   4cac4:	2085c83a 	sub	r2,r4,r2
   4cac8:	2884983a 	sll	r2,r5,r2
   4cacc:	118cb03a 	or	r6,r2,r6
   4cad0:	300cc03a 	cmpne	r6,r6,zero
   4cad4:	4992b03a 	or	r9,r9,r6
   4cad8:	0005883a 	mov	r2,zero
   4cadc:	003f1206 	br	4c728 <__alt_data_end+0xfffe5628>
   4cae0:	0101ffc4 	movi	r4,2047
   4cae4:	493f9c1e 	bne	r9,r4,4c958 <__alt_data_end+0xfffe5858>
   4cae8:	2807883a 	mov	r3,r5
   4caec:	3023883a 	mov	r17,r6
   4caf0:	4821883a 	mov	r16,r9
   4caf4:	3825883a 	mov	r18,r7
   4caf8:	003e9106 	br	4c540 <__alt_data_end+0xfffe5440>
   4cafc:	80001f1e 	bne	r16,zero,4cb7c <__subdf3+0x6c0>
   4cb00:	1c48b03a 	or	r4,r3,r17
   4cb04:	20005a26 	beq	r4,zero,4cc70 <__subdf3+0x7b4>
   4cb08:	0084303a 	nor	r2,zero,r2
   4cb0c:	1000561e 	bne	r2,zero,4cc68 <__subdf3+0x7ac>
   4cb10:	89a3883a 	add	r17,r17,r6
   4cb14:	1945883a 	add	r2,r3,r5
   4cb18:	898d803a 	cmpltu	r6,r17,r6
   4cb1c:	3087883a 	add	r3,r6,r2
   4cb20:	4821883a 	mov	r16,r9
   4cb24:	003f0506 	br	4c73c <__alt_data_end+0xfffe563c>
   4cb28:	10002b1e 	bne	r2,zero,4cbd8 <__subdf3+0x71c>
   4cb2c:	2984b03a 	or	r2,r5,r6
   4cb30:	10008026 	beq	r2,zero,4cd34 <__subdf3+0x878>
   4cb34:	2807883a 	mov	r3,r5
   4cb38:	3023883a 	mov	r17,r6
   4cb3c:	3825883a 	mov	r18,r7
   4cb40:	0401ffc4 	movi	r16,2047
   4cb44:	003e7e06 	br	4c540 <__alt_data_end+0xfffe5440>
   4cb48:	3809883a 	mov	r4,r7
   4cb4c:	0011883a 	mov	r8,zero
   4cb50:	0005883a 	mov	r2,zero
   4cb54:	003ee306 	br	4c6e4 <__alt_data_end+0xfffe55e4>
   4cb58:	1c62b03a 	or	r17,r3,r17
   4cb5c:	8822c03a 	cmpne	r17,r17,zero
   4cb60:	0005883a 	mov	r2,zero
   4cb64:	003f8906 	br	4c98c <__alt_data_end+0xfffe588c>
   4cb68:	3809883a 	mov	r4,r7
   4cb6c:	4821883a 	mov	r16,r9
   4cb70:	0011883a 	mov	r8,zero
   4cb74:	0005883a 	mov	r2,zero
   4cb78:	003eda06 	br	4c6e4 <__alt_data_end+0xfffe55e4>
   4cb7c:	0101ffc4 	movi	r4,2047
   4cb80:	49003b26 	beq	r9,r4,4cc70 <__subdf3+0x7b4>
   4cb84:	0085c83a 	sub	r2,zero,r2
   4cb88:	18c02034 	orhi	r3,r3,128
   4cb8c:	01000e04 	movi	r4,56
   4cb90:	20806e16 	blt	r4,r2,4cd4c <__subdf3+0x890>
   4cb94:	010007c4 	movi	r4,31
   4cb98:	20807716 	blt	r4,r2,4cd78 <__subdf3+0x8bc>
   4cb9c:	01000804 	movi	r4,32
   4cba0:	2089c83a 	sub	r4,r4,r2
   4cba4:	1914983a 	sll	r10,r3,r4
   4cba8:	8890d83a 	srl	r8,r17,r2
   4cbac:	8908983a 	sll	r4,r17,r4
   4cbb0:	1884d83a 	srl	r2,r3,r2
   4cbb4:	5222b03a 	or	r17,r10,r8
   4cbb8:	2006c03a 	cmpne	r3,r4,zero
   4cbbc:	88e2b03a 	or	r17,r17,r3
   4cbc0:	89a3883a 	add	r17,r17,r6
   4cbc4:	1145883a 	add	r2,r2,r5
   4cbc8:	898d803a 	cmpltu	r6,r17,r6
   4cbcc:	3087883a 	add	r3,r6,r2
   4cbd0:	4821883a 	mov	r16,r9
   4cbd4:	003ed906 	br	4c73c <__alt_data_end+0xfffe563c>
   4cbd8:	2984b03a 	or	r2,r5,r6
   4cbdc:	10004226 	beq	r2,zero,4cce8 <__subdf3+0x82c>
   4cbe0:	1808d0fa 	srli	r4,r3,3
   4cbe4:	8822d0fa 	srli	r17,r17,3
   4cbe8:	1806977a 	slli	r3,r3,29
   4cbec:	2080022c 	andhi	r2,r4,8
   4cbf0:	1c62b03a 	or	r17,r3,r17
   4cbf4:	10000826 	beq	r2,zero,4cc18 <__subdf3+0x75c>
   4cbf8:	2812d0fa 	srli	r9,r5,3
   4cbfc:	4880022c 	andhi	r2,r9,8
   4cc00:	1000051e 	bne	r2,zero,4cc18 <__subdf3+0x75c>
   4cc04:	300cd0fa 	srli	r6,r6,3
   4cc08:	2804977a 	slli	r2,r5,29
   4cc0c:	4809883a 	mov	r4,r9
   4cc10:	3825883a 	mov	r18,r7
   4cc14:	11a2b03a 	or	r17,r2,r6
   4cc18:	8806d77a 	srli	r3,r17,29
   4cc1c:	200890fa 	slli	r4,r4,3
   4cc20:	882290fa 	slli	r17,r17,3
   4cc24:	0401ffc4 	movi	r16,2047
   4cc28:	1906b03a 	or	r3,r3,r4
   4cc2c:	003e4406 	br	4c540 <__alt_data_end+0xfffe5440>
   4cc30:	2984b03a 	or	r2,r5,r6
   4cc34:	103e4226 	beq	r2,zero,4c540 <__alt_data_end+0xfffe5440>
   4cc38:	8989c83a 	sub	r4,r17,r6
   4cc3c:	8911803a 	cmpltu	r8,r17,r4
   4cc40:	1945c83a 	sub	r2,r3,r5
   4cc44:	1205c83a 	sub	r2,r2,r8
   4cc48:	1200202c 	andhi	r8,r2,128
   4cc4c:	403e9a26 	beq	r8,zero,4c6b8 <__alt_data_end+0xfffe55b8>
   4cc50:	3463c83a 	sub	r17,r6,r17
   4cc54:	28c5c83a 	sub	r2,r5,r3
   4cc58:	344d803a 	cmpltu	r6,r6,r17
   4cc5c:	1187c83a 	sub	r3,r2,r6
   4cc60:	3825883a 	mov	r18,r7
   4cc64:	003e3606 	br	4c540 <__alt_data_end+0xfffe5440>
   4cc68:	0101ffc4 	movi	r4,2047
   4cc6c:	493fc71e 	bne	r9,r4,4cb8c <__alt_data_end+0xfffe5a8c>
   4cc70:	2807883a 	mov	r3,r5
   4cc74:	3023883a 	mov	r17,r6
   4cc78:	4821883a 	mov	r16,r9
   4cc7c:	003e3006 	br	4c540 <__alt_data_end+0xfffe5440>
   4cc80:	10003626 	beq	r2,zero,4cd5c <__subdf3+0x8a0>
   4cc84:	2984b03a 	or	r2,r5,r6
   4cc88:	10001726 	beq	r2,zero,4cce8 <__subdf3+0x82c>
   4cc8c:	1808d0fa 	srli	r4,r3,3
   4cc90:	8822d0fa 	srli	r17,r17,3
   4cc94:	1806977a 	slli	r3,r3,29
   4cc98:	2080022c 	andhi	r2,r4,8
   4cc9c:	1c62b03a 	or	r17,r3,r17
   4cca0:	10000726 	beq	r2,zero,4ccc0 <__subdf3+0x804>
   4cca4:	2812d0fa 	srli	r9,r5,3
   4cca8:	4880022c 	andhi	r2,r9,8
   4ccac:	1000041e 	bne	r2,zero,4ccc0 <__subdf3+0x804>
   4ccb0:	300cd0fa 	srli	r6,r6,3
   4ccb4:	2804977a 	slli	r2,r5,29
   4ccb8:	4809883a 	mov	r4,r9
   4ccbc:	11a2b03a 	or	r17,r2,r6
   4ccc0:	8806d77a 	srli	r3,r17,29
   4ccc4:	200890fa 	slli	r4,r4,3
   4ccc8:	882290fa 	slli	r17,r17,3
   4cccc:	3825883a 	mov	r18,r7
   4ccd0:	1906b03a 	or	r3,r3,r4
   4ccd4:	0401ffc4 	movi	r16,2047
   4ccd8:	003e1906 	br	4c540 <__alt_data_end+0xfffe5440>
   4ccdc:	000b883a 	mov	r5,zero
   4cce0:	0005883a 	mov	r2,zero
   4cce4:	003e2e06 	br	4c5a0 <__alt_data_end+0xfffe54a0>
   4cce8:	0401ffc4 	movi	r16,2047
   4ccec:	003e1406 	br	4c540 <__alt_data_end+0xfffe5440>
   4ccf0:	0005883a 	mov	r2,zero
   4ccf4:	003f7506 	br	4cacc <__alt_data_end+0xfffe59cc>
   4ccf8:	0005883a 	mov	r2,zero
   4ccfc:	0009883a 	mov	r4,zero
   4cd00:	003e7806 	br	4c6e4 <__alt_data_end+0xfffe55e4>
   4cd04:	123ff804 	addi	r8,r2,-32
   4cd08:	01000804 	movi	r4,32
   4cd0c:	1a10d83a 	srl	r8,r3,r8
   4cd10:	11002526 	beq	r2,r4,4cda8 <__subdf3+0x8ec>
   4cd14:	01001004 	movi	r4,64
   4cd18:	2085c83a 	sub	r2,r4,r2
   4cd1c:	1884983a 	sll	r2,r3,r2
   4cd20:	1444b03a 	or	r2,r2,r17
   4cd24:	1004c03a 	cmpne	r2,r2,zero
   4cd28:	40a2b03a 	or	r17,r8,r2
   4cd2c:	0005883a 	mov	r2,zero
   4cd30:	003f1606 	br	4c98c <__alt_data_end+0xfffe588c>
   4cd34:	02000434 	movhi	r8,16
   4cd38:	0009883a 	mov	r4,zero
   4cd3c:	423fffc4 	addi	r8,r8,-1
   4cd40:	00bfffc4 	movi	r2,-1
   4cd44:	0401ffc4 	movi	r16,2047
   4cd48:	003e6606 	br	4c6e4 <__alt_data_end+0xfffe55e4>
   4cd4c:	1c62b03a 	or	r17,r3,r17
   4cd50:	8822c03a 	cmpne	r17,r17,zero
   4cd54:	0005883a 	mov	r2,zero
   4cd58:	003f9906 	br	4cbc0 <__alt_data_end+0xfffe5ac0>
   4cd5c:	2807883a 	mov	r3,r5
   4cd60:	3023883a 	mov	r17,r6
   4cd64:	0401ffc4 	movi	r16,2047
   4cd68:	003df506 	br	4c540 <__alt_data_end+0xfffe5440>
   4cd6c:	2807883a 	mov	r3,r5
   4cd70:	3023883a 	mov	r17,r6
   4cd74:	003df206 	br	4c540 <__alt_data_end+0xfffe5440>
   4cd78:	123ff804 	addi	r8,r2,-32
   4cd7c:	01000804 	movi	r4,32
   4cd80:	1a10d83a 	srl	r8,r3,r8
   4cd84:	11000a26 	beq	r2,r4,4cdb0 <__subdf3+0x8f4>
   4cd88:	01001004 	movi	r4,64
   4cd8c:	2085c83a 	sub	r2,r4,r2
   4cd90:	1884983a 	sll	r2,r3,r2
   4cd94:	1444b03a 	or	r2,r2,r17
   4cd98:	1004c03a 	cmpne	r2,r2,zero
   4cd9c:	40a2b03a 	or	r17,r8,r2
   4cda0:	0005883a 	mov	r2,zero
   4cda4:	003f8606 	br	4cbc0 <__alt_data_end+0xfffe5ac0>
   4cda8:	0005883a 	mov	r2,zero
   4cdac:	003fdc06 	br	4cd20 <__alt_data_end+0xfffe5c20>
   4cdb0:	0005883a 	mov	r2,zero
   4cdb4:	003ff706 	br	4cd94 <__alt_data_end+0xfffe5c94>

0004cdb8 <__fixdfsi>:
   4cdb8:	280cd53a 	srli	r6,r5,20
   4cdbc:	00c00434 	movhi	r3,16
   4cdc0:	18ffffc4 	addi	r3,r3,-1
   4cdc4:	3181ffcc 	andi	r6,r6,2047
   4cdc8:	01c0ff84 	movi	r7,1022
   4cdcc:	28c6703a 	and	r3,r5,r3
   4cdd0:	280ad7fa 	srli	r5,r5,31
   4cdd4:	3980120e 	bge	r7,r6,4ce20 <__fixdfsi+0x68>
   4cdd8:	00810744 	movi	r2,1053
   4cddc:	11800c16 	blt	r2,r6,4ce10 <__fixdfsi+0x58>
   4cde0:	00810cc4 	movi	r2,1075
   4cde4:	1185c83a 	sub	r2,r2,r6
   4cde8:	01c007c4 	movi	r7,31
   4cdec:	18c00434 	orhi	r3,r3,16
   4cdf0:	38800d16 	blt	r7,r2,4ce28 <__fixdfsi+0x70>
   4cdf4:	31befb44 	addi	r6,r6,-1043
   4cdf8:	2084d83a 	srl	r2,r4,r2
   4cdfc:	1986983a 	sll	r3,r3,r6
   4ce00:	1884b03a 	or	r2,r3,r2
   4ce04:	28000726 	beq	r5,zero,4ce24 <__fixdfsi+0x6c>
   4ce08:	0085c83a 	sub	r2,zero,r2
   4ce0c:	f800283a 	ret
   4ce10:	00a00034 	movhi	r2,32768
   4ce14:	10bfffc4 	addi	r2,r2,-1
   4ce18:	2885883a 	add	r2,r5,r2
   4ce1c:	f800283a 	ret
   4ce20:	0005883a 	mov	r2,zero
   4ce24:	f800283a 	ret
   4ce28:	008104c4 	movi	r2,1043
   4ce2c:	1185c83a 	sub	r2,r2,r6
   4ce30:	1884d83a 	srl	r2,r3,r2
   4ce34:	003ff306 	br	4ce04 <__alt_data_end+0xfffe5d04>

0004ce38 <__floatsidf>:
   4ce38:	defffd04 	addi	sp,sp,-12
   4ce3c:	dfc00215 	stw	ra,8(sp)
   4ce40:	dc400115 	stw	r17,4(sp)
   4ce44:	dc000015 	stw	r16,0(sp)
   4ce48:	20002b26 	beq	r4,zero,4cef8 <__floatsidf+0xc0>
   4ce4c:	2023883a 	mov	r17,r4
   4ce50:	2020d7fa 	srli	r16,r4,31
   4ce54:	20002d16 	blt	r4,zero,4cf0c <__floatsidf+0xd4>
   4ce58:	8809883a 	mov	r4,r17
   4ce5c:	004cfbc0 	call	4cfbc <__clzsi2>
   4ce60:	01410784 	movi	r5,1054
   4ce64:	288bc83a 	sub	r5,r5,r2
   4ce68:	01010cc4 	movi	r4,1075
   4ce6c:	2149c83a 	sub	r4,r4,r5
   4ce70:	00c007c4 	movi	r3,31
   4ce74:	1900160e 	bge	r3,r4,4ced0 <__floatsidf+0x98>
   4ce78:	00c104c4 	movi	r3,1043
   4ce7c:	1947c83a 	sub	r3,r3,r5
   4ce80:	88c6983a 	sll	r3,r17,r3
   4ce84:	00800434 	movhi	r2,16
   4ce88:	10bfffc4 	addi	r2,r2,-1
   4ce8c:	1886703a 	and	r3,r3,r2
   4ce90:	2941ffcc 	andi	r5,r5,2047
   4ce94:	800d883a 	mov	r6,r16
   4ce98:	0005883a 	mov	r2,zero
   4ce9c:	280a953a 	slli	r5,r5,20
   4cea0:	31803fcc 	andi	r6,r6,255
   4cea4:	01000434 	movhi	r4,16
   4cea8:	300c97fa 	slli	r6,r6,31
   4ceac:	213fffc4 	addi	r4,r4,-1
   4ceb0:	1906703a 	and	r3,r3,r4
   4ceb4:	1946b03a 	or	r3,r3,r5
   4ceb8:	1986b03a 	or	r3,r3,r6
   4cebc:	dfc00217 	ldw	ra,8(sp)
   4cec0:	dc400117 	ldw	r17,4(sp)
   4cec4:	dc000017 	ldw	r16,0(sp)
   4cec8:	dec00304 	addi	sp,sp,12
   4cecc:	f800283a 	ret
   4ced0:	00c002c4 	movi	r3,11
   4ced4:	1887c83a 	sub	r3,r3,r2
   4ced8:	88c6d83a 	srl	r3,r17,r3
   4cedc:	8904983a 	sll	r2,r17,r4
   4cee0:	01000434 	movhi	r4,16
   4cee4:	213fffc4 	addi	r4,r4,-1
   4cee8:	2941ffcc 	andi	r5,r5,2047
   4ceec:	1906703a 	and	r3,r3,r4
   4cef0:	800d883a 	mov	r6,r16
   4cef4:	003fe906 	br	4ce9c <__alt_data_end+0xfffe5d9c>
   4cef8:	000d883a 	mov	r6,zero
   4cefc:	000b883a 	mov	r5,zero
   4cf00:	0007883a 	mov	r3,zero
   4cf04:	0005883a 	mov	r2,zero
   4cf08:	003fe406 	br	4ce9c <__alt_data_end+0xfffe5d9c>
   4cf0c:	0123c83a 	sub	r17,zero,r4
   4cf10:	003fd106 	br	4ce58 <__alt_data_end+0xfffe5d58>

0004cf14 <__floatunsidf>:
   4cf14:	defffe04 	addi	sp,sp,-8
   4cf18:	dc000015 	stw	r16,0(sp)
   4cf1c:	dfc00115 	stw	ra,4(sp)
   4cf20:	2021883a 	mov	r16,r4
   4cf24:	20002226 	beq	r4,zero,4cfb0 <__floatunsidf+0x9c>
   4cf28:	004cfbc0 	call	4cfbc <__clzsi2>
   4cf2c:	01010784 	movi	r4,1054
   4cf30:	2089c83a 	sub	r4,r4,r2
   4cf34:	01810cc4 	movi	r6,1075
   4cf38:	310dc83a 	sub	r6,r6,r4
   4cf3c:	00c007c4 	movi	r3,31
   4cf40:	1980120e 	bge	r3,r6,4cf8c <__floatunsidf+0x78>
   4cf44:	00c104c4 	movi	r3,1043
   4cf48:	1907c83a 	sub	r3,r3,r4
   4cf4c:	80ca983a 	sll	r5,r16,r3
   4cf50:	00800434 	movhi	r2,16
   4cf54:	10bfffc4 	addi	r2,r2,-1
   4cf58:	2101ffcc 	andi	r4,r4,2047
   4cf5c:	0021883a 	mov	r16,zero
   4cf60:	288a703a 	and	r5,r5,r2
   4cf64:	2008953a 	slli	r4,r4,20
   4cf68:	00c00434 	movhi	r3,16
   4cf6c:	18ffffc4 	addi	r3,r3,-1
   4cf70:	28c6703a 	and	r3,r5,r3
   4cf74:	8005883a 	mov	r2,r16
   4cf78:	1906b03a 	or	r3,r3,r4
   4cf7c:	dfc00117 	ldw	ra,4(sp)
   4cf80:	dc000017 	ldw	r16,0(sp)
   4cf84:	dec00204 	addi	sp,sp,8
   4cf88:	f800283a 	ret
   4cf8c:	00c002c4 	movi	r3,11
   4cf90:	188bc83a 	sub	r5,r3,r2
   4cf94:	814ad83a 	srl	r5,r16,r5
   4cf98:	00c00434 	movhi	r3,16
   4cf9c:	18ffffc4 	addi	r3,r3,-1
   4cfa0:	81a0983a 	sll	r16,r16,r6
   4cfa4:	2101ffcc 	andi	r4,r4,2047
   4cfa8:	28ca703a 	and	r5,r5,r3
   4cfac:	003fed06 	br	4cf64 <__alt_data_end+0xfffe5e64>
   4cfb0:	0009883a 	mov	r4,zero
   4cfb4:	000b883a 	mov	r5,zero
   4cfb8:	003fea06 	br	4cf64 <__alt_data_end+0xfffe5e64>

0004cfbc <__clzsi2>:
   4cfbc:	00bfffd4 	movui	r2,65535
   4cfc0:	11000536 	bltu	r2,r4,4cfd8 <__clzsi2+0x1c>
   4cfc4:	00803fc4 	movi	r2,255
   4cfc8:	11000f36 	bltu	r2,r4,4d008 <__clzsi2+0x4c>
   4cfcc:	00800804 	movi	r2,32
   4cfd0:	0007883a 	mov	r3,zero
   4cfd4:	00000506 	br	4cfec <__clzsi2+0x30>
   4cfd8:	00804034 	movhi	r2,256
   4cfdc:	10bfffc4 	addi	r2,r2,-1
   4cfe0:	11000c2e 	bgeu	r2,r4,4d014 <__clzsi2+0x58>
   4cfe4:	00800204 	movi	r2,8
   4cfe8:	00c00604 	movi	r3,24
   4cfec:	20c8d83a 	srl	r4,r4,r3
   4cff0:	00c00174 	movhi	r3,5
   4cff4:	18fedc04 	addi	r3,r3,-1168
   4cff8:	1909883a 	add	r4,r3,r4
   4cffc:	20c00003 	ldbu	r3,0(r4)
   4d000:	10c5c83a 	sub	r2,r2,r3
   4d004:	f800283a 	ret
   4d008:	00800604 	movi	r2,24
   4d00c:	00c00204 	movi	r3,8
   4d010:	003ff606 	br	4cfec <__alt_data_end+0xfffe5eec>
   4d014:	00800404 	movi	r2,16
   4d018:	1007883a 	mov	r3,r2
   4d01c:	003ff306 	br	4cfec <__alt_data_end+0xfffe5eec>

0004d020 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d020:	defffe04 	addi	sp,sp,-8
   4d024:	dfc00115 	stw	ra,4(sp)
   4d028:	df000015 	stw	fp,0(sp)
   4d02c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d030:	d0a00b17 	ldw	r2,-32724(gp)
   4d034:	10000326 	beq	r2,zero,4d044 <alt_get_errno+0x24>
   4d038:	d0a00b17 	ldw	r2,-32724(gp)
   4d03c:	103ee83a 	callr	r2
   4d040:	00000106 	br	4d048 <alt_get_errno+0x28>
   4d044:	d0a6d104 	addi	r2,gp,-25788
}
   4d048:	e037883a 	mov	sp,fp
   4d04c:	dfc00117 	ldw	ra,4(sp)
   4d050:	df000017 	ldw	fp,0(sp)
   4d054:	dec00204 	addi	sp,sp,8
   4d058:	f800283a 	ret

0004d05c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4d05c:	defffb04 	addi	sp,sp,-20
   4d060:	dfc00415 	stw	ra,16(sp)
   4d064:	df000315 	stw	fp,12(sp)
   4d068:	df000304 	addi	fp,sp,12
   4d06c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4d070:	e0bfff17 	ldw	r2,-4(fp)
   4d074:	10000616 	blt	r2,zero,4d090 <close+0x34>
   4d078:	e0bfff17 	ldw	r2,-4(fp)
   4d07c:	10c00324 	muli	r3,r2,12
   4d080:	00800174 	movhi	r2,5
   4d084:	10815a04 	addi	r2,r2,1384
   4d088:	1885883a 	add	r2,r3,r2
   4d08c:	00000106 	br	4d094 <close+0x38>
   4d090:	0005883a 	mov	r2,zero
   4d094:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   4d098:	e0bffd17 	ldw	r2,-12(fp)
   4d09c:	10001926 	beq	r2,zero,4d104 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4d0a0:	e0bffd17 	ldw	r2,-12(fp)
   4d0a4:	10800017 	ldw	r2,0(r2)
   4d0a8:	10800417 	ldw	r2,16(r2)
   4d0ac:	10000626 	beq	r2,zero,4d0c8 <close+0x6c>
   4d0b0:	e0bffd17 	ldw	r2,-12(fp)
   4d0b4:	10800017 	ldw	r2,0(r2)
   4d0b8:	10800417 	ldw	r2,16(r2)
   4d0bc:	e13ffd17 	ldw	r4,-12(fp)
   4d0c0:	103ee83a 	callr	r2
   4d0c4:	00000106 	br	4d0cc <close+0x70>
   4d0c8:	0005883a 	mov	r2,zero
   4d0cc:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4d0d0:	e13fff17 	ldw	r4,-4(fp)
   4d0d4:	004d71c0 	call	4d71c <alt_release_fd>
    if (rval < 0)
   4d0d8:	e0bffe17 	ldw	r2,-8(fp)
   4d0dc:	1000070e 	bge	r2,zero,4d0fc <close+0xa0>
    {
      ALT_ERRNO = -rval;
   4d0e0:	004d0200 	call	4d020 <alt_get_errno>
   4d0e4:	1007883a 	mov	r3,r2
   4d0e8:	e0bffe17 	ldw	r2,-8(fp)
   4d0ec:	0085c83a 	sub	r2,zero,r2
   4d0f0:	18800015 	stw	r2,0(r3)
      return -1;
   4d0f4:	00bfffc4 	movi	r2,-1
   4d0f8:	00000706 	br	4d118 <close+0xbc>
    }
    return 0;
   4d0fc:	0005883a 	mov	r2,zero
   4d100:	00000506 	br	4d118 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d104:	004d0200 	call	4d020 <alt_get_errno>
   4d108:	1007883a 	mov	r3,r2
   4d10c:	00801444 	movi	r2,81
   4d110:	18800015 	stw	r2,0(r3)
    return -1;
   4d114:	00bfffc4 	movi	r2,-1
  }
}
   4d118:	e037883a 	mov	sp,fp
   4d11c:	dfc00117 	ldw	ra,4(sp)
   4d120:	df000017 	ldw	fp,0(sp)
   4d124:	dec00204 	addi	sp,sp,8
   4d128:	f800283a 	ret

0004d12c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4d12c:	defffc04 	addi	sp,sp,-16
   4d130:	df000315 	stw	fp,12(sp)
   4d134:	df000304 	addi	fp,sp,12
   4d138:	e13ffd15 	stw	r4,-12(fp)
   4d13c:	e17ffe15 	stw	r5,-8(fp)
   4d140:	e1bfff15 	stw	r6,-4(fp)
  return len;
   4d144:	e0bfff17 	ldw	r2,-4(fp)
}
   4d148:	e037883a 	mov	sp,fp
   4d14c:	df000017 	ldw	fp,0(sp)
   4d150:	dec00104 	addi	sp,sp,4
   4d154:	f800283a 	ret

0004d158 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d158:	defffe04 	addi	sp,sp,-8
   4d15c:	dfc00115 	stw	ra,4(sp)
   4d160:	df000015 	stw	fp,0(sp)
   4d164:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d168:	d0a00b17 	ldw	r2,-32724(gp)
   4d16c:	10000326 	beq	r2,zero,4d17c <alt_get_errno+0x24>
   4d170:	d0a00b17 	ldw	r2,-32724(gp)
   4d174:	103ee83a 	callr	r2
   4d178:	00000106 	br	4d180 <alt_get_errno+0x28>
   4d17c:	d0a6d104 	addi	r2,gp,-25788
}
   4d180:	e037883a 	mov	sp,fp
   4d184:	dfc00117 	ldw	ra,4(sp)
   4d188:	df000017 	ldw	fp,0(sp)
   4d18c:	dec00204 	addi	sp,sp,8
   4d190:	f800283a 	ret

0004d194 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4d194:	defffb04 	addi	sp,sp,-20
   4d198:	dfc00415 	stw	ra,16(sp)
   4d19c:	df000315 	stw	fp,12(sp)
   4d1a0:	df000304 	addi	fp,sp,12
   4d1a4:	e13ffe15 	stw	r4,-8(fp)
   4d1a8:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d1ac:	e0bffe17 	ldw	r2,-8(fp)
   4d1b0:	10000616 	blt	r2,zero,4d1cc <fstat+0x38>
   4d1b4:	e0bffe17 	ldw	r2,-8(fp)
   4d1b8:	10c00324 	muli	r3,r2,12
   4d1bc:	00800174 	movhi	r2,5
   4d1c0:	10815a04 	addi	r2,r2,1384
   4d1c4:	1885883a 	add	r2,r3,r2
   4d1c8:	00000106 	br	4d1d0 <fstat+0x3c>
   4d1cc:	0005883a 	mov	r2,zero
   4d1d0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   4d1d4:	e0bffd17 	ldw	r2,-12(fp)
   4d1d8:	10001026 	beq	r2,zero,4d21c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4d1dc:	e0bffd17 	ldw	r2,-12(fp)
   4d1e0:	10800017 	ldw	r2,0(r2)
   4d1e4:	10800817 	ldw	r2,32(r2)
   4d1e8:	10000726 	beq	r2,zero,4d208 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   4d1ec:	e0bffd17 	ldw	r2,-12(fp)
   4d1f0:	10800017 	ldw	r2,0(r2)
   4d1f4:	10800817 	ldw	r2,32(r2)
   4d1f8:	e17fff17 	ldw	r5,-4(fp)
   4d1fc:	e13ffd17 	ldw	r4,-12(fp)
   4d200:	103ee83a 	callr	r2
   4d204:	00000a06 	br	4d230 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4d208:	e0bfff17 	ldw	r2,-4(fp)
   4d20c:	00c80004 	movi	r3,8192
   4d210:	10c00115 	stw	r3,4(r2)
      return 0;
   4d214:	0005883a 	mov	r2,zero
   4d218:	00000506 	br	4d230 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d21c:	004d1580 	call	4d158 <alt_get_errno>
   4d220:	1007883a 	mov	r3,r2
   4d224:	00801444 	movi	r2,81
   4d228:	18800015 	stw	r2,0(r3)
    return -1;
   4d22c:	00bfffc4 	movi	r2,-1
  }
}
   4d230:	e037883a 	mov	sp,fp
   4d234:	dfc00117 	ldw	ra,4(sp)
   4d238:	df000017 	ldw	fp,0(sp)
   4d23c:	dec00204 	addi	sp,sp,8
   4d240:	f800283a 	ret

0004d244 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d244:	defffe04 	addi	sp,sp,-8
   4d248:	dfc00115 	stw	ra,4(sp)
   4d24c:	df000015 	stw	fp,0(sp)
   4d250:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d254:	d0a00b17 	ldw	r2,-32724(gp)
   4d258:	10000326 	beq	r2,zero,4d268 <alt_get_errno+0x24>
   4d25c:	d0a00b17 	ldw	r2,-32724(gp)
   4d260:	103ee83a 	callr	r2
   4d264:	00000106 	br	4d26c <alt_get_errno+0x28>
   4d268:	d0a6d104 	addi	r2,gp,-25788
}
   4d26c:	e037883a 	mov	sp,fp
   4d270:	dfc00117 	ldw	ra,4(sp)
   4d274:	df000017 	ldw	fp,0(sp)
   4d278:	dec00204 	addi	sp,sp,8
   4d27c:	f800283a 	ret

0004d280 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4d280:	deffed04 	addi	sp,sp,-76
   4d284:	dfc01215 	stw	ra,72(sp)
   4d288:	df001115 	stw	fp,68(sp)
   4d28c:	df001104 	addi	fp,sp,68
   4d290:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d294:	e0bfff17 	ldw	r2,-4(fp)
   4d298:	10000616 	blt	r2,zero,4d2b4 <isatty+0x34>
   4d29c:	e0bfff17 	ldw	r2,-4(fp)
   4d2a0:	10c00324 	muli	r3,r2,12
   4d2a4:	00800174 	movhi	r2,5
   4d2a8:	10815a04 	addi	r2,r2,1384
   4d2ac:	1885883a 	add	r2,r3,r2
   4d2b0:	00000106 	br	4d2b8 <isatty+0x38>
   4d2b4:	0005883a 	mov	r2,zero
   4d2b8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   4d2bc:	e0bfef17 	ldw	r2,-68(fp)
   4d2c0:	10000e26 	beq	r2,zero,4d2fc <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4d2c4:	e0bfef17 	ldw	r2,-68(fp)
   4d2c8:	10800017 	ldw	r2,0(r2)
   4d2cc:	10800817 	ldw	r2,32(r2)
   4d2d0:	1000021e 	bne	r2,zero,4d2dc <isatty+0x5c>
    {
      return 1;
   4d2d4:	00800044 	movi	r2,1
   4d2d8:	00000d06 	br	4d310 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4d2dc:	e0bff004 	addi	r2,fp,-64
   4d2e0:	100b883a 	mov	r5,r2
   4d2e4:	e13fff17 	ldw	r4,-4(fp)
   4d2e8:	004d1940 	call	4d194 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4d2ec:	e0bff117 	ldw	r2,-60(fp)
   4d2f0:	10880020 	cmpeqi	r2,r2,8192
   4d2f4:	10803fcc 	andi	r2,r2,255
   4d2f8:	00000506 	br	4d310 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d2fc:	004d2440 	call	4d244 <alt_get_errno>
   4d300:	1007883a 	mov	r3,r2
   4d304:	00801444 	movi	r2,81
   4d308:	18800015 	stw	r2,0(r3)
    return 0;
   4d30c:	0005883a 	mov	r2,zero
  }
}
   4d310:	e037883a 	mov	sp,fp
   4d314:	dfc00117 	ldw	ra,4(sp)
   4d318:	df000017 	ldw	fp,0(sp)
   4d31c:	dec00204 	addi	sp,sp,8
   4d320:	f800283a 	ret

0004d324 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4d324:	defffc04 	addi	sp,sp,-16
   4d328:	df000315 	stw	fp,12(sp)
   4d32c:	df000304 	addi	fp,sp,12
   4d330:	e13ffd15 	stw	r4,-12(fp)
   4d334:	e17ffe15 	stw	r5,-8(fp)
   4d338:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   4d33c:	e0fffe17 	ldw	r3,-8(fp)
   4d340:	e0bffd17 	ldw	r2,-12(fp)
   4d344:	18800c26 	beq	r3,r2,4d378 <alt_load_section+0x54>
  {
    while( to != end )
   4d348:	00000806 	br	4d36c <alt_load_section+0x48>
    {
      *to++ = *from++;
   4d34c:	e0bffe17 	ldw	r2,-8(fp)
   4d350:	10c00104 	addi	r3,r2,4
   4d354:	e0fffe15 	stw	r3,-8(fp)
   4d358:	e0fffd17 	ldw	r3,-12(fp)
   4d35c:	19000104 	addi	r4,r3,4
   4d360:	e13ffd15 	stw	r4,-12(fp)
   4d364:	18c00017 	ldw	r3,0(r3)
   4d368:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   4d36c:	e0fffe17 	ldw	r3,-8(fp)
   4d370:	e0bfff17 	ldw	r2,-4(fp)
   4d374:	18bff51e 	bne	r3,r2,4d34c <__alt_data_end+0xfffe624c>
    {
      *to++ = *from++;
    }
  }
}
   4d378:	0001883a 	nop
   4d37c:	e037883a 	mov	sp,fp
   4d380:	df000017 	ldw	fp,0(sp)
   4d384:	dec00104 	addi	sp,sp,4
   4d388:	f800283a 	ret

0004d38c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4d38c:	defffe04 	addi	sp,sp,-8
   4d390:	dfc00115 	stw	ra,4(sp)
   4d394:	df000015 	stw	fp,0(sp)
   4d398:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4d39c:	01800174 	movhi	r6,5
   4d3a0:	3185e204 	addi	r6,r6,6024
   4d3a4:	01400174 	movhi	r5,5
   4d3a8:	297f2704 	addi	r5,r5,-868
   4d3ac:	01000174 	movhi	r4,5
   4d3b0:	2105e204 	addi	r4,r4,6024
   4d3b4:	004d3240 	call	4d324 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4d3b8:	01800134 	movhi	r6,4
   4d3bc:	31809104 	addi	r6,r6,580
   4d3c0:	01400134 	movhi	r5,4
   4d3c4:	29400804 	addi	r5,r5,32
   4d3c8:	01000134 	movhi	r4,4
   4d3cc:	21000804 	addi	r4,r4,32
   4d3d0:	004d3240 	call	4d324 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4d3d4:	01800174 	movhi	r6,5
   4d3d8:	31bf2704 	addi	r6,r6,-868
   4d3dc:	01400174 	movhi	r5,5
   4d3e0:	297e5604 	addi	r5,r5,-1704
   4d3e4:	01000174 	movhi	r4,5
   4d3e8:	213e5604 	addi	r4,r4,-1704
   4d3ec:	004d3240 	call	4d324 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4d3f0:	004e8440 	call	4e844 <alt_dcache_flush_all>
  alt_icache_flush_all();
   4d3f4:	004ea2c0 	call	4ea2c <alt_icache_flush_all>
}
   4d3f8:	0001883a 	nop
   4d3fc:	e037883a 	mov	sp,fp
   4d400:	dfc00117 	ldw	ra,4(sp)
   4d404:	df000017 	ldw	fp,0(sp)
   4d408:	dec00204 	addi	sp,sp,8
   4d40c:	f800283a 	ret

0004d410 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d410:	defffe04 	addi	sp,sp,-8
   4d414:	dfc00115 	stw	ra,4(sp)
   4d418:	df000015 	stw	fp,0(sp)
   4d41c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d420:	d0a00b17 	ldw	r2,-32724(gp)
   4d424:	10000326 	beq	r2,zero,4d434 <alt_get_errno+0x24>
   4d428:	d0a00b17 	ldw	r2,-32724(gp)
   4d42c:	103ee83a 	callr	r2
   4d430:	00000106 	br	4d438 <alt_get_errno+0x28>
   4d434:	d0a6d104 	addi	r2,gp,-25788
}
   4d438:	e037883a 	mov	sp,fp
   4d43c:	dfc00117 	ldw	ra,4(sp)
   4d440:	df000017 	ldw	fp,0(sp)
   4d444:	dec00204 	addi	sp,sp,8
   4d448:	f800283a 	ret

0004d44c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4d44c:	defff904 	addi	sp,sp,-28
   4d450:	dfc00615 	stw	ra,24(sp)
   4d454:	df000515 	stw	fp,20(sp)
   4d458:	df000504 	addi	fp,sp,20
   4d45c:	e13ffd15 	stw	r4,-12(fp)
   4d460:	e17ffe15 	stw	r5,-8(fp)
   4d464:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4d468:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d46c:	e0bffd17 	ldw	r2,-12(fp)
   4d470:	10000616 	blt	r2,zero,4d48c <lseek+0x40>
   4d474:	e0bffd17 	ldw	r2,-12(fp)
   4d478:	10c00324 	muli	r3,r2,12
   4d47c:	00800174 	movhi	r2,5
   4d480:	10815a04 	addi	r2,r2,1384
   4d484:	1885883a 	add	r2,r3,r2
   4d488:	00000106 	br	4d490 <lseek+0x44>
   4d48c:	0005883a 	mov	r2,zero
   4d490:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   4d494:	e0bffc17 	ldw	r2,-16(fp)
   4d498:	10001026 	beq	r2,zero,4d4dc <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4d49c:	e0bffc17 	ldw	r2,-16(fp)
   4d4a0:	10800017 	ldw	r2,0(r2)
   4d4a4:	10800717 	ldw	r2,28(r2)
   4d4a8:	10000926 	beq	r2,zero,4d4d0 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4d4ac:	e0bffc17 	ldw	r2,-16(fp)
   4d4b0:	10800017 	ldw	r2,0(r2)
   4d4b4:	10800717 	ldw	r2,28(r2)
   4d4b8:	e1bfff17 	ldw	r6,-4(fp)
   4d4bc:	e17ffe17 	ldw	r5,-8(fp)
   4d4c0:	e13ffc17 	ldw	r4,-16(fp)
   4d4c4:	103ee83a 	callr	r2
   4d4c8:	e0bffb15 	stw	r2,-20(fp)
   4d4cc:	00000506 	br	4d4e4 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4d4d0:	00bfde84 	movi	r2,-134
   4d4d4:	e0bffb15 	stw	r2,-20(fp)
   4d4d8:	00000206 	br	4d4e4 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   4d4dc:	00bfebc4 	movi	r2,-81
   4d4e0:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   4d4e4:	e0bffb17 	ldw	r2,-20(fp)
   4d4e8:	1000070e 	bge	r2,zero,4d508 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   4d4ec:	004d4100 	call	4d410 <alt_get_errno>
   4d4f0:	1007883a 	mov	r3,r2
   4d4f4:	e0bffb17 	ldw	r2,-20(fp)
   4d4f8:	0085c83a 	sub	r2,zero,r2
   4d4fc:	18800015 	stw	r2,0(r3)
    rc = -1;
   4d500:	00bfffc4 	movi	r2,-1
   4d504:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   4d508:	e0bffb17 	ldw	r2,-20(fp)
}
   4d50c:	e037883a 	mov	sp,fp
   4d510:	dfc00117 	ldw	ra,4(sp)
   4d514:	df000017 	ldw	fp,0(sp)
   4d518:	dec00204 	addi	sp,sp,8
   4d51c:	f800283a 	ret

0004d520 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4d520:	defffd04 	addi	sp,sp,-12
   4d524:	dfc00215 	stw	ra,8(sp)
   4d528:	df000115 	stw	fp,4(sp)
   4d52c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4d530:	0009883a 	mov	r4,zero
   4d534:	004d9c80 	call	4d9c8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   4d538:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4d53c:	004da000 	call	4da00 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4d540:	01800174 	movhi	r6,5
   4d544:	31bf1f04 	addi	r6,r6,-900
   4d548:	01400174 	movhi	r5,5
   4d54c:	297f1f04 	addi	r5,r5,-900
   4d550:	01000174 	movhi	r4,5
   4d554:	213f1f04 	addi	r4,r4,-900
   4d558:	004edc40 	call	4edc4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4d55c:	004e96c0 	call	4e96c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4d560:	01000174 	movhi	r4,5
   4d564:	213a7304 	addi	r4,r4,-5684
   4d568:	004f5c40 	call	4f5c4 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4d56c:	d0a6d217 	ldw	r2,-25784(gp)
   4d570:	d0e6d317 	ldw	r3,-25780(gp)
   4d574:	d126d417 	ldw	r4,-25776(gp)
   4d578:	200d883a 	mov	r6,r4
   4d57c:	180b883a 	mov	r5,r3
   4d580:	1009883a 	mov	r4,r2
   4d584:	00404a40 	call	404a4 <main>
   4d588:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4d58c:	01000044 	movi	r4,1
   4d590:	004d05c0 	call	4d05c <close>
  exit (result);
   4d594:	e13fff17 	ldw	r4,-4(fp)
   4d598:	004f5d80 	call	4f5d8 <exit>

0004d59c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   4d59c:	defffe04 	addi	sp,sp,-8
   4d5a0:	df000115 	stw	fp,4(sp)
   4d5a4:	df000104 	addi	fp,sp,4
   4d5a8:	e13fff15 	stw	r4,-4(fp)
}
   4d5ac:	0001883a 	nop
   4d5b0:	e037883a 	mov	sp,fp
   4d5b4:	df000017 	ldw	fp,0(sp)
   4d5b8:	dec00104 	addi	sp,sp,4
   4d5bc:	f800283a 	ret

0004d5c0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   4d5c0:	defffe04 	addi	sp,sp,-8
   4d5c4:	df000115 	stw	fp,4(sp)
   4d5c8:	df000104 	addi	fp,sp,4
   4d5cc:	e13fff15 	stw	r4,-4(fp)
}
   4d5d0:	0001883a 	nop
   4d5d4:	e037883a 	mov	sp,fp
   4d5d8:	df000017 	ldw	fp,0(sp)
   4d5dc:	dec00104 	addi	sp,sp,4
   4d5e0:	f800283a 	ret

0004d5e4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d5e4:	defffe04 	addi	sp,sp,-8
   4d5e8:	dfc00115 	stw	ra,4(sp)
   4d5ec:	df000015 	stw	fp,0(sp)
   4d5f0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d5f4:	d0a00b17 	ldw	r2,-32724(gp)
   4d5f8:	10000326 	beq	r2,zero,4d608 <alt_get_errno+0x24>
   4d5fc:	d0a00b17 	ldw	r2,-32724(gp)
   4d600:	103ee83a 	callr	r2
   4d604:	00000106 	br	4d60c <alt_get_errno+0x28>
   4d608:	d0a6d104 	addi	r2,gp,-25788
}
   4d60c:	e037883a 	mov	sp,fp
   4d610:	dfc00117 	ldw	ra,4(sp)
   4d614:	df000017 	ldw	fp,0(sp)
   4d618:	dec00204 	addi	sp,sp,8
   4d61c:	f800283a 	ret

0004d620 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4d620:	defff904 	addi	sp,sp,-28
   4d624:	dfc00615 	stw	ra,24(sp)
   4d628:	df000515 	stw	fp,20(sp)
   4d62c:	df000504 	addi	fp,sp,20
   4d630:	e13ffd15 	stw	r4,-12(fp)
   4d634:	e17ffe15 	stw	r5,-8(fp)
   4d638:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d63c:	e0bffd17 	ldw	r2,-12(fp)
   4d640:	10000616 	blt	r2,zero,4d65c <read+0x3c>
   4d644:	e0bffd17 	ldw	r2,-12(fp)
   4d648:	10c00324 	muli	r3,r2,12
   4d64c:	00800174 	movhi	r2,5
   4d650:	10815a04 	addi	r2,r2,1384
   4d654:	1885883a 	add	r2,r3,r2
   4d658:	00000106 	br	4d660 <read+0x40>
   4d65c:	0005883a 	mov	r2,zero
   4d660:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4d664:	e0bffb17 	ldw	r2,-20(fp)
   4d668:	10002226 	beq	r2,zero,4d6f4 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4d66c:	e0bffb17 	ldw	r2,-20(fp)
   4d670:	10800217 	ldw	r2,8(r2)
   4d674:	108000cc 	andi	r2,r2,3
   4d678:	10800060 	cmpeqi	r2,r2,1
   4d67c:	1000181e 	bne	r2,zero,4d6e0 <read+0xc0>
        (fd->dev->read))
   4d680:	e0bffb17 	ldw	r2,-20(fp)
   4d684:	10800017 	ldw	r2,0(r2)
   4d688:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4d68c:	10001426 	beq	r2,zero,4d6e0 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4d690:	e0bffb17 	ldw	r2,-20(fp)
   4d694:	10800017 	ldw	r2,0(r2)
   4d698:	10800517 	ldw	r2,20(r2)
   4d69c:	e0ffff17 	ldw	r3,-4(fp)
   4d6a0:	180d883a 	mov	r6,r3
   4d6a4:	e17ffe17 	ldw	r5,-8(fp)
   4d6a8:	e13ffb17 	ldw	r4,-20(fp)
   4d6ac:	103ee83a 	callr	r2
   4d6b0:	e0bffc15 	stw	r2,-16(fp)
   4d6b4:	e0bffc17 	ldw	r2,-16(fp)
   4d6b8:	1000070e 	bge	r2,zero,4d6d8 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   4d6bc:	004d5e40 	call	4d5e4 <alt_get_errno>
   4d6c0:	1007883a 	mov	r3,r2
   4d6c4:	e0bffc17 	ldw	r2,-16(fp)
   4d6c8:	0085c83a 	sub	r2,zero,r2
   4d6cc:	18800015 	stw	r2,0(r3)
          return -1;
   4d6d0:	00bfffc4 	movi	r2,-1
   4d6d4:	00000c06 	br	4d708 <read+0xe8>
        }
        return rval;
   4d6d8:	e0bffc17 	ldw	r2,-16(fp)
   4d6dc:	00000a06 	br	4d708 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4d6e0:	004d5e40 	call	4d5e4 <alt_get_errno>
   4d6e4:	1007883a 	mov	r3,r2
   4d6e8:	00800344 	movi	r2,13
   4d6ec:	18800015 	stw	r2,0(r3)
   4d6f0:	00000406 	br	4d704 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4d6f4:	004d5e40 	call	4d5e4 <alt_get_errno>
   4d6f8:	1007883a 	mov	r3,r2
   4d6fc:	00801444 	movi	r2,81
   4d700:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4d704:	00bfffc4 	movi	r2,-1
}
   4d708:	e037883a 	mov	sp,fp
   4d70c:	dfc00117 	ldw	ra,4(sp)
   4d710:	df000017 	ldw	fp,0(sp)
   4d714:	dec00204 	addi	sp,sp,8
   4d718:	f800283a 	ret

0004d71c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4d71c:	defffe04 	addi	sp,sp,-8
   4d720:	df000115 	stw	fp,4(sp)
   4d724:	df000104 	addi	fp,sp,4
   4d728:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   4d72c:	e0bfff17 	ldw	r2,-4(fp)
   4d730:	108000d0 	cmplti	r2,r2,3
   4d734:	10000d1e 	bne	r2,zero,4d76c <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   4d738:	00800174 	movhi	r2,5
   4d73c:	10815a04 	addi	r2,r2,1384
   4d740:	e0ffff17 	ldw	r3,-4(fp)
   4d744:	18c00324 	muli	r3,r3,12
   4d748:	10c5883a 	add	r2,r2,r3
   4d74c:	10800204 	addi	r2,r2,8
   4d750:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   4d754:	00800174 	movhi	r2,5
   4d758:	10815a04 	addi	r2,r2,1384
   4d75c:	e0ffff17 	ldw	r3,-4(fp)
   4d760:	18c00324 	muli	r3,r3,12
   4d764:	10c5883a 	add	r2,r2,r3
   4d768:	10000015 	stw	zero,0(r2)
  }
}
   4d76c:	0001883a 	nop
   4d770:	e037883a 	mov	sp,fp
   4d774:	df000017 	ldw	fp,0(sp)
   4d778:	dec00104 	addi	sp,sp,4
   4d77c:	f800283a 	ret

0004d780 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4d780:	defff904 	addi	sp,sp,-28
   4d784:	df000615 	stw	fp,24(sp)
   4d788:	df000604 	addi	fp,sp,24
   4d78c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4d790:	0005303a 	rdctl	r2,status
   4d794:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4d798:	e0fffe17 	ldw	r3,-8(fp)
   4d79c:	00bfff84 	movi	r2,-2
   4d7a0:	1884703a 	and	r2,r3,r2
   4d7a4:	1001703a 	wrctl	status,r2
  
  return context;
   4d7a8:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4d7ac:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4d7b0:	d0a00c17 	ldw	r2,-32720(gp)
   4d7b4:	10c000c4 	addi	r3,r2,3
   4d7b8:	00bfff04 	movi	r2,-4
   4d7bc:	1884703a 	and	r2,r3,r2
   4d7c0:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4d7c4:	d0e00c17 	ldw	r3,-32720(gp)
   4d7c8:	e0bfff17 	ldw	r2,-4(fp)
   4d7cc:	1887883a 	add	r3,r3,r2
   4d7d0:	008001b4 	movhi	r2,6
   4d7d4:	109c4004 	addi	r2,r2,28928
   4d7d8:	10c0062e 	bgeu	r2,r3,4d7f4 <sbrk+0x74>
   4d7dc:	e0bffb17 	ldw	r2,-20(fp)
   4d7e0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4d7e4:	e0bffa17 	ldw	r2,-24(fp)
   4d7e8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4d7ec:	00bfffc4 	movi	r2,-1
   4d7f0:	00000b06 	br	4d820 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   4d7f4:	d0a00c17 	ldw	r2,-32720(gp)
   4d7f8:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   4d7fc:	d0e00c17 	ldw	r3,-32720(gp)
   4d800:	e0bfff17 	ldw	r2,-4(fp)
   4d804:	1885883a 	add	r2,r3,r2
   4d808:	d0a00c15 	stw	r2,-32720(gp)
   4d80c:	e0bffb17 	ldw	r2,-20(fp)
   4d810:	e0bffc15 	stw	r2,-16(fp)
   4d814:	e0bffc17 	ldw	r2,-16(fp)
   4d818:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4d81c:	e0bffd17 	ldw	r2,-12(fp)
} 
   4d820:	e037883a 	mov	sp,fp
   4d824:	df000017 	ldw	fp,0(sp)
   4d828:	dec00104 	addi	sp,sp,4
   4d82c:	f800283a 	ret

0004d830 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   4d830:	defffd04 	addi	sp,sp,-12
   4d834:	dfc00215 	stw	ra,8(sp)
   4d838:	df000115 	stw	fp,4(sp)
   4d83c:	df000104 	addi	fp,sp,4
   4d840:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   4d844:	e13fff17 	ldw	r4,-4(fp)
   4d848:	004e6ec0 	call	4e6ec <alt_busy_sleep>
}
   4d84c:	e037883a 	mov	sp,fp
   4d850:	dfc00117 	ldw	ra,4(sp)
   4d854:	df000017 	ldw	fp,0(sp)
   4d858:	dec00204 	addi	sp,sp,8
   4d85c:	f800283a 	ret

0004d860 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d860:	defffe04 	addi	sp,sp,-8
   4d864:	dfc00115 	stw	ra,4(sp)
   4d868:	df000015 	stw	fp,0(sp)
   4d86c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d870:	d0a00b17 	ldw	r2,-32724(gp)
   4d874:	10000326 	beq	r2,zero,4d884 <alt_get_errno+0x24>
   4d878:	d0a00b17 	ldw	r2,-32724(gp)
   4d87c:	103ee83a 	callr	r2
   4d880:	00000106 	br	4d888 <alt_get_errno+0x28>
   4d884:	d0a6d104 	addi	r2,gp,-25788
}
   4d888:	e037883a 	mov	sp,fp
   4d88c:	dfc00117 	ldw	ra,4(sp)
   4d890:	df000017 	ldw	fp,0(sp)
   4d894:	dec00204 	addi	sp,sp,8
   4d898:	f800283a 	ret

0004d89c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4d89c:	defff904 	addi	sp,sp,-28
   4d8a0:	dfc00615 	stw	ra,24(sp)
   4d8a4:	df000515 	stw	fp,20(sp)
   4d8a8:	df000504 	addi	fp,sp,20
   4d8ac:	e13ffd15 	stw	r4,-12(fp)
   4d8b0:	e17ffe15 	stw	r5,-8(fp)
   4d8b4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d8b8:	e0bffd17 	ldw	r2,-12(fp)
   4d8bc:	10000616 	blt	r2,zero,4d8d8 <write+0x3c>
   4d8c0:	e0bffd17 	ldw	r2,-12(fp)
   4d8c4:	10c00324 	muli	r3,r2,12
   4d8c8:	00800174 	movhi	r2,5
   4d8cc:	10815a04 	addi	r2,r2,1384
   4d8d0:	1885883a 	add	r2,r3,r2
   4d8d4:	00000106 	br	4d8dc <write+0x40>
   4d8d8:	0005883a 	mov	r2,zero
   4d8dc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4d8e0:	e0bffb17 	ldw	r2,-20(fp)
   4d8e4:	10002126 	beq	r2,zero,4d96c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4d8e8:	e0bffb17 	ldw	r2,-20(fp)
   4d8ec:	10800217 	ldw	r2,8(r2)
   4d8f0:	108000cc 	andi	r2,r2,3
   4d8f4:	10001826 	beq	r2,zero,4d958 <write+0xbc>
   4d8f8:	e0bffb17 	ldw	r2,-20(fp)
   4d8fc:	10800017 	ldw	r2,0(r2)
   4d900:	10800617 	ldw	r2,24(r2)
   4d904:	10001426 	beq	r2,zero,4d958 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4d908:	e0bffb17 	ldw	r2,-20(fp)
   4d90c:	10800017 	ldw	r2,0(r2)
   4d910:	10800617 	ldw	r2,24(r2)
   4d914:	e0ffff17 	ldw	r3,-4(fp)
   4d918:	180d883a 	mov	r6,r3
   4d91c:	e17ffe17 	ldw	r5,-8(fp)
   4d920:	e13ffb17 	ldw	r4,-20(fp)
   4d924:	103ee83a 	callr	r2
   4d928:	e0bffc15 	stw	r2,-16(fp)
   4d92c:	e0bffc17 	ldw	r2,-16(fp)
   4d930:	1000070e 	bge	r2,zero,4d950 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   4d934:	004d8600 	call	4d860 <alt_get_errno>
   4d938:	1007883a 	mov	r3,r2
   4d93c:	e0bffc17 	ldw	r2,-16(fp)
   4d940:	0085c83a 	sub	r2,zero,r2
   4d944:	18800015 	stw	r2,0(r3)
        return -1;
   4d948:	00bfffc4 	movi	r2,-1
   4d94c:	00000c06 	br	4d980 <write+0xe4>
      }
      return rval;
   4d950:	e0bffc17 	ldw	r2,-16(fp)
   4d954:	00000a06 	br	4d980 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4d958:	004d8600 	call	4d860 <alt_get_errno>
   4d95c:	1007883a 	mov	r3,r2
   4d960:	00800344 	movi	r2,13
   4d964:	18800015 	stw	r2,0(r3)
   4d968:	00000406 	br	4d97c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4d96c:	004d8600 	call	4d860 <alt_get_errno>
   4d970:	1007883a 	mov	r3,r2
   4d974:	00801444 	movi	r2,81
   4d978:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4d97c:	00bfffc4 	movi	r2,-1
}
   4d980:	e037883a 	mov	sp,fp
   4d984:	dfc00117 	ldw	ra,4(sp)
   4d988:	df000017 	ldw	fp,0(sp)
   4d98c:	dec00204 	addi	sp,sp,8
   4d990:	f800283a 	ret

0004d994 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4d994:	defffd04 	addi	sp,sp,-12
   4d998:	dfc00215 	stw	ra,8(sp)
   4d99c:	df000115 	stw	fp,4(sp)
   4d9a0:	df000104 	addi	fp,sp,4
   4d9a4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4d9a8:	d1600804 	addi	r5,gp,-32736
   4d9ac:	e13fff17 	ldw	r4,-4(fp)
   4d9b0:	004e8c80 	call	4e8c8 <alt_dev_llist_insert>
}
   4d9b4:	e037883a 	mov	sp,fp
   4d9b8:	dfc00117 	ldw	ra,4(sp)
   4d9bc:	df000017 	ldw	fp,0(sp)
   4d9c0:	dec00204 	addi	sp,sp,8
   4d9c4:	f800283a 	ret

0004d9c8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4d9c8:	defffd04 	addi	sp,sp,-12
   4d9cc:	dfc00215 	stw	ra,8(sp)
   4d9d0:	df000115 	stw	fp,4(sp)
   4d9d4:	df000104 	addi	fp,sp,4
   4d9d8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_QSYS, nios2_qsys);
   4d9dc:	004f2380 	call	4f238 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4d9e0:	00800044 	movi	r2,1
   4d9e4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   4d9e8:	0001883a 	nop
   4d9ec:	e037883a 	mov	sp,fp
   4d9f0:	dfc00117 	ldw	ra,4(sp)
   4d9f4:	df000017 	ldw	fp,0(sp)
   4d9f8:	dec00204 	addi	sp,sp,8
   4d9fc:	f800283a 	ret

0004da00 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4da00:	defffe04 	addi	sp,sp,-8
   4da04:	dfc00115 	stw	ra,4(sp)
   4da08:	df000015 	stw	fp,0(sp)
   4da0c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( INTERVAL_TIMER, interval_timer);
   4da10:	01c0fa04 	movi	r7,1000
   4da14:	01800084 	movi	r6,2
   4da18:	000b883a 	mov	r5,zero
   4da1c:	01000234 	movhi	r4,8
   4da20:	21041004 	addi	r4,r4,4160
   4da24:	004e5440 	call	4e544 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   4da28:	000d883a 	mov	r6,zero
   4da2c:	000b883a 	mov	r5,zero
   4da30:	01000174 	movhi	r4,5
   4da34:	2101c404 	addi	r4,r4,1808
   4da38:	004dbc80 	call	4dbc8 <altera_avalon_jtag_uart_init>
   4da3c:	01000174 	movhi	r4,5
   4da40:	2101ba04 	addi	r4,r4,1768
   4da44:	004d9940 	call	4d994 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
   4da48:	0001883a 	nop
}
   4da4c:	0001883a 	nop
   4da50:	e037883a 	mov	sp,fp
   4da54:	dfc00117 	ldw	ra,4(sp)
   4da58:	df000017 	ldw	fp,0(sp)
   4da5c:	dec00204 	addi	sp,sp,8
   4da60:	f800283a 	ret

0004da64 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4da64:	defffa04 	addi	sp,sp,-24
   4da68:	dfc00515 	stw	ra,20(sp)
   4da6c:	df000415 	stw	fp,16(sp)
   4da70:	df000404 	addi	fp,sp,16
   4da74:	e13ffd15 	stw	r4,-12(fp)
   4da78:	e17ffe15 	stw	r5,-8(fp)
   4da7c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4da80:	e0bffd17 	ldw	r2,-12(fp)
   4da84:	10800017 	ldw	r2,0(r2)
   4da88:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4da8c:	e0bffc17 	ldw	r2,-16(fp)
   4da90:	10c00a04 	addi	r3,r2,40
   4da94:	e0bffd17 	ldw	r2,-12(fp)
   4da98:	10800217 	ldw	r2,8(r2)
   4da9c:	100f883a 	mov	r7,r2
   4daa0:	e1bfff17 	ldw	r6,-4(fp)
   4daa4:	e17ffe17 	ldw	r5,-8(fp)
   4daa8:	1809883a 	mov	r4,r3
   4daac:	004e08c0 	call	4e08c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4dab0:	e037883a 	mov	sp,fp
   4dab4:	dfc00117 	ldw	ra,4(sp)
   4dab8:	df000017 	ldw	fp,0(sp)
   4dabc:	dec00204 	addi	sp,sp,8
   4dac0:	f800283a 	ret

0004dac4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4dac4:	defffa04 	addi	sp,sp,-24
   4dac8:	dfc00515 	stw	ra,20(sp)
   4dacc:	df000415 	stw	fp,16(sp)
   4dad0:	df000404 	addi	fp,sp,16
   4dad4:	e13ffd15 	stw	r4,-12(fp)
   4dad8:	e17ffe15 	stw	r5,-8(fp)
   4dadc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4dae0:	e0bffd17 	ldw	r2,-12(fp)
   4dae4:	10800017 	ldw	r2,0(r2)
   4dae8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4daec:	e0bffc17 	ldw	r2,-16(fp)
   4daf0:	10c00a04 	addi	r3,r2,40
   4daf4:	e0bffd17 	ldw	r2,-12(fp)
   4daf8:	10800217 	ldw	r2,8(r2)
   4dafc:	100f883a 	mov	r7,r2
   4db00:	e1bfff17 	ldw	r6,-4(fp)
   4db04:	e17ffe17 	ldw	r5,-8(fp)
   4db08:	1809883a 	mov	r4,r3
   4db0c:	004e2a80 	call	4e2a8 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4db10:	e037883a 	mov	sp,fp
   4db14:	dfc00117 	ldw	ra,4(sp)
   4db18:	df000017 	ldw	fp,0(sp)
   4db1c:	dec00204 	addi	sp,sp,8
   4db20:	f800283a 	ret

0004db24 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4db24:	defffc04 	addi	sp,sp,-16
   4db28:	dfc00315 	stw	ra,12(sp)
   4db2c:	df000215 	stw	fp,8(sp)
   4db30:	df000204 	addi	fp,sp,8
   4db34:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4db38:	e0bfff17 	ldw	r2,-4(fp)
   4db3c:	10800017 	ldw	r2,0(r2)
   4db40:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4db44:	e0bffe17 	ldw	r2,-8(fp)
   4db48:	10c00a04 	addi	r3,r2,40
   4db4c:	e0bfff17 	ldw	r2,-4(fp)
   4db50:	10800217 	ldw	r2,8(r2)
   4db54:	100b883a 	mov	r5,r2
   4db58:	1809883a 	mov	r4,r3
   4db5c:	004df340 	call	4df34 <altera_avalon_jtag_uart_close>
}
   4db60:	e037883a 	mov	sp,fp
   4db64:	dfc00117 	ldw	ra,4(sp)
   4db68:	df000017 	ldw	fp,0(sp)
   4db6c:	dec00204 	addi	sp,sp,8
   4db70:	f800283a 	ret

0004db74 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4db74:	defffa04 	addi	sp,sp,-24
   4db78:	dfc00515 	stw	ra,20(sp)
   4db7c:	df000415 	stw	fp,16(sp)
   4db80:	df000404 	addi	fp,sp,16
   4db84:	e13ffd15 	stw	r4,-12(fp)
   4db88:	e17ffe15 	stw	r5,-8(fp)
   4db8c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4db90:	e0bffd17 	ldw	r2,-12(fp)
   4db94:	10800017 	ldw	r2,0(r2)
   4db98:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4db9c:	e0bffc17 	ldw	r2,-16(fp)
   4dba0:	10800a04 	addi	r2,r2,40
   4dba4:	e1bfff17 	ldw	r6,-4(fp)
   4dba8:	e17ffe17 	ldw	r5,-8(fp)
   4dbac:	1009883a 	mov	r4,r2
   4dbb0:	004df9c0 	call	4df9c <altera_avalon_jtag_uart_ioctl>
}
   4dbb4:	e037883a 	mov	sp,fp
   4dbb8:	dfc00117 	ldw	ra,4(sp)
   4dbbc:	df000017 	ldw	fp,0(sp)
   4dbc0:	dec00204 	addi	sp,sp,8
   4dbc4:	f800283a 	ret

0004dbc8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4dbc8:	defffa04 	addi	sp,sp,-24
   4dbcc:	dfc00515 	stw	ra,20(sp)
   4dbd0:	df000415 	stw	fp,16(sp)
   4dbd4:	df000404 	addi	fp,sp,16
   4dbd8:	e13ffd15 	stw	r4,-12(fp)
   4dbdc:	e17ffe15 	stw	r5,-8(fp)
   4dbe0:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4dbe4:	e0bffd17 	ldw	r2,-12(fp)
   4dbe8:	00c00044 	movi	r3,1
   4dbec:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4dbf0:	e0bffd17 	ldw	r2,-12(fp)
   4dbf4:	10800017 	ldw	r2,0(r2)
   4dbf8:	10800104 	addi	r2,r2,4
   4dbfc:	1007883a 	mov	r3,r2
   4dc00:	e0bffd17 	ldw	r2,-12(fp)
   4dc04:	10800817 	ldw	r2,32(r2)
   4dc08:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   4dc0c:	e0bffe17 	ldw	r2,-8(fp)
   4dc10:	e0ffff17 	ldw	r3,-4(fp)
   4dc14:	d8000015 	stw	zero,0(sp)
   4dc18:	e1fffd17 	ldw	r7,-12(fp)
   4dc1c:	01800174 	movhi	r6,5
   4dc20:	31b72204 	addi	r6,r6,-9080
   4dc24:	180b883a 	mov	r5,r3
   4dc28:	1009883a 	mov	r4,r2
   4dc2c:	004ea600 	call	4ea60 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4dc30:	e0bffd17 	ldw	r2,-12(fp)
   4dc34:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4dc38:	e0bffd17 	ldw	r2,-12(fp)
   4dc3c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4dc40:	d0e6d617 	ldw	r3,-25768(gp)
   4dc44:	e1fffd17 	ldw	r7,-12(fp)
   4dc48:	01800174 	movhi	r6,5
   4dc4c:	31b7a504 	addi	r6,r6,-8556
   4dc50:	180b883a 	mov	r5,r3
   4dc54:	1009883a 	mov	r4,r2
   4dc58:	004e5c00 	call	4e5c0 <alt_alarm_start>
   4dc5c:	1000040e 	bge	r2,zero,4dc70 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4dc60:	e0fffd17 	ldw	r3,-12(fp)
   4dc64:	00a00034 	movhi	r2,32768
   4dc68:	10bfffc4 	addi	r2,r2,-1
   4dc6c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4dc70:	0001883a 	nop
   4dc74:	e037883a 	mov	sp,fp
   4dc78:	dfc00117 	ldw	ra,4(sp)
   4dc7c:	df000017 	ldw	fp,0(sp)
   4dc80:	dec00204 	addi	sp,sp,8
   4dc84:	f800283a 	ret

0004dc88 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4dc88:	defff804 	addi	sp,sp,-32
   4dc8c:	df000715 	stw	fp,28(sp)
   4dc90:	df000704 	addi	fp,sp,28
   4dc94:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4dc98:	e0bfff17 	ldw	r2,-4(fp)
   4dc9c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   4dca0:	e0bffb17 	ldw	r2,-20(fp)
   4dca4:	10800017 	ldw	r2,0(r2)
   4dca8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4dcac:	e0bffc17 	ldw	r2,-16(fp)
   4dcb0:	10800104 	addi	r2,r2,4
   4dcb4:	10800037 	ldwio	r2,0(r2)
   4dcb8:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4dcbc:	e0bffd17 	ldw	r2,-12(fp)
   4dcc0:	1080c00c 	andi	r2,r2,768
   4dcc4:	10006d26 	beq	r2,zero,4de7c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   4dcc8:	e0bffd17 	ldw	r2,-12(fp)
   4dccc:	1080400c 	andi	r2,r2,256
   4dcd0:	10003526 	beq	r2,zero,4dda8 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   4dcd4:	00800074 	movhi	r2,1
   4dcd8:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4dcdc:	e0bffb17 	ldw	r2,-20(fp)
   4dce0:	10800a17 	ldw	r2,40(r2)
   4dce4:	10800044 	addi	r2,r2,1
   4dce8:	1081ffcc 	andi	r2,r2,2047
   4dcec:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   4dcf0:	e0bffb17 	ldw	r2,-20(fp)
   4dcf4:	10c00b17 	ldw	r3,44(r2)
   4dcf8:	e0bffe17 	ldw	r2,-8(fp)
   4dcfc:	18801526 	beq	r3,r2,4dd54 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   4dd00:	e0bffc17 	ldw	r2,-16(fp)
   4dd04:	10800037 	ldwio	r2,0(r2)
   4dd08:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   4dd0c:	e0bff917 	ldw	r2,-28(fp)
   4dd10:	10a0000c 	andi	r2,r2,32768
   4dd14:	10001126 	beq	r2,zero,4dd5c <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   4dd18:	e0bffb17 	ldw	r2,-20(fp)
   4dd1c:	10800a17 	ldw	r2,40(r2)
   4dd20:	e0fff917 	ldw	r3,-28(fp)
   4dd24:	1809883a 	mov	r4,r3
   4dd28:	e0fffb17 	ldw	r3,-20(fp)
   4dd2c:	1885883a 	add	r2,r3,r2
   4dd30:	10800e04 	addi	r2,r2,56
   4dd34:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4dd38:	e0bffb17 	ldw	r2,-20(fp)
   4dd3c:	10800a17 	ldw	r2,40(r2)
   4dd40:	10800044 	addi	r2,r2,1
   4dd44:	10c1ffcc 	andi	r3,r2,2047
   4dd48:	e0bffb17 	ldw	r2,-20(fp)
   4dd4c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   4dd50:	003fe206 	br	4dcdc <__alt_data_end+0xfffe6bdc>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   4dd54:	0001883a 	nop
   4dd58:	00000106 	br	4dd60 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   4dd5c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   4dd60:	e0bff917 	ldw	r2,-28(fp)
   4dd64:	10bfffec 	andhi	r2,r2,65535
   4dd68:	10000f26 	beq	r2,zero,4dda8 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4dd6c:	e0bffb17 	ldw	r2,-20(fp)
   4dd70:	10c00817 	ldw	r3,32(r2)
   4dd74:	00bfff84 	movi	r2,-2
   4dd78:	1886703a 	and	r3,r3,r2
   4dd7c:	e0bffb17 	ldw	r2,-20(fp)
   4dd80:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   4dd84:	e0bffc17 	ldw	r2,-16(fp)
   4dd88:	10800104 	addi	r2,r2,4
   4dd8c:	1007883a 	mov	r3,r2
   4dd90:	e0bffb17 	ldw	r2,-20(fp)
   4dd94:	10800817 	ldw	r2,32(r2)
   4dd98:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4dd9c:	e0bffc17 	ldw	r2,-16(fp)
   4dda0:	10800104 	addi	r2,r2,4
   4dda4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   4dda8:	e0bffd17 	ldw	r2,-12(fp)
   4ddac:	1080800c 	andi	r2,r2,512
   4ddb0:	103fbe26 	beq	r2,zero,4dcac <__alt_data_end+0xfffe6bac>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   4ddb4:	e0bffd17 	ldw	r2,-12(fp)
   4ddb8:	1004d43a 	srli	r2,r2,16
   4ddbc:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   4ddc0:	00001406 	br	4de14 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   4ddc4:	e0bffc17 	ldw	r2,-16(fp)
   4ddc8:	e0fffb17 	ldw	r3,-20(fp)
   4ddcc:	18c00d17 	ldw	r3,52(r3)
   4ddd0:	e13ffb17 	ldw	r4,-20(fp)
   4ddd4:	20c7883a 	add	r3,r4,r3
   4ddd8:	18c20e04 	addi	r3,r3,2104
   4dddc:	18c00003 	ldbu	r3,0(r3)
   4dde0:	18c03fcc 	andi	r3,r3,255
   4dde4:	18c0201c 	xori	r3,r3,128
   4dde8:	18ffe004 	addi	r3,r3,-128
   4ddec:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4ddf0:	e0bffb17 	ldw	r2,-20(fp)
   4ddf4:	10800d17 	ldw	r2,52(r2)
   4ddf8:	10800044 	addi	r2,r2,1
   4ddfc:	10c1ffcc 	andi	r3,r2,2047
   4de00:	e0bffb17 	ldw	r2,-20(fp)
   4de04:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   4de08:	e0bffa17 	ldw	r2,-24(fp)
   4de0c:	10bfffc4 	addi	r2,r2,-1
   4de10:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   4de14:	e0bffa17 	ldw	r2,-24(fp)
   4de18:	10000526 	beq	r2,zero,4de30 <altera_avalon_jtag_uart_irq+0x1a8>
   4de1c:	e0bffb17 	ldw	r2,-20(fp)
   4de20:	10c00d17 	ldw	r3,52(r2)
   4de24:	e0bffb17 	ldw	r2,-20(fp)
   4de28:	10800c17 	ldw	r2,48(r2)
   4de2c:	18bfe51e 	bne	r3,r2,4ddc4 <__alt_data_end+0xfffe6cc4>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   4de30:	e0bffa17 	ldw	r2,-24(fp)
   4de34:	103f9d26 	beq	r2,zero,4dcac <__alt_data_end+0xfffe6bac>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4de38:	e0bffb17 	ldw	r2,-20(fp)
   4de3c:	10c00817 	ldw	r3,32(r2)
   4de40:	00bfff44 	movi	r2,-3
   4de44:	1886703a 	and	r3,r3,r2
   4de48:	e0bffb17 	ldw	r2,-20(fp)
   4de4c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4de50:	e0bffb17 	ldw	r2,-20(fp)
   4de54:	10800017 	ldw	r2,0(r2)
   4de58:	10800104 	addi	r2,r2,4
   4de5c:	1007883a 	mov	r3,r2
   4de60:	e0bffb17 	ldw	r2,-20(fp)
   4de64:	10800817 	ldw	r2,32(r2)
   4de68:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4de6c:	e0bffc17 	ldw	r2,-16(fp)
   4de70:	10800104 	addi	r2,r2,4
   4de74:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   4de78:	003f8c06 	br	4dcac <__alt_data_end+0xfffe6bac>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   4de7c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   4de80:	0001883a 	nop
   4de84:	e037883a 	mov	sp,fp
   4de88:	df000017 	ldw	fp,0(sp)
   4de8c:	dec00104 	addi	sp,sp,4
   4de90:	f800283a 	ret

0004de94 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   4de94:	defff804 	addi	sp,sp,-32
   4de98:	df000715 	stw	fp,28(sp)
   4de9c:	df000704 	addi	fp,sp,28
   4dea0:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   4dea4:	e0bffb17 	ldw	r2,-20(fp)
   4dea8:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   4deac:	e0bff917 	ldw	r2,-28(fp)
   4deb0:	10800017 	ldw	r2,0(r2)
   4deb4:	10800104 	addi	r2,r2,4
   4deb8:	10800037 	ldwio	r2,0(r2)
   4debc:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   4dec0:	e0bffa17 	ldw	r2,-24(fp)
   4dec4:	1081000c 	andi	r2,r2,1024
   4dec8:	10000b26 	beq	r2,zero,4def8 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   4decc:	e0bff917 	ldw	r2,-28(fp)
   4ded0:	10800017 	ldw	r2,0(r2)
   4ded4:	10800104 	addi	r2,r2,4
   4ded8:	1007883a 	mov	r3,r2
   4dedc:	e0bff917 	ldw	r2,-28(fp)
   4dee0:	10800817 	ldw	r2,32(r2)
   4dee4:	10810014 	ori	r2,r2,1024
   4dee8:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   4deec:	e0bff917 	ldw	r2,-28(fp)
   4def0:	10000915 	stw	zero,36(r2)
   4def4:	00000a06 	br	4df20 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   4def8:	e0bff917 	ldw	r2,-28(fp)
   4defc:	10c00917 	ldw	r3,36(r2)
   4df00:	00a00034 	movhi	r2,32768
   4df04:	10bfff04 	addi	r2,r2,-4
   4df08:	10c00536 	bltu	r2,r3,4df20 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   4df0c:	e0bff917 	ldw	r2,-28(fp)
   4df10:	10800917 	ldw	r2,36(r2)
   4df14:	10c00044 	addi	r3,r2,1
   4df18:	e0bff917 	ldw	r2,-28(fp)
   4df1c:	10c00915 	stw	r3,36(r2)
   4df20:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   4df24:	e037883a 	mov	sp,fp
   4df28:	df000017 	ldw	fp,0(sp)
   4df2c:	dec00104 	addi	sp,sp,4
   4df30:	f800283a 	ret

0004df34 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   4df34:	defffd04 	addi	sp,sp,-12
   4df38:	df000215 	stw	fp,8(sp)
   4df3c:	df000204 	addi	fp,sp,8
   4df40:	e13ffe15 	stw	r4,-8(fp)
   4df44:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4df48:	00000506 	br	4df60 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   4df4c:	e0bfff17 	ldw	r2,-4(fp)
   4df50:	1090000c 	andi	r2,r2,16384
   4df54:	10000226 	beq	r2,zero,4df60 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   4df58:	00bffd44 	movi	r2,-11
   4df5c:	00000b06 	br	4df8c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4df60:	e0bffe17 	ldw	r2,-8(fp)
   4df64:	10c00d17 	ldw	r3,52(r2)
   4df68:	e0bffe17 	ldw	r2,-8(fp)
   4df6c:	10800c17 	ldw	r2,48(r2)
   4df70:	18800526 	beq	r3,r2,4df88 <altera_avalon_jtag_uart_close+0x54>
   4df74:	e0bffe17 	ldw	r2,-8(fp)
   4df78:	10c00917 	ldw	r3,36(r2)
   4df7c:	e0bffe17 	ldw	r2,-8(fp)
   4df80:	10800117 	ldw	r2,4(r2)
   4df84:	18bff136 	bltu	r3,r2,4df4c <__alt_data_end+0xfffe6e4c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   4df88:	0005883a 	mov	r2,zero
}
   4df8c:	e037883a 	mov	sp,fp
   4df90:	df000017 	ldw	fp,0(sp)
   4df94:	dec00104 	addi	sp,sp,4
   4df98:	f800283a 	ret

0004df9c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   4df9c:	defffa04 	addi	sp,sp,-24
   4dfa0:	df000515 	stw	fp,20(sp)
   4dfa4:	df000504 	addi	fp,sp,20
   4dfa8:	e13ffd15 	stw	r4,-12(fp)
   4dfac:	e17ffe15 	stw	r5,-8(fp)
   4dfb0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   4dfb4:	00bff9c4 	movi	r2,-25
   4dfb8:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   4dfbc:	e0bffe17 	ldw	r2,-8(fp)
   4dfc0:	10da8060 	cmpeqi	r3,r2,27137
   4dfc4:	1800031e 	bne	r3,zero,4dfd4 <altera_avalon_jtag_uart_ioctl+0x38>
   4dfc8:	109a80a0 	cmpeqi	r2,r2,27138
   4dfcc:	1000181e 	bne	r2,zero,4e030 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   4dfd0:	00002906 	br	4e078 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   4dfd4:	e0bffd17 	ldw	r2,-12(fp)
   4dfd8:	10c00117 	ldw	r3,4(r2)
   4dfdc:	00a00034 	movhi	r2,32768
   4dfe0:	10bfffc4 	addi	r2,r2,-1
   4dfe4:	18802126 	beq	r3,r2,4e06c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   4dfe8:	e0bfff17 	ldw	r2,-4(fp)
   4dfec:	10800017 	ldw	r2,0(r2)
   4dff0:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   4dff4:	e0bffc17 	ldw	r2,-16(fp)
   4dff8:	10800090 	cmplti	r2,r2,2
   4dffc:	1000061e 	bne	r2,zero,4e018 <altera_avalon_jtag_uart_ioctl+0x7c>
   4e000:	e0fffc17 	ldw	r3,-16(fp)
   4e004:	00a00034 	movhi	r2,32768
   4e008:	10bfffc4 	addi	r2,r2,-1
   4e00c:	18800226 	beq	r3,r2,4e018 <altera_avalon_jtag_uart_ioctl+0x7c>
   4e010:	e0bffc17 	ldw	r2,-16(fp)
   4e014:	00000206 	br	4e020 <altera_avalon_jtag_uart_ioctl+0x84>
   4e018:	00a00034 	movhi	r2,32768
   4e01c:	10bfff84 	addi	r2,r2,-2
   4e020:	e0fffd17 	ldw	r3,-12(fp)
   4e024:	18800115 	stw	r2,4(r3)
      rc = 0;
   4e028:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4e02c:	00000f06 	br	4e06c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   4e030:	e0bffd17 	ldw	r2,-12(fp)
   4e034:	10c00117 	ldw	r3,4(r2)
   4e038:	00a00034 	movhi	r2,32768
   4e03c:	10bfffc4 	addi	r2,r2,-1
   4e040:	18800c26 	beq	r3,r2,4e074 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   4e044:	e0bffd17 	ldw	r2,-12(fp)
   4e048:	10c00917 	ldw	r3,36(r2)
   4e04c:	e0bffd17 	ldw	r2,-12(fp)
   4e050:	10800117 	ldw	r2,4(r2)
   4e054:	1885803a 	cmpltu	r2,r3,r2
   4e058:	10c03fcc 	andi	r3,r2,255
   4e05c:	e0bfff17 	ldw	r2,-4(fp)
   4e060:	10c00015 	stw	r3,0(r2)
      rc = 0;
   4e064:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4e068:	00000206 	br	4e074 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   4e06c:	0001883a 	nop
   4e070:	00000106 	br	4e078 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   4e074:	0001883a 	nop

  default:
    break;
  }

  return rc;
   4e078:	e0bffb17 	ldw	r2,-20(fp)
}
   4e07c:	e037883a 	mov	sp,fp
   4e080:	df000017 	ldw	fp,0(sp)
   4e084:	dec00104 	addi	sp,sp,4
   4e088:	f800283a 	ret

0004e08c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   4e08c:	defff304 	addi	sp,sp,-52
   4e090:	dfc00c15 	stw	ra,48(sp)
   4e094:	df000b15 	stw	fp,44(sp)
   4e098:	df000b04 	addi	fp,sp,44
   4e09c:	e13ffc15 	stw	r4,-16(fp)
   4e0a0:	e17ffd15 	stw	r5,-12(fp)
   4e0a4:	e1bffe15 	stw	r6,-8(fp)
   4e0a8:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   4e0ac:	e0bffd17 	ldw	r2,-12(fp)
   4e0b0:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4e0b4:	00004706 	br	4e1d4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   4e0b8:	e0bffc17 	ldw	r2,-16(fp)
   4e0bc:	10800a17 	ldw	r2,40(r2)
   4e0c0:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   4e0c4:	e0bffc17 	ldw	r2,-16(fp)
   4e0c8:	10800b17 	ldw	r2,44(r2)
   4e0cc:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   4e0d0:	e0fff717 	ldw	r3,-36(fp)
   4e0d4:	e0bff817 	ldw	r2,-32(fp)
   4e0d8:	18800536 	bltu	r3,r2,4e0f0 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   4e0dc:	e0fff717 	ldw	r3,-36(fp)
   4e0e0:	e0bff817 	ldw	r2,-32(fp)
   4e0e4:	1885c83a 	sub	r2,r3,r2
   4e0e8:	e0bff615 	stw	r2,-40(fp)
   4e0ec:	00000406 	br	4e100 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   4e0f0:	00c20004 	movi	r3,2048
   4e0f4:	e0bff817 	ldw	r2,-32(fp)
   4e0f8:	1885c83a 	sub	r2,r3,r2
   4e0fc:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4e100:	e0bff617 	ldw	r2,-40(fp)
   4e104:	10001e26 	beq	r2,zero,4e180 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   4e108:	e0fffe17 	ldw	r3,-8(fp)
   4e10c:	e0bff617 	ldw	r2,-40(fp)
   4e110:	1880022e 	bgeu	r3,r2,4e11c <altera_avalon_jtag_uart_read+0x90>
        n = space;
   4e114:	e0bffe17 	ldw	r2,-8(fp)
   4e118:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   4e11c:	e0bffc17 	ldw	r2,-16(fp)
   4e120:	10c00e04 	addi	r3,r2,56
   4e124:	e0bff817 	ldw	r2,-32(fp)
   4e128:	1885883a 	add	r2,r3,r2
   4e12c:	e1bff617 	ldw	r6,-40(fp)
   4e130:	100b883a 	mov	r5,r2
   4e134:	e13ff517 	ldw	r4,-44(fp)
   4e138:	00462180 	call	46218 <memcpy>
      ptr   += n;
   4e13c:	e0fff517 	ldw	r3,-44(fp)
   4e140:	e0bff617 	ldw	r2,-40(fp)
   4e144:	1885883a 	add	r2,r3,r2
   4e148:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   4e14c:	e0fffe17 	ldw	r3,-8(fp)
   4e150:	e0bff617 	ldw	r2,-40(fp)
   4e154:	1885c83a 	sub	r2,r3,r2
   4e158:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e15c:	e0fff817 	ldw	r3,-32(fp)
   4e160:	e0bff617 	ldw	r2,-40(fp)
   4e164:	1885883a 	add	r2,r3,r2
   4e168:	10c1ffcc 	andi	r3,r2,2047
   4e16c:	e0bffc17 	ldw	r2,-16(fp)
   4e170:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   4e174:	e0bffe17 	ldw	r2,-8(fp)
   4e178:	00bfcf16 	blt	zero,r2,4e0b8 <__alt_data_end+0xfffe6fb8>
   4e17c:	00000106 	br	4e184 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   4e180:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   4e184:	e0fff517 	ldw	r3,-44(fp)
   4e188:	e0bffd17 	ldw	r2,-12(fp)
   4e18c:	1880141e 	bne	r3,r2,4e1e0 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   4e190:	e0bfff17 	ldw	r2,-4(fp)
   4e194:	1090000c 	andi	r2,r2,16384
   4e198:	1000131e 	bne	r2,zero,4e1e8 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   4e19c:	0001883a 	nop
   4e1a0:	e0bffc17 	ldw	r2,-16(fp)
   4e1a4:	10c00a17 	ldw	r3,40(r2)
   4e1a8:	e0bff717 	ldw	r2,-36(fp)
   4e1ac:	1880051e 	bne	r3,r2,4e1c4 <altera_avalon_jtag_uart_read+0x138>
   4e1b0:	e0bffc17 	ldw	r2,-16(fp)
   4e1b4:	10c00917 	ldw	r3,36(r2)
   4e1b8:	e0bffc17 	ldw	r2,-16(fp)
   4e1bc:	10800117 	ldw	r2,4(r2)
   4e1c0:	18bff736 	bltu	r3,r2,4e1a0 <__alt_data_end+0xfffe70a0>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   4e1c4:	e0bffc17 	ldw	r2,-16(fp)
   4e1c8:	10c00a17 	ldw	r3,40(r2)
   4e1cc:	e0bff717 	ldw	r2,-36(fp)
   4e1d0:	18800726 	beq	r3,r2,4e1f0 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4e1d4:	e0bffe17 	ldw	r2,-8(fp)
   4e1d8:	00bfb716 	blt	zero,r2,4e0b8 <__alt_data_end+0xfffe6fb8>
   4e1dc:	00000506 	br	4e1f4 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   4e1e0:	0001883a 	nop
   4e1e4:	00000306 	br	4e1f4 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   4e1e8:	0001883a 	nop
   4e1ec:	00000106 	br	4e1f4 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   4e1f0:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   4e1f4:	e0fff517 	ldw	r3,-44(fp)
   4e1f8:	e0bffd17 	ldw	r2,-12(fp)
   4e1fc:	18801826 	beq	r3,r2,4e260 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e200:	0005303a 	rdctl	r2,status
   4e204:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e208:	e0fffb17 	ldw	r3,-20(fp)
   4e20c:	00bfff84 	movi	r2,-2
   4e210:	1884703a 	and	r2,r3,r2
   4e214:	1001703a 	wrctl	status,r2
  
  return context;
   4e218:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   4e21c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4e220:	e0bffc17 	ldw	r2,-16(fp)
   4e224:	10800817 	ldw	r2,32(r2)
   4e228:	10c00054 	ori	r3,r2,1
   4e22c:	e0bffc17 	ldw	r2,-16(fp)
   4e230:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e234:	e0bffc17 	ldw	r2,-16(fp)
   4e238:	10800017 	ldw	r2,0(r2)
   4e23c:	10800104 	addi	r2,r2,4
   4e240:	1007883a 	mov	r3,r2
   4e244:	e0bffc17 	ldw	r2,-16(fp)
   4e248:	10800817 	ldw	r2,32(r2)
   4e24c:	18800035 	stwio	r2,0(r3)
   4e250:	e0bffa17 	ldw	r2,-24(fp)
   4e254:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e258:	e0bff917 	ldw	r2,-28(fp)
   4e25c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   4e260:	e0fff517 	ldw	r3,-44(fp)
   4e264:	e0bffd17 	ldw	r2,-12(fp)
   4e268:	18800426 	beq	r3,r2,4e27c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   4e26c:	e0fff517 	ldw	r3,-44(fp)
   4e270:	e0bffd17 	ldw	r2,-12(fp)
   4e274:	1885c83a 	sub	r2,r3,r2
   4e278:	00000606 	br	4e294 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   4e27c:	e0bfff17 	ldw	r2,-4(fp)
   4e280:	1090000c 	andi	r2,r2,16384
   4e284:	10000226 	beq	r2,zero,4e290 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   4e288:	00bffd44 	movi	r2,-11
   4e28c:	00000106 	br	4e294 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   4e290:	00bffec4 	movi	r2,-5
}
   4e294:	e037883a 	mov	sp,fp
   4e298:	dfc00117 	ldw	ra,4(sp)
   4e29c:	df000017 	ldw	fp,0(sp)
   4e2a0:	dec00204 	addi	sp,sp,8
   4e2a4:	f800283a 	ret

0004e2a8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   4e2a8:	defff304 	addi	sp,sp,-52
   4e2ac:	dfc00c15 	stw	ra,48(sp)
   4e2b0:	df000b15 	stw	fp,44(sp)
   4e2b4:	df000b04 	addi	fp,sp,44
   4e2b8:	e13ffc15 	stw	r4,-16(fp)
   4e2bc:	e17ffd15 	stw	r5,-12(fp)
   4e2c0:	e1bffe15 	stw	r6,-8(fp)
   4e2c4:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   4e2c8:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   4e2cc:	e0bffd17 	ldw	r2,-12(fp)
   4e2d0:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4e2d4:	00003706 	br	4e3b4 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   4e2d8:	e0bffc17 	ldw	r2,-16(fp)
   4e2dc:	10800c17 	ldw	r2,48(r2)
   4e2e0:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   4e2e4:	e0bffc17 	ldw	r2,-16(fp)
   4e2e8:	10800d17 	ldw	r2,52(r2)
   4e2ec:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   4e2f0:	e0fff917 	ldw	r3,-28(fp)
   4e2f4:	e0bff517 	ldw	r2,-44(fp)
   4e2f8:	1880062e 	bgeu	r3,r2,4e314 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   4e2fc:	e0fff517 	ldw	r3,-44(fp)
   4e300:	e0bff917 	ldw	r2,-28(fp)
   4e304:	1885c83a 	sub	r2,r3,r2
   4e308:	10bfffc4 	addi	r2,r2,-1
   4e30c:	e0bff615 	stw	r2,-40(fp)
   4e310:	00000b06 	br	4e340 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   4e314:	e0bff517 	ldw	r2,-44(fp)
   4e318:	10000526 	beq	r2,zero,4e330 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   4e31c:	00c20004 	movi	r3,2048
   4e320:	e0bff917 	ldw	r2,-28(fp)
   4e324:	1885c83a 	sub	r2,r3,r2
   4e328:	e0bff615 	stw	r2,-40(fp)
   4e32c:	00000406 	br	4e340 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   4e330:	00c1ffc4 	movi	r3,2047
   4e334:	e0bff917 	ldw	r2,-28(fp)
   4e338:	1885c83a 	sub	r2,r3,r2
   4e33c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4e340:	e0bff617 	ldw	r2,-40(fp)
   4e344:	10001e26 	beq	r2,zero,4e3c0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   4e348:	e0fffe17 	ldw	r3,-8(fp)
   4e34c:	e0bff617 	ldw	r2,-40(fp)
   4e350:	1880022e 	bgeu	r3,r2,4e35c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   4e354:	e0bffe17 	ldw	r2,-8(fp)
   4e358:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   4e35c:	e0bffc17 	ldw	r2,-16(fp)
   4e360:	10c20e04 	addi	r3,r2,2104
   4e364:	e0bff917 	ldw	r2,-28(fp)
   4e368:	1885883a 	add	r2,r3,r2
   4e36c:	e1bff617 	ldw	r6,-40(fp)
   4e370:	e17ffd17 	ldw	r5,-12(fp)
   4e374:	1009883a 	mov	r4,r2
   4e378:	00462180 	call	46218 <memcpy>
      ptr   += n;
   4e37c:	e0fffd17 	ldw	r3,-12(fp)
   4e380:	e0bff617 	ldw	r2,-40(fp)
   4e384:	1885883a 	add	r2,r3,r2
   4e388:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   4e38c:	e0fffe17 	ldw	r3,-8(fp)
   4e390:	e0bff617 	ldw	r2,-40(fp)
   4e394:	1885c83a 	sub	r2,r3,r2
   4e398:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e39c:	e0fff917 	ldw	r3,-28(fp)
   4e3a0:	e0bff617 	ldw	r2,-40(fp)
   4e3a4:	1885883a 	add	r2,r3,r2
   4e3a8:	10c1ffcc 	andi	r3,r2,2047
   4e3ac:	e0bffc17 	ldw	r2,-16(fp)
   4e3b0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4e3b4:	e0bffe17 	ldw	r2,-8(fp)
   4e3b8:	00bfc716 	blt	zero,r2,4e2d8 <__alt_data_end+0xfffe71d8>
   4e3bc:	00000106 	br	4e3c4 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   4e3c0:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e3c4:	0005303a 	rdctl	r2,status
   4e3c8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e3cc:	e0fffb17 	ldw	r3,-20(fp)
   4e3d0:	00bfff84 	movi	r2,-2
   4e3d4:	1884703a 	and	r2,r3,r2
   4e3d8:	1001703a 	wrctl	status,r2
  
  return context;
   4e3dc:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   4e3e0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4e3e4:	e0bffc17 	ldw	r2,-16(fp)
   4e3e8:	10800817 	ldw	r2,32(r2)
   4e3ec:	10c00094 	ori	r3,r2,2
   4e3f0:	e0bffc17 	ldw	r2,-16(fp)
   4e3f4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e3f8:	e0bffc17 	ldw	r2,-16(fp)
   4e3fc:	10800017 	ldw	r2,0(r2)
   4e400:	10800104 	addi	r2,r2,4
   4e404:	1007883a 	mov	r3,r2
   4e408:	e0bffc17 	ldw	r2,-16(fp)
   4e40c:	10800817 	ldw	r2,32(r2)
   4e410:	18800035 	stwio	r2,0(r3)
   4e414:	e0bffa17 	ldw	r2,-24(fp)
   4e418:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e41c:	e0bff817 	ldw	r2,-32(fp)
   4e420:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   4e424:	e0bffe17 	ldw	r2,-8(fp)
   4e428:	0080100e 	bge	zero,r2,4e46c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   4e42c:	e0bfff17 	ldw	r2,-4(fp)
   4e430:	1090000c 	andi	r2,r2,16384
   4e434:	1000101e 	bne	r2,zero,4e478 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   4e438:	0001883a 	nop
   4e43c:	e0bffc17 	ldw	r2,-16(fp)
   4e440:	10c00d17 	ldw	r3,52(r2)
   4e444:	e0bff517 	ldw	r2,-44(fp)
   4e448:	1880051e 	bne	r3,r2,4e460 <altera_avalon_jtag_uart_write+0x1b8>
   4e44c:	e0bffc17 	ldw	r2,-16(fp)
   4e450:	10c00917 	ldw	r3,36(r2)
   4e454:	e0bffc17 	ldw	r2,-16(fp)
   4e458:	10800117 	ldw	r2,4(r2)
   4e45c:	18bff736 	bltu	r3,r2,4e43c <__alt_data_end+0xfffe733c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   4e460:	e0bffc17 	ldw	r2,-16(fp)
   4e464:	10800917 	ldw	r2,36(r2)
   4e468:	1000051e 	bne	r2,zero,4e480 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   4e46c:	e0bffe17 	ldw	r2,-8(fp)
   4e470:	00bfd016 	blt	zero,r2,4e3b4 <__alt_data_end+0xfffe72b4>
   4e474:	00000306 	br	4e484 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   4e478:	0001883a 	nop
   4e47c:	00000106 	br	4e484 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   4e480:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   4e484:	e0fffd17 	ldw	r3,-12(fp)
   4e488:	e0bff717 	ldw	r2,-36(fp)
   4e48c:	18800426 	beq	r3,r2,4e4a0 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   4e490:	e0fffd17 	ldw	r3,-12(fp)
   4e494:	e0bff717 	ldw	r2,-36(fp)
   4e498:	1885c83a 	sub	r2,r3,r2
   4e49c:	00000606 	br	4e4b8 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   4e4a0:	e0bfff17 	ldw	r2,-4(fp)
   4e4a4:	1090000c 	andi	r2,r2,16384
   4e4a8:	10000226 	beq	r2,zero,4e4b4 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   4e4ac:	00bffd44 	movi	r2,-11
   4e4b0:	00000106 	br	4e4b8 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   4e4b4:	00bffec4 	movi	r2,-5
}
   4e4b8:	e037883a 	mov	sp,fp
   4e4bc:	dfc00117 	ldw	ra,4(sp)
   4e4c0:	df000017 	ldw	fp,0(sp)
   4e4c4:	dec00204 	addi	sp,sp,8
   4e4c8:	f800283a 	ret

0004e4cc <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   4e4cc:	defffa04 	addi	sp,sp,-24
   4e4d0:	dfc00515 	stw	ra,20(sp)
   4e4d4:	df000415 	stw	fp,16(sp)
   4e4d8:	df000404 	addi	fp,sp,16
   4e4dc:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   4e4e0:	0007883a 	mov	r3,zero
   4e4e4:	e0bfff17 	ldw	r2,-4(fp)
   4e4e8:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   4e4ec:	e0bfff17 	ldw	r2,-4(fp)
   4e4f0:	10800104 	addi	r2,r2,4
   4e4f4:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e4f8:	0005303a 	rdctl	r2,status
   4e4fc:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e500:	e0fffd17 	ldw	r3,-12(fp)
   4e504:	00bfff84 	movi	r2,-2
   4e508:	1884703a 	and	r2,r3,r2
   4e50c:	1001703a 	wrctl	status,r2
  
  return context;
   4e510:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   4e514:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   4e518:	004f1300 	call	4f130 <alt_tick>
   4e51c:	e0bffc17 	ldw	r2,-16(fp)
   4e520:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e524:	e0bffe17 	ldw	r2,-8(fp)
   4e528:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   4e52c:	0001883a 	nop
   4e530:	e037883a 	mov	sp,fp
   4e534:	dfc00117 	ldw	ra,4(sp)
   4e538:	df000017 	ldw	fp,0(sp)
   4e53c:	dec00204 	addi	sp,sp,8
   4e540:	f800283a 	ret

0004e544 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   4e544:	defff804 	addi	sp,sp,-32
   4e548:	dfc00715 	stw	ra,28(sp)
   4e54c:	df000615 	stw	fp,24(sp)
   4e550:	df000604 	addi	fp,sp,24
   4e554:	e13ffc15 	stw	r4,-16(fp)
   4e558:	e17ffd15 	stw	r5,-12(fp)
   4e55c:	e1bffe15 	stw	r6,-8(fp)
   4e560:	e1ffff15 	stw	r7,-4(fp)
   4e564:	e0bfff17 	ldw	r2,-4(fp)
   4e568:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   4e56c:	d0a6d617 	ldw	r2,-25768(gp)
   4e570:	1000021e 	bne	r2,zero,4e57c <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
   4e574:	e0bffb17 	ldw	r2,-20(fp)
   4e578:	d0a6d615 	stw	r2,-25768(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   4e57c:	e0bffc17 	ldw	r2,-16(fp)
   4e580:	10800104 	addi	r2,r2,4
   4e584:	00c001c4 	movi	r3,7
   4e588:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   4e58c:	d8000015 	stw	zero,0(sp)
   4e590:	e1fffc17 	ldw	r7,-16(fp)
   4e594:	01800174 	movhi	r6,5
   4e598:	31b93304 	addi	r6,r6,-6964
   4e59c:	e17ffe17 	ldw	r5,-8(fp)
   4e5a0:	e13ffd17 	ldw	r4,-12(fp)
   4e5a4:	004ea600 	call	4ea60 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   4e5a8:	0001883a 	nop
   4e5ac:	e037883a 	mov	sp,fp
   4e5b0:	dfc00117 	ldw	ra,4(sp)
   4e5b4:	df000017 	ldw	fp,0(sp)
   4e5b8:	dec00204 	addi	sp,sp,8
   4e5bc:	f800283a 	ret

0004e5c0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   4e5c0:	defff504 	addi	sp,sp,-44
   4e5c4:	df000a15 	stw	fp,40(sp)
   4e5c8:	df000a04 	addi	fp,sp,40
   4e5cc:	e13ffc15 	stw	r4,-16(fp)
   4e5d0:	e17ffd15 	stw	r5,-12(fp)
   4e5d4:	e1bffe15 	stw	r6,-8(fp)
   4e5d8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   4e5dc:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4e5e0:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
   4e5e4:	10003c26 	beq	r2,zero,4e6d8 <alt_alarm_start+0x118>
  {
    if (alarm)
   4e5e8:	e0bffc17 	ldw	r2,-16(fp)
   4e5ec:	10003826 	beq	r2,zero,4e6d0 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   4e5f0:	e0bffc17 	ldw	r2,-16(fp)
   4e5f4:	e0fffe17 	ldw	r3,-8(fp)
   4e5f8:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   4e5fc:	e0bffc17 	ldw	r2,-16(fp)
   4e600:	e0ffff17 	ldw	r3,-4(fp)
   4e604:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e608:	0005303a 	rdctl	r2,status
   4e60c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e610:	e0fff917 	ldw	r3,-28(fp)
   4e614:	00bfff84 	movi	r2,-2
   4e618:	1884703a 	and	r2,r3,r2
   4e61c:	1001703a 	wrctl	status,r2
  
  return context;
   4e620:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   4e624:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   4e628:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
   4e62c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   4e630:	e0fffd17 	ldw	r3,-12(fp)
   4e634:	e0bff617 	ldw	r2,-40(fp)
   4e638:	1885883a 	add	r2,r3,r2
   4e63c:	10c00044 	addi	r3,r2,1
   4e640:	e0bffc17 	ldw	r2,-16(fp)
   4e644:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   4e648:	e0bffc17 	ldw	r2,-16(fp)
   4e64c:	10c00217 	ldw	r3,8(r2)
   4e650:	e0bff617 	ldw	r2,-40(fp)
   4e654:	1880042e 	bgeu	r3,r2,4e668 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   4e658:	e0bffc17 	ldw	r2,-16(fp)
   4e65c:	00c00044 	movi	r3,1
   4e660:	10c00405 	stb	r3,16(r2)
   4e664:	00000206 	br	4e670 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   4e668:	e0bffc17 	ldw	r2,-16(fp)
   4e66c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   4e670:	e0bffc17 	ldw	r2,-16(fp)
   4e674:	d0e00e04 	addi	r3,gp,-32712
   4e678:	e0fffa15 	stw	r3,-24(fp)
   4e67c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4e680:	e0bffb17 	ldw	r2,-20(fp)
   4e684:	e0fffa17 	ldw	r3,-24(fp)
   4e688:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4e68c:	e0bffa17 	ldw	r2,-24(fp)
   4e690:	10c00017 	ldw	r3,0(r2)
   4e694:	e0bffb17 	ldw	r2,-20(fp)
   4e698:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4e69c:	e0bffa17 	ldw	r2,-24(fp)
   4e6a0:	10800017 	ldw	r2,0(r2)
   4e6a4:	e0fffb17 	ldw	r3,-20(fp)
   4e6a8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4e6ac:	e0bffa17 	ldw	r2,-24(fp)
   4e6b0:	e0fffb17 	ldw	r3,-20(fp)
   4e6b4:	10c00015 	stw	r3,0(r2)
   4e6b8:	e0bff817 	ldw	r2,-32(fp)
   4e6bc:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e6c0:	e0bff717 	ldw	r2,-36(fp)
   4e6c4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   4e6c8:	0005883a 	mov	r2,zero
   4e6cc:	00000306 	br	4e6dc <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   4e6d0:	00bffa84 	movi	r2,-22
   4e6d4:	00000106 	br	4e6dc <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   4e6d8:	00bfde84 	movi	r2,-134
  }
}
   4e6dc:	e037883a 	mov	sp,fp
   4e6e0:	df000017 	ldw	fp,0(sp)
   4e6e4:	dec00104 	addi	sp,sp,4
   4e6e8:	f800283a 	ret

0004e6ec <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   4e6ec:	defffa04 	addi	sp,sp,-24
   4e6f0:	dfc00515 	stw	ra,20(sp)
   4e6f4:	df000415 	stw	fp,16(sp)
   4e6f8:	df000404 	addi	fp,sp,16
   4e6fc:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   4e700:	008000c4 	movi	r2,3
   4e704:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   4e708:	e0fffd17 	ldw	r3,-12(fp)
   4e70c:	008003f4 	movhi	r2,15
   4e710:	10909004 	addi	r2,r2,16960
   4e714:	1885383a 	mul	r2,r3,r2
   4e718:	100b883a 	mov	r5,r2
   4e71c:	0100bef4 	movhi	r4,763
   4e720:	213c2004 	addi	r4,r4,-3968
   4e724:	00406700 	call	40670 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   4e728:	100b883a 	mov	r5,r2
   4e72c:	01200034 	movhi	r4,32768
   4e730:	213fffc4 	addi	r4,r4,-1
   4e734:	00406700 	call	40670 <__udivsi3>
   4e738:	100b883a 	mov	r5,r2
   4e73c:	e13fff17 	ldw	r4,-4(fp)
   4e740:	00406700 	call	40670 <__udivsi3>
   4e744:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   4e748:	e0bffe17 	ldw	r2,-8(fp)
   4e74c:	10002a26 	beq	r2,zero,4e7f8 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   4e750:	e03ffc15 	stw	zero,-16(fp)
   4e754:	00001706 	br	4e7b4 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   4e758:	00a00034 	movhi	r2,32768
   4e75c:	10bfffc4 	addi	r2,r2,-1
   4e760:	10bfffc4 	addi	r2,r2,-1
   4e764:	103ffe1e 	bne	r2,zero,4e760 <__alt_data_end+0xfffe7660>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   4e768:	e0fffd17 	ldw	r3,-12(fp)
   4e76c:	008003f4 	movhi	r2,15
   4e770:	10909004 	addi	r2,r2,16960
   4e774:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   4e778:	100b883a 	mov	r5,r2
   4e77c:	0100bef4 	movhi	r4,763
   4e780:	213c2004 	addi	r4,r4,-3968
   4e784:	00406700 	call	40670 <__udivsi3>
   4e788:	100b883a 	mov	r5,r2
   4e78c:	01200034 	movhi	r4,32768
   4e790:	213fffc4 	addi	r4,r4,-1
   4e794:	00406700 	call	40670 <__udivsi3>
   4e798:	1007883a 	mov	r3,r2
   4e79c:	e0bfff17 	ldw	r2,-4(fp)
   4e7a0:	10c5c83a 	sub	r2,r2,r3
   4e7a4:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   4e7a8:	e0bffc17 	ldw	r2,-16(fp)
   4e7ac:	10800044 	addi	r2,r2,1
   4e7b0:	e0bffc15 	stw	r2,-16(fp)
   4e7b4:	e0fffc17 	ldw	r3,-16(fp)
   4e7b8:	e0bffe17 	ldw	r2,-8(fp)
   4e7bc:	18bfe616 	blt	r3,r2,4e758 <__alt_data_end+0xfffe7658>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   4e7c0:	e0fffd17 	ldw	r3,-12(fp)
   4e7c4:	008003f4 	movhi	r2,15
   4e7c8:	10909004 	addi	r2,r2,16960
   4e7cc:	1885383a 	mul	r2,r3,r2
   4e7d0:	100b883a 	mov	r5,r2
   4e7d4:	0100bef4 	movhi	r4,763
   4e7d8:	213c2004 	addi	r4,r4,-3968
   4e7dc:	00406700 	call	40670 <__udivsi3>
   4e7e0:	1007883a 	mov	r3,r2
   4e7e4:	e0bfff17 	ldw	r2,-4(fp)
   4e7e8:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   4e7ec:	10bfffc4 	addi	r2,r2,-1
   4e7f0:	103ffe1e 	bne	r2,zero,4e7ec <__alt_data_end+0xfffe76ec>
   4e7f4:	00000d06 	br	4e82c <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   4e7f8:	e0fffd17 	ldw	r3,-12(fp)
   4e7fc:	008003f4 	movhi	r2,15
   4e800:	10909004 	addi	r2,r2,16960
   4e804:	1885383a 	mul	r2,r3,r2
   4e808:	100b883a 	mov	r5,r2
   4e80c:	0100bef4 	movhi	r4,763
   4e810:	213c2004 	addi	r4,r4,-3968
   4e814:	00406700 	call	40670 <__udivsi3>
   4e818:	1007883a 	mov	r3,r2
   4e81c:	e0bfff17 	ldw	r2,-4(fp)
   4e820:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   4e824:	10bfffc4 	addi	r2,r2,-1
   4e828:	00bffe16 	blt	zero,r2,4e824 <__alt_data_end+0xfffe7724>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   4e82c:	0005883a 	mov	r2,zero
}
   4e830:	e037883a 	mov	sp,fp
   4e834:	dfc00117 	ldw	ra,4(sp)
   4e838:	df000017 	ldw	fp,0(sp)
   4e83c:	dec00204 	addi	sp,sp,8
   4e840:	f800283a 	ret

0004e844 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   4e844:	defffe04 	addi	sp,sp,-8
   4e848:	df000115 	stw	fp,4(sp)
   4e84c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4e850:	e03fff15 	stw	zero,-4(fp)
   4e854:	00000506 	br	4e86c <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   4e858:	e0bfff17 	ldw	r2,-4(fp)
   4e85c:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4e860:	e0bfff17 	ldw	r2,-4(fp)
   4e864:	10800804 	addi	r2,r2,32
   4e868:	e0bfff15 	stw	r2,-4(fp)
   4e86c:	e0bfff17 	ldw	r2,-4(fp)
   4e870:	10820030 	cmpltui	r2,r2,2048
   4e874:	103ff81e 	bne	r2,zero,4e858 <__alt_data_end+0xfffe7758>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   4e878:	0001883a 	nop
   4e87c:	e037883a 	mov	sp,fp
   4e880:	df000017 	ldw	fp,0(sp)
   4e884:	dec00104 	addi	sp,sp,4
   4e888:	f800283a 	ret

0004e88c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4e88c:	defffe04 	addi	sp,sp,-8
   4e890:	dfc00115 	stw	ra,4(sp)
   4e894:	df000015 	stw	fp,0(sp)
   4e898:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4e89c:	d0a00b17 	ldw	r2,-32724(gp)
   4e8a0:	10000326 	beq	r2,zero,4e8b0 <alt_get_errno+0x24>
   4e8a4:	d0a00b17 	ldw	r2,-32724(gp)
   4e8a8:	103ee83a 	callr	r2
   4e8ac:	00000106 	br	4e8b4 <alt_get_errno+0x28>
   4e8b0:	d0a6d104 	addi	r2,gp,-25788
}
   4e8b4:	e037883a 	mov	sp,fp
   4e8b8:	dfc00117 	ldw	ra,4(sp)
   4e8bc:	df000017 	ldw	fp,0(sp)
   4e8c0:	dec00204 	addi	sp,sp,8
   4e8c4:	f800283a 	ret

0004e8c8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   4e8c8:	defffa04 	addi	sp,sp,-24
   4e8cc:	dfc00515 	stw	ra,20(sp)
   4e8d0:	df000415 	stw	fp,16(sp)
   4e8d4:	df000404 	addi	fp,sp,16
   4e8d8:	e13ffe15 	stw	r4,-8(fp)
   4e8dc:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   4e8e0:	e0bffe17 	ldw	r2,-8(fp)
   4e8e4:	10000326 	beq	r2,zero,4e8f4 <alt_dev_llist_insert+0x2c>
   4e8e8:	e0bffe17 	ldw	r2,-8(fp)
   4e8ec:	10800217 	ldw	r2,8(r2)
   4e8f0:	1000061e 	bne	r2,zero,4e90c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   4e8f4:	004e88c0 	call	4e88c <alt_get_errno>
   4e8f8:	1007883a 	mov	r3,r2
   4e8fc:	00800584 	movi	r2,22
   4e900:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   4e904:	00bffa84 	movi	r2,-22
   4e908:	00001306 	br	4e958 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   4e90c:	e0bffe17 	ldw	r2,-8(fp)
   4e910:	e0ffff17 	ldw	r3,-4(fp)
   4e914:	e0fffc15 	stw	r3,-16(fp)
   4e918:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4e91c:	e0bffd17 	ldw	r2,-12(fp)
   4e920:	e0fffc17 	ldw	r3,-16(fp)
   4e924:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4e928:	e0bffc17 	ldw	r2,-16(fp)
   4e92c:	10c00017 	ldw	r3,0(r2)
   4e930:	e0bffd17 	ldw	r2,-12(fp)
   4e934:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4e938:	e0bffc17 	ldw	r2,-16(fp)
   4e93c:	10800017 	ldw	r2,0(r2)
   4e940:	e0fffd17 	ldw	r3,-12(fp)
   4e944:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4e948:	e0bffc17 	ldw	r2,-16(fp)
   4e94c:	e0fffd17 	ldw	r3,-12(fp)
   4e950:	10c00015 	stw	r3,0(r2)

  return 0;  
   4e954:	0005883a 	mov	r2,zero
}
   4e958:	e037883a 	mov	sp,fp
   4e95c:	dfc00117 	ldw	ra,4(sp)
   4e960:	df000017 	ldw	fp,0(sp)
   4e964:	dec00204 	addi	sp,sp,8
   4e968:	f800283a 	ret

0004e96c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   4e96c:	defffd04 	addi	sp,sp,-12
   4e970:	dfc00215 	stw	ra,8(sp)
   4e974:	df000115 	stw	fp,4(sp)
   4e978:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4e97c:	00800174 	movhi	r2,5
   4e980:	10be5504 	addi	r2,r2,-1708
   4e984:	e0bfff15 	stw	r2,-4(fp)
   4e988:	00000606 	br	4e9a4 <_do_ctors+0x38>
        (*ctor) (); 
   4e98c:	e0bfff17 	ldw	r2,-4(fp)
   4e990:	10800017 	ldw	r2,0(r2)
   4e994:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4e998:	e0bfff17 	ldw	r2,-4(fp)
   4e99c:	10bfff04 	addi	r2,r2,-4
   4e9a0:	e0bfff15 	stw	r2,-4(fp)
   4e9a4:	e0ffff17 	ldw	r3,-4(fp)
   4e9a8:	00800174 	movhi	r2,5
   4e9ac:	10be5604 	addi	r2,r2,-1704
   4e9b0:	18bff62e 	bgeu	r3,r2,4e98c <__alt_data_end+0xfffe788c>
        (*ctor) (); 
}
   4e9b4:	0001883a 	nop
   4e9b8:	e037883a 	mov	sp,fp
   4e9bc:	dfc00117 	ldw	ra,4(sp)
   4e9c0:	df000017 	ldw	fp,0(sp)
   4e9c4:	dec00204 	addi	sp,sp,8
   4e9c8:	f800283a 	ret

0004e9cc <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   4e9cc:	defffd04 	addi	sp,sp,-12
   4e9d0:	dfc00215 	stw	ra,8(sp)
   4e9d4:	df000115 	stw	fp,4(sp)
   4e9d8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4e9dc:	00800174 	movhi	r2,5
   4e9e0:	10be5504 	addi	r2,r2,-1708
   4e9e4:	e0bfff15 	stw	r2,-4(fp)
   4e9e8:	00000606 	br	4ea04 <_do_dtors+0x38>
        (*dtor) (); 
   4e9ec:	e0bfff17 	ldw	r2,-4(fp)
   4e9f0:	10800017 	ldw	r2,0(r2)
   4e9f4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4e9f8:	e0bfff17 	ldw	r2,-4(fp)
   4e9fc:	10bfff04 	addi	r2,r2,-4
   4ea00:	e0bfff15 	stw	r2,-4(fp)
   4ea04:	e0ffff17 	ldw	r3,-4(fp)
   4ea08:	00800174 	movhi	r2,5
   4ea0c:	10be5604 	addi	r2,r2,-1704
   4ea10:	18bff62e 	bgeu	r3,r2,4e9ec <__alt_data_end+0xfffe78ec>
        (*dtor) (); 
}
   4ea14:	0001883a 	nop
   4ea18:	e037883a 	mov	sp,fp
   4ea1c:	dfc00117 	ldw	ra,4(sp)
   4ea20:	df000017 	ldw	fp,0(sp)
   4ea24:	dec00204 	addi	sp,sp,8
   4ea28:	f800283a 	ret

0004ea2c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   4ea2c:	defffe04 	addi	sp,sp,-8
   4ea30:	dfc00115 	stw	ra,4(sp)
   4ea34:	df000015 	stw	fp,0(sp)
   4ea38:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   4ea3c:	01440004 	movi	r5,4096
   4ea40:	0009883a 	mov	r4,zero
   4ea44:	004f4980 	call	4f498 <alt_icache_flush>
#endif
}
   4ea48:	0001883a 	nop
   4ea4c:	e037883a 	mov	sp,fp
   4ea50:	dfc00117 	ldw	ra,4(sp)
   4ea54:	df000017 	ldw	fp,0(sp)
   4ea58:	dec00204 	addi	sp,sp,8
   4ea5c:	f800283a 	ret

0004ea60 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4ea60:	defff904 	addi	sp,sp,-28
   4ea64:	dfc00615 	stw	ra,24(sp)
   4ea68:	df000515 	stw	fp,20(sp)
   4ea6c:	df000504 	addi	fp,sp,20
   4ea70:	e13ffc15 	stw	r4,-16(fp)
   4ea74:	e17ffd15 	stw	r5,-12(fp)
   4ea78:	e1bffe15 	stw	r6,-8(fp)
   4ea7c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   4ea80:	e0800217 	ldw	r2,8(fp)
   4ea84:	d8800015 	stw	r2,0(sp)
   4ea88:	e1ffff17 	ldw	r7,-4(fp)
   4ea8c:	e1bffe17 	ldw	r6,-8(fp)
   4ea90:	e17ffd17 	ldw	r5,-12(fp)
   4ea94:	e13ffc17 	ldw	r4,-16(fp)
   4ea98:	004ec100 	call	4ec10 <alt_iic_isr_register>
}  
   4ea9c:	e037883a 	mov	sp,fp
   4eaa0:	dfc00117 	ldw	ra,4(sp)
   4eaa4:	df000017 	ldw	fp,0(sp)
   4eaa8:	dec00204 	addi	sp,sp,8
   4eaac:	f800283a 	ret

0004eab0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   4eab0:	defff904 	addi	sp,sp,-28
   4eab4:	df000615 	stw	fp,24(sp)
   4eab8:	df000604 	addi	fp,sp,24
   4eabc:	e13ffe15 	stw	r4,-8(fp)
   4eac0:	e17fff15 	stw	r5,-4(fp)
   4eac4:	e0bfff17 	ldw	r2,-4(fp)
   4eac8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4eacc:	0005303a 	rdctl	r2,status
   4ead0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ead4:	e0fffb17 	ldw	r3,-20(fp)
   4ead8:	00bfff84 	movi	r2,-2
   4eadc:	1884703a 	and	r2,r3,r2
   4eae0:	1001703a 	wrctl	status,r2
  
  return context;
   4eae4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4eae8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   4eaec:	00c00044 	movi	r3,1
   4eaf0:	e0bffa17 	ldw	r2,-24(fp)
   4eaf4:	1884983a 	sll	r2,r3,r2
   4eaf8:	1007883a 	mov	r3,r2
   4eafc:	d0a6d517 	ldw	r2,-25772(gp)
   4eb00:	1884b03a 	or	r2,r3,r2
   4eb04:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4eb08:	d0a6d517 	ldw	r2,-25772(gp)
   4eb0c:	100170fa 	wrctl	ienable,r2
   4eb10:	e0bffc17 	ldw	r2,-16(fp)
   4eb14:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4eb18:	e0bffd17 	ldw	r2,-12(fp)
   4eb1c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   4eb20:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   4eb24:	0001883a 	nop
}
   4eb28:	e037883a 	mov	sp,fp
   4eb2c:	df000017 	ldw	fp,0(sp)
   4eb30:	dec00104 	addi	sp,sp,4
   4eb34:	f800283a 	ret

0004eb38 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   4eb38:	defff904 	addi	sp,sp,-28
   4eb3c:	df000615 	stw	fp,24(sp)
   4eb40:	df000604 	addi	fp,sp,24
   4eb44:	e13ffe15 	stw	r4,-8(fp)
   4eb48:	e17fff15 	stw	r5,-4(fp)
   4eb4c:	e0bfff17 	ldw	r2,-4(fp)
   4eb50:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4eb54:	0005303a 	rdctl	r2,status
   4eb58:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4eb5c:	e0fffb17 	ldw	r3,-20(fp)
   4eb60:	00bfff84 	movi	r2,-2
   4eb64:	1884703a 	and	r2,r3,r2
   4eb68:	1001703a 	wrctl	status,r2
  
  return context;
   4eb6c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4eb70:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   4eb74:	00c00044 	movi	r3,1
   4eb78:	e0bffa17 	ldw	r2,-24(fp)
   4eb7c:	1884983a 	sll	r2,r3,r2
   4eb80:	0084303a 	nor	r2,zero,r2
   4eb84:	1007883a 	mov	r3,r2
   4eb88:	d0a6d517 	ldw	r2,-25772(gp)
   4eb8c:	1884703a 	and	r2,r3,r2
   4eb90:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4eb94:	d0a6d517 	ldw	r2,-25772(gp)
   4eb98:	100170fa 	wrctl	ienable,r2
   4eb9c:	e0bffc17 	ldw	r2,-16(fp)
   4eba0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4eba4:	e0bffd17 	ldw	r2,-12(fp)
   4eba8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   4ebac:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   4ebb0:	0001883a 	nop
}
   4ebb4:	e037883a 	mov	sp,fp
   4ebb8:	df000017 	ldw	fp,0(sp)
   4ebbc:	dec00104 	addi	sp,sp,4
   4ebc0:	f800283a 	ret

0004ebc4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   4ebc4:	defffc04 	addi	sp,sp,-16
   4ebc8:	df000315 	stw	fp,12(sp)
   4ebcc:	df000304 	addi	fp,sp,12
   4ebd0:	e13ffe15 	stw	r4,-8(fp)
   4ebd4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   4ebd8:	000530fa 	rdctl	r2,ienable
   4ebdc:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   4ebe0:	00c00044 	movi	r3,1
   4ebe4:	e0bfff17 	ldw	r2,-4(fp)
   4ebe8:	1884983a 	sll	r2,r3,r2
   4ebec:	1007883a 	mov	r3,r2
   4ebf0:	e0bffd17 	ldw	r2,-12(fp)
   4ebf4:	1884703a 	and	r2,r3,r2
   4ebf8:	1004c03a 	cmpne	r2,r2,zero
   4ebfc:	10803fcc 	andi	r2,r2,255
}
   4ec00:	e037883a 	mov	sp,fp
   4ec04:	df000017 	ldw	fp,0(sp)
   4ec08:	dec00104 	addi	sp,sp,4
   4ec0c:	f800283a 	ret

0004ec10 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4ec10:	defff504 	addi	sp,sp,-44
   4ec14:	dfc00a15 	stw	ra,40(sp)
   4ec18:	df000915 	stw	fp,36(sp)
   4ec1c:	df000904 	addi	fp,sp,36
   4ec20:	e13ffc15 	stw	r4,-16(fp)
   4ec24:	e17ffd15 	stw	r5,-12(fp)
   4ec28:	e1bffe15 	stw	r6,-8(fp)
   4ec2c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   4ec30:	00bffa84 	movi	r2,-22
   4ec34:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   4ec38:	e0bffd17 	ldw	r2,-12(fp)
   4ec3c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   4ec40:	e0bff817 	ldw	r2,-32(fp)
   4ec44:	10800808 	cmpgei	r2,r2,32
   4ec48:	1000271e 	bne	r2,zero,4ece8 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4ec4c:	0005303a 	rdctl	r2,status
   4ec50:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4ec54:	e0fffb17 	ldw	r3,-20(fp)
   4ec58:	00bfff84 	movi	r2,-2
   4ec5c:	1884703a 	and	r2,r3,r2
   4ec60:	1001703a 	wrctl	status,r2
  
  return context;
   4ec64:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   4ec68:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   4ec6c:	00800174 	movhi	r2,5
   4ec70:	108cb504 	addi	r2,r2,13012
   4ec74:	e0fff817 	ldw	r3,-32(fp)
   4ec78:	180690fa 	slli	r3,r3,3
   4ec7c:	10c5883a 	add	r2,r2,r3
   4ec80:	e0fffe17 	ldw	r3,-8(fp)
   4ec84:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   4ec88:	00800174 	movhi	r2,5
   4ec8c:	108cb504 	addi	r2,r2,13012
   4ec90:	e0fff817 	ldw	r3,-32(fp)
   4ec94:	180690fa 	slli	r3,r3,3
   4ec98:	10c5883a 	add	r2,r2,r3
   4ec9c:	10800104 	addi	r2,r2,4
   4eca0:	e0ffff17 	ldw	r3,-4(fp)
   4eca4:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   4eca8:	e0bffe17 	ldw	r2,-8(fp)
   4ecac:	10000526 	beq	r2,zero,4ecc4 <alt_iic_isr_register+0xb4>
   4ecb0:	e0bff817 	ldw	r2,-32(fp)
   4ecb4:	100b883a 	mov	r5,r2
   4ecb8:	e13ffc17 	ldw	r4,-16(fp)
   4ecbc:	004eab00 	call	4eab0 <alt_ic_irq_enable>
   4ecc0:	00000406 	br	4ecd4 <alt_iic_isr_register+0xc4>
   4ecc4:	e0bff817 	ldw	r2,-32(fp)
   4ecc8:	100b883a 	mov	r5,r2
   4eccc:	e13ffc17 	ldw	r4,-16(fp)
   4ecd0:	004eb380 	call	4eb38 <alt_ic_irq_disable>
   4ecd4:	e0bff715 	stw	r2,-36(fp)
   4ecd8:	e0bffa17 	ldw	r2,-24(fp)
   4ecdc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4ece0:	e0bff917 	ldw	r2,-28(fp)
   4ece4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   4ece8:	e0bff717 	ldw	r2,-36(fp)
}
   4ecec:	e037883a 	mov	sp,fp
   4ecf0:	dfc00117 	ldw	ra,4(sp)
   4ecf4:	df000017 	ldw	fp,0(sp)
   4ecf8:	dec00204 	addi	sp,sp,8
   4ecfc:	f800283a 	ret

0004ed00 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   4ed00:	defff904 	addi	sp,sp,-28
   4ed04:	dfc00615 	stw	ra,24(sp)
   4ed08:	df000515 	stw	fp,20(sp)
   4ed0c:	df000504 	addi	fp,sp,20
   4ed10:	e13ffc15 	stw	r4,-16(fp)
   4ed14:	e17ffd15 	stw	r5,-12(fp)
   4ed18:	e1bffe15 	stw	r6,-8(fp)
   4ed1c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   4ed20:	e1bfff17 	ldw	r6,-4(fp)
   4ed24:	e17ffe17 	ldw	r5,-8(fp)
   4ed28:	e13ffd17 	ldw	r4,-12(fp)
   4ed2c:	004ef400 	call	4ef40 <open>
   4ed30:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   4ed34:	e0bffb17 	ldw	r2,-20(fp)
   4ed38:	10001c16 	blt	r2,zero,4edac <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   4ed3c:	00800174 	movhi	r2,5
   4ed40:	10815a04 	addi	r2,r2,1384
   4ed44:	e0fffb17 	ldw	r3,-20(fp)
   4ed48:	18c00324 	muli	r3,r3,12
   4ed4c:	10c5883a 	add	r2,r2,r3
   4ed50:	10c00017 	ldw	r3,0(r2)
   4ed54:	e0bffc17 	ldw	r2,-16(fp)
   4ed58:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   4ed5c:	00800174 	movhi	r2,5
   4ed60:	10815a04 	addi	r2,r2,1384
   4ed64:	e0fffb17 	ldw	r3,-20(fp)
   4ed68:	18c00324 	muli	r3,r3,12
   4ed6c:	10c5883a 	add	r2,r2,r3
   4ed70:	10800104 	addi	r2,r2,4
   4ed74:	10c00017 	ldw	r3,0(r2)
   4ed78:	e0bffc17 	ldw	r2,-16(fp)
   4ed7c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   4ed80:	00800174 	movhi	r2,5
   4ed84:	10815a04 	addi	r2,r2,1384
   4ed88:	e0fffb17 	ldw	r3,-20(fp)
   4ed8c:	18c00324 	muli	r3,r3,12
   4ed90:	10c5883a 	add	r2,r2,r3
   4ed94:	10800204 	addi	r2,r2,8
   4ed98:	10c00017 	ldw	r3,0(r2)
   4ed9c:	e0bffc17 	ldw	r2,-16(fp)
   4eda0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   4eda4:	e13ffb17 	ldw	r4,-20(fp)
   4eda8:	004d71c0 	call	4d71c <alt_release_fd>
  }
} 
   4edac:	0001883a 	nop
   4edb0:	e037883a 	mov	sp,fp
   4edb4:	dfc00117 	ldw	ra,4(sp)
   4edb8:	df000017 	ldw	fp,0(sp)
   4edbc:	dec00204 	addi	sp,sp,8
   4edc0:	f800283a 	ret

0004edc4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   4edc4:	defffb04 	addi	sp,sp,-20
   4edc8:	dfc00415 	stw	ra,16(sp)
   4edcc:	df000315 	stw	fp,12(sp)
   4edd0:	df000304 	addi	fp,sp,12
   4edd4:	e13ffd15 	stw	r4,-12(fp)
   4edd8:	e17ffe15 	stw	r5,-8(fp)
   4eddc:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   4ede0:	01c07fc4 	movi	r7,511
   4ede4:	01800044 	movi	r6,1
   4ede8:	e17ffd17 	ldw	r5,-12(fp)
   4edec:	01000174 	movhi	r4,5
   4edf0:	21015d04 	addi	r4,r4,1396
   4edf4:	004ed000 	call	4ed00 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   4edf8:	01c07fc4 	movi	r7,511
   4edfc:	000d883a 	mov	r6,zero
   4ee00:	e17ffe17 	ldw	r5,-8(fp)
   4ee04:	01000174 	movhi	r4,5
   4ee08:	21015a04 	addi	r4,r4,1384
   4ee0c:	004ed000 	call	4ed00 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   4ee10:	01c07fc4 	movi	r7,511
   4ee14:	01800044 	movi	r6,1
   4ee18:	e17fff17 	ldw	r5,-4(fp)
   4ee1c:	01000174 	movhi	r4,5
   4ee20:	21016004 	addi	r4,r4,1408
   4ee24:	004ed000 	call	4ed00 <alt_open_fd>
}  
   4ee28:	0001883a 	nop
   4ee2c:	e037883a 	mov	sp,fp
   4ee30:	dfc00117 	ldw	ra,4(sp)
   4ee34:	df000017 	ldw	fp,0(sp)
   4ee38:	dec00204 	addi	sp,sp,8
   4ee3c:	f800283a 	ret

0004ee40 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4ee40:	defffe04 	addi	sp,sp,-8
   4ee44:	dfc00115 	stw	ra,4(sp)
   4ee48:	df000015 	stw	fp,0(sp)
   4ee4c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ee50:	d0a00b17 	ldw	r2,-32724(gp)
   4ee54:	10000326 	beq	r2,zero,4ee64 <alt_get_errno+0x24>
   4ee58:	d0a00b17 	ldw	r2,-32724(gp)
   4ee5c:	103ee83a 	callr	r2
   4ee60:	00000106 	br	4ee68 <alt_get_errno+0x28>
   4ee64:	d0a6d104 	addi	r2,gp,-25788
}
   4ee68:	e037883a 	mov	sp,fp
   4ee6c:	dfc00117 	ldw	ra,4(sp)
   4ee70:	df000017 	ldw	fp,0(sp)
   4ee74:	dec00204 	addi	sp,sp,8
   4ee78:	f800283a 	ret

0004ee7c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   4ee7c:	defffd04 	addi	sp,sp,-12
   4ee80:	df000215 	stw	fp,8(sp)
   4ee84:	df000204 	addi	fp,sp,8
   4ee88:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   4ee8c:	e0bfff17 	ldw	r2,-4(fp)
   4ee90:	10800217 	ldw	r2,8(r2)
   4ee94:	10d00034 	orhi	r3,r2,16384
   4ee98:	e0bfff17 	ldw	r2,-4(fp)
   4ee9c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4eea0:	e03ffe15 	stw	zero,-8(fp)
   4eea4:	00001d06 	br	4ef1c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4eea8:	00800174 	movhi	r2,5
   4eeac:	10815a04 	addi	r2,r2,1384
   4eeb0:	e0fffe17 	ldw	r3,-8(fp)
   4eeb4:	18c00324 	muli	r3,r3,12
   4eeb8:	10c5883a 	add	r2,r2,r3
   4eebc:	10c00017 	ldw	r3,0(r2)
   4eec0:	e0bfff17 	ldw	r2,-4(fp)
   4eec4:	10800017 	ldw	r2,0(r2)
   4eec8:	1880111e 	bne	r3,r2,4ef10 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4eecc:	00800174 	movhi	r2,5
   4eed0:	10815a04 	addi	r2,r2,1384
   4eed4:	e0fffe17 	ldw	r3,-8(fp)
   4eed8:	18c00324 	muli	r3,r3,12
   4eedc:	10c5883a 	add	r2,r2,r3
   4eee0:	10800204 	addi	r2,r2,8
   4eee4:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4eee8:	1000090e 	bge	r2,zero,4ef10 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   4eeec:	e0bffe17 	ldw	r2,-8(fp)
   4eef0:	10c00324 	muli	r3,r2,12
   4eef4:	00800174 	movhi	r2,5
   4eef8:	10815a04 	addi	r2,r2,1384
   4eefc:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4ef00:	e0bfff17 	ldw	r2,-4(fp)
   4ef04:	18800226 	beq	r3,r2,4ef10 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   4ef08:	00bffcc4 	movi	r2,-13
   4ef0c:	00000806 	br	4ef30 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4ef10:	e0bffe17 	ldw	r2,-8(fp)
   4ef14:	10800044 	addi	r2,r2,1
   4ef18:	e0bffe15 	stw	r2,-8(fp)
   4ef1c:	d0a00a17 	ldw	r2,-32728(gp)
   4ef20:	1007883a 	mov	r3,r2
   4ef24:	e0bffe17 	ldw	r2,-8(fp)
   4ef28:	18bfdf2e 	bgeu	r3,r2,4eea8 <__alt_data_end+0xfffe7da8>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   4ef2c:	0005883a 	mov	r2,zero
}
   4ef30:	e037883a 	mov	sp,fp
   4ef34:	df000017 	ldw	fp,0(sp)
   4ef38:	dec00104 	addi	sp,sp,4
   4ef3c:	f800283a 	ret

0004ef40 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   4ef40:	defff604 	addi	sp,sp,-40
   4ef44:	dfc00915 	stw	ra,36(sp)
   4ef48:	df000815 	stw	fp,32(sp)
   4ef4c:	df000804 	addi	fp,sp,32
   4ef50:	e13ffd15 	stw	r4,-12(fp)
   4ef54:	e17ffe15 	stw	r5,-8(fp)
   4ef58:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   4ef5c:	00bfffc4 	movi	r2,-1
   4ef60:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   4ef64:	00bffb44 	movi	r2,-19
   4ef68:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   4ef6c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   4ef70:	d1600804 	addi	r5,gp,-32736
   4ef74:	e13ffd17 	ldw	r4,-12(fp)
   4ef78:	004f25c0 	call	4f25c <alt_find_dev>
   4ef7c:	e0bff815 	stw	r2,-32(fp)
   4ef80:	e0bff817 	ldw	r2,-32(fp)
   4ef84:	1000051e 	bne	r2,zero,4ef9c <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   4ef88:	e13ffd17 	ldw	r4,-12(fp)
   4ef8c:	004f2ec0 	call	4f2ec <alt_find_file>
   4ef90:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   4ef94:	00800044 	movi	r2,1
   4ef98:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   4ef9c:	e0bff817 	ldw	r2,-32(fp)
   4efa0:	10002926 	beq	r2,zero,4f048 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   4efa4:	e13ff817 	ldw	r4,-32(fp)
   4efa8:	004f3f40 	call	4f3f4 <alt_get_fd>
   4efac:	e0bff915 	stw	r2,-28(fp)
   4efb0:	e0bff917 	ldw	r2,-28(fp)
   4efb4:	1000030e 	bge	r2,zero,4efc4 <open+0x84>
    {
      status = index;
   4efb8:	e0bff917 	ldw	r2,-28(fp)
   4efbc:	e0bffa15 	stw	r2,-24(fp)
   4efc0:	00002306 	br	4f050 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   4efc4:	e0bff917 	ldw	r2,-28(fp)
   4efc8:	10c00324 	muli	r3,r2,12
   4efcc:	00800174 	movhi	r2,5
   4efd0:	10815a04 	addi	r2,r2,1384
   4efd4:	1885883a 	add	r2,r3,r2
   4efd8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   4efdc:	e0fffe17 	ldw	r3,-8(fp)
   4efe0:	00900034 	movhi	r2,16384
   4efe4:	10bfffc4 	addi	r2,r2,-1
   4efe8:	1886703a 	and	r3,r3,r2
   4efec:	e0bffc17 	ldw	r2,-16(fp)
   4eff0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   4eff4:	e0bffb17 	ldw	r2,-20(fp)
   4eff8:	1000051e 	bne	r2,zero,4f010 <open+0xd0>
   4effc:	e13ffc17 	ldw	r4,-16(fp)
   4f000:	004ee7c0 	call	4ee7c <alt_file_locked>
   4f004:	e0bffa15 	stw	r2,-24(fp)
   4f008:	e0bffa17 	ldw	r2,-24(fp)
   4f00c:	10001016 	blt	r2,zero,4f050 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   4f010:	e0bff817 	ldw	r2,-32(fp)
   4f014:	10800317 	ldw	r2,12(r2)
   4f018:	10000826 	beq	r2,zero,4f03c <open+0xfc>
   4f01c:	e0bff817 	ldw	r2,-32(fp)
   4f020:	10800317 	ldw	r2,12(r2)
   4f024:	e1ffff17 	ldw	r7,-4(fp)
   4f028:	e1bffe17 	ldw	r6,-8(fp)
   4f02c:	e17ffd17 	ldw	r5,-12(fp)
   4f030:	e13ffc17 	ldw	r4,-16(fp)
   4f034:	103ee83a 	callr	r2
   4f038:	00000106 	br	4f040 <open+0x100>
   4f03c:	0005883a 	mov	r2,zero
   4f040:	e0bffa15 	stw	r2,-24(fp)
   4f044:	00000206 	br	4f050 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   4f048:	00bffb44 	movi	r2,-19
   4f04c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   4f050:	e0bffa17 	ldw	r2,-24(fp)
   4f054:	1000090e 	bge	r2,zero,4f07c <open+0x13c>
  {
    alt_release_fd (index);  
   4f058:	e13ff917 	ldw	r4,-28(fp)
   4f05c:	004d71c0 	call	4d71c <alt_release_fd>
    ALT_ERRNO = -status;
   4f060:	004ee400 	call	4ee40 <alt_get_errno>
   4f064:	1007883a 	mov	r3,r2
   4f068:	e0bffa17 	ldw	r2,-24(fp)
   4f06c:	0085c83a 	sub	r2,zero,r2
   4f070:	18800015 	stw	r2,0(r3)
    return -1;
   4f074:	00bfffc4 	movi	r2,-1
   4f078:	00000106 	br	4f080 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   4f07c:	e0bff917 	ldw	r2,-28(fp)
}
   4f080:	e037883a 	mov	sp,fp
   4f084:	dfc00117 	ldw	ra,4(sp)
   4f088:	df000017 	ldw	fp,0(sp)
   4f08c:	dec00204 	addi	sp,sp,8
   4f090:	f800283a 	ret

0004f094 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   4f094:	defffa04 	addi	sp,sp,-24
   4f098:	df000515 	stw	fp,20(sp)
   4f09c:	df000504 	addi	fp,sp,20
   4f0a0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4f0a4:	0005303a 	rdctl	r2,status
   4f0a8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f0ac:	e0fffc17 	ldw	r3,-16(fp)
   4f0b0:	00bfff84 	movi	r2,-2
   4f0b4:	1884703a 	and	r2,r3,r2
   4f0b8:	1001703a 	wrctl	status,r2
  
  return context;
   4f0bc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   4f0c0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   4f0c4:	e0bfff17 	ldw	r2,-4(fp)
   4f0c8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   4f0cc:	e0bffd17 	ldw	r2,-12(fp)
   4f0d0:	10800017 	ldw	r2,0(r2)
   4f0d4:	e0fffd17 	ldw	r3,-12(fp)
   4f0d8:	18c00117 	ldw	r3,4(r3)
   4f0dc:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   4f0e0:	e0bffd17 	ldw	r2,-12(fp)
   4f0e4:	10800117 	ldw	r2,4(r2)
   4f0e8:	e0fffd17 	ldw	r3,-12(fp)
   4f0ec:	18c00017 	ldw	r3,0(r3)
   4f0f0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   4f0f4:	e0bffd17 	ldw	r2,-12(fp)
   4f0f8:	e0fffd17 	ldw	r3,-12(fp)
   4f0fc:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   4f100:	e0bffd17 	ldw	r2,-12(fp)
   4f104:	e0fffd17 	ldw	r3,-12(fp)
   4f108:	10c00015 	stw	r3,0(r2)
   4f10c:	e0bffb17 	ldw	r2,-20(fp)
   4f110:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4f114:	e0bffe17 	ldw	r2,-8(fp)
   4f118:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   4f11c:	0001883a 	nop
   4f120:	e037883a 	mov	sp,fp
   4f124:	df000017 	ldw	fp,0(sp)
   4f128:	dec00104 	addi	sp,sp,4
   4f12c:	f800283a 	ret

0004f130 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   4f130:	defffb04 	addi	sp,sp,-20
   4f134:	dfc00415 	stw	ra,16(sp)
   4f138:	df000315 	stw	fp,12(sp)
   4f13c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   4f140:	d0a00e17 	ldw	r2,-32712(gp)
   4f144:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   4f148:	d0a6d717 	ldw	r2,-25764(gp)
   4f14c:	10800044 	addi	r2,r2,1
   4f150:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4f154:	00002e06 	br	4f210 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   4f158:	e0bffd17 	ldw	r2,-12(fp)
   4f15c:	10800017 	ldw	r2,0(r2)
   4f160:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   4f164:	e0bffd17 	ldw	r2,-12(fp)
   4f168:	10800403 	ldbu	r2,16(r2)
   4f16c:	10803fcc 	andi	r2,r2,255
   4f170:	10000426 	beq	r2,zero,4f184 <alt_tick+0x54>
   4f174:	d0a6d717 	ldw	r2,-25764(gp)
   4f178:	1000021e 	bne	r2,zero,4f184 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   4f17c:	e0bffd17 	ldw	r2,-12(fp)
   4f180:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   4f184:	e0bffd17 	ldw	r2,-12(fp)
   4f188:	10800217 	ldw	r2,8(r2)
   4f18c:	d0e6d717 	ldw	r3,-25764(gp)
   4f190:	18801d36 	bltu	r3,r2,4f208 <alt_tick+0xd8>
   4f194:	e0bffd17 	ldw	r2,-12(fp)
   4f198:	10800403 	ldbu	r2,16(r2)
   4f19c:	10803fcc 	andi	r2,r2,255
   4f1a0:	1000191e 	bne	r2,zero,4f208 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   4f1a4:	e0bffd17 	ldw	r2,-12(fp)
   4f1a8:	10800317 	ldw	r2,12(r2)
   4f1ac:	e0fffd17 	ldw	r3,-12(fp)
   4f1b0:	18c00517 	ldw	r3,20(r3)
   4f1b4:	1809883a 	mov	r4,r3
   4f1b8:	103ee83a 	callr	r2
   4f1bc:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   4f1c0:	e0bfff17 	ldw	r2,-4(fp)
   4f1c4:	1000031e 	bne	r2,zero,4f1d4 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   4f1c8:	e13ffd17 	ldw	r4,-12(fp)
   4f1cc:	004f0940 	call	4f094 <alt_alarm_stop>
   4f1d0:	00000d06 	br	4f208 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   4f1d4:	e0bffd17 	ldw	r2,-12(fp)
   4f1d8:	10c00217 	ldw	r3,8(r2)
   4f1dc:	e0bfff17 	ldw	r2,-4(fp)
   4f1e0:	1887883a 	add	r3,r3,r2
   4f1e4:	e0bffd17 	ldw	r2,-12(fp)
   4f1e8:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   4f1ec:	e0bffd17 	ldw	r2,-12(fp)
   4f1f0:	10c00217 	ldw	r3,8(r2)
   4f1f4:	d0a6d717 	ldw	r2,-25764(gp)
   4f1f8:	1880032e 	bgeu	r3,r2,4f208 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   4f1fc:	e0bffd17 	ldw	r2,-12(fp)
   4f200:	00c00044 	movi	r3,1
   4f204:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   4f208:	e0bffe17 	ldw	r2,-8(fp)
   4f20c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4f210:	e0fffd17 	ldw	r3,-12(fp)
   4f214:	d0a00e04 	addi	r2,gp,-32712
   4f218:	18bfcf1e 	bne	r3,r2,4f158 <__alt_data_end+0xfffe8058>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   4f21c:	0001883a 	nop
}
   4f220:	0001883a 	nop
   4f224:	e037883a 	mov	sp,fp
   4f228:	dfc00117 	ldw	ra,4(sp)
   4f22c:	df000017 	ldw	fp,0(sp)
   4f230:	dec00204 	addi	sp,sp,8
   4f234:	f800283a 	ret

0004f238 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   4f238:	deffff04 	addi	sp,sp,-4
   4f23c:	df000015 	stw	fp,0(sp)
   4f240:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   4f244:	000170fa 	wrctl	ienable,zero
}
   4f248:	0001883a 	nop
   4f24c:	e037883a 	mov	sp,fp
   4f250:	df000017 	ldw	fp,0(sp)
   4f254:	dec00104 	addi	sp,sp,4
   4f258:	f800283a 	ret

0004f25c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   4f25c:	defffa04 	addi	sp,sp,-24
   4f260:	dfc00515 	stw	ra,20(sp)
   4f264:	df000415 	stw	fp,16(sp)
   4f268:	df000404 	addi	fp,sp,16
   4f26c:	e13ffe15 	stw	r4,-8(fp)
   4f270:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   4f274:	e0bfff17 	ldw	r2,-4(fp)
   4f278:	10800017 	ldw	r2,0(r2)
   4f27c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   4f280:	e13ffe17 	ldw	r4,-8(fp)
   4f284:	004088c0 	call	4088c <strlen>
   4f288:	10800044 	addi	r2,r2,1
   4f28c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4f290:	00000d06 	br	4f2c8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   4f294:	e0bffc17 	ldw	r2,-16(fp)
   4f298:	10800217 	ldw	r2,8(r2)
   4f29c:	e0fffd17 	ldw	r3,-12(fp)
   4f2a0:	180d883a 	mov	r6,r3
   4f2a4:	e17ffe17 	ldw	r5,-8(fp)
   4f2a8:	1009883a 	mov	r4,r2
   4f2ac:	004f6100 	call	4f610 <memcmp>
   4f2b0:	1000021e 	bne	r2,zero,4f2bc <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   4f2b4:	e0bffc17 	ldw	r2,-16(fp)
   4f2b8:	00000706 	br	4f2d8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   4f2bc:	e0bffc17 	ldw	r2,-16(fp)
   4f2c0:	10800017 	ldw	r2,0(r2)
   4f2c4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4f2c8:	e0fffc17 	ldw	r3,-16(fp)
   4f2cc:	e0bfff17 	ldw	r2,-4(fp)
   4f2d0:	18bff01e 	bne	r3,r2,4f294 <__alt_data_end+0xfffe8194>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   4f2d4:	0005883a 	mov	r2,zero
}
   4f2d8:	e037883a 	mov	sp,fp
   4f2dc:	dfc00117 	ldw	ra,4(sp)
   4f2e0:	df000017 	ldw	fp,0(sp)
   4f2e4:	dec00204 	addi	sp,sp,8
   4f2e8:	f800283a 	ret

0004f2ec <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   4f2ec:	defffb04 	addi	sp,sp,-20
   4f2f0:	dfc00415 	stw	ra,16(sp)
   4f2f4:	df000315 	stw	fp,12(sp)
   4f2f8:	df000304 	addi	fp,sp,12
   4f2fc:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   4f300:	d0a00617 	ldw	r2,-32744(gp)
   4f304:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4f308:	00003106 	br	4f3d0 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   4f30c:	e0bffd17 	ldw	r2,-12(fp)
   4f310:	10800217 	ldw	r2,8(r2)
   4f314:	1009883a 	mov	r4,r2
   4f318:	004088c0 	call	4088c <strlen>
   4f31c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   4f320:	e0bffd17 	ldw	r2,-12(fp)
   4f324:	10c00217 	ldw	r3,8(r2)
   4f328:	e0bffe17 	ldw	r2,-8(fp)
   4f32c:	10bfffc4 	addi	r2,r2,-1
   4f330:	1885883a 	add	r2,r3,r2
   4f334:	10800003 	ldbu	r2,0(r2)
   4f338:	10803fcc 	andi	r2,r2,255
   4f33c:	1080201c 	xori	r2,r2,128
   4f340:	10bfe004 	addi	r2,r2,-128
   4f344:	10800bd8 	cmpnei	r2,r2,47
   4f348:	1000031e 	bne	r2,zero,4f358 <alt_find_file+0x6c>
    {
      len -= 1;
   4f34c:	e0bffe17 	ldw	r2,-8(fp)
   4f350:	10bfffc4 	addi	r2,r2,-1
   4f354:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f358:	e0bffe17 	ldw	r2,-8(fp)
   4f35c:	e0ffff17 	ldw	r3,-4(fp)
   4f360:	1885883a 	add	r2,r3,r2
   4f364:	10800003 	ldbu	r2,0(r2)
   4f368:	10803fcc 	andi	r2,r2,255
   4f36c:	1080201c 	xori	r2,r2,128
   4f370:	10bfe004 	addi	r2,r2,-128
   4f374:	10800be0 	cmpeqi	r2,r2,47
   4f378:	1000081e 	bne	r2,zero,4f39c <alt_find_file+0xb0>
   4f37c:	e0bffe17 	ldw	r2,-8(fp)
   4f380:	e0ffff17 	ldw	r3,-4(fp)
   4f384:	1885883a 	add	r2,r3,r2
   4f388:	10800003 	ldbu	r2,0(r2)
   4f38c:	10803fcc 	andi	r2,r2,255
   4f390:	1080201c 	xori	r2,r2,128
   4f394:	10bfe004 	addi	r2,r2,-128
   4f398:	10000a1e 	bne	r2,zero,4f3c4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   4f39c:	e0bffd17 	ldw	r2,-12(fp)
   4f3a0:	10800217 	ldw	r2,8(r2)
   4f3a4:	e0fffe17 	ldw	r3,-8(fp)
   4f3a8:	180d883a 	mov	r6,r3
   4f3ac:	e17fff17 	ldw	r5,-4(fp)
   4f3b0:	1009883a 	mov	r4,r2
   4f3b4:	004f6100 	call	4f610 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f3b8:	1000021e 	bne	r2,zero,4f3c4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   4f3bc:	e0bffd17 	ldw	r2,-12(fp)
   4f3c0:	00000706 	br	4f3e0 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   4f3c4:	e0bffd17 	ldw	r2,-12(fp)
   4f3c8:	10800017 	ldw	r2,0(r2)
   4f3cc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4f3d0:	e0fffd17 	ldw	r3,-12(fp)
   4f3d4:	d0a00604 	addi	r2,gp,-32744
   4f3d8:	18bfcc1e 	bne	r3,r2,4f30c <__alt_data_end+0xfffe820c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   4f3dc:	0005883a 	mov	r2,zero
}
   4f3e0:	e037883a 	mov	sp,fp
   4f3e4:	dfc00117 	ldw	ra,4(sp)
   4f3e8:	df000017 	ldw	fp,0(sp)
   4f3ec:	dec00204 	addi	sp,sp,8
   4f3f0:	f800283a 	ret

0004f3f4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   4f3f4:	defffc04 	addi	sp,sp,-16
   4f3f8:	df000315 	stw	fp,12(sp)
   4f3fc:	df000304 	addi	fp,sp,12
   4f400:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   4f404:	00bffa04 	movi	r2,-24
   4f408:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4f40c:	e03ffd15 	stw	zero,-12(fp)
   4f410:	00001906 	br	4f478 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   4f414:	00800174 	movhi	r2,5
   4f418:	10815a04 	addi	r2,r2,1384
   4f41c:	e0fffd17 	ldw	r3,-12(fp)
   4f420:	18c00324 	muli	r3,r3,12
   4f424:	10c5883a 	add	r2,r2,r3
   4f428:	10800017 	ldw	r2,0(r2)
   4f42c:	10000f1e 	bne	r2,zero,4f46c <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   4f430:	00800174 	movhi	r2,5
   4f434:	10815a04 	addi	r2,r2,1384
   4f438:	e0fffd17 	ldw	r3,-12(fp)
   4f43c:	18c00324 	muli	r3,r3,12
   4f440:	10c5883a 	add	r2,r2,r3
   4f444:	e0ffff17 	ldw	r3,-4(fp)
   4f448:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   4f44c:	d0e00a17 	ldw	r3,-32728(gp)
   4f450:	e0bffd17 	ldw	r2,-12(fp)
   4f454:	1880020e 	bge	r3,r2,4f460 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   4f458:	e0bffd17 	ldw	r2,-12(fp)
   4f45c:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   4f460:	e0bffd17 	ldw	r2,-12(fp)
   4f464:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   4f468:	00000606 	br	4f484 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4f46c:	e0bffd17 	ldw	r2,-12(fp)
   4f470:	10800044 	addi	r2,r2,1
   4f474:	e0bffd15 	stw	r2,-12(fp)
   4f478:	e0bffd17 	ldw	r2,-12(fp)
   4f47c:	10800810 	cmplti	r2,r2,32
   4f480:	103fe41e 	bne	r2,zero,4f414 <__alt_data_end+0xfffe8314>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   4f484:	e0bffe17 	ldw	r2,-8(fp)
}
   4f488:	e037883a 	mov	sp,fp
   4f48c:	df000017 	ldw	fp,0(sp)
   4f490:	dec00104 	addi	sp,sp,4
   4f494:	f800283a 	ret

0004f498 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   4f498:	defffb04 	addi	sp,sp,-20
   4f49c:	df000415 	stw	fp,16(sp)
   4f4a0:	df000404 	addi	fp,sp,16
   4f4a4:	e13ffe15 	stw	r4,-8(fp)
   4f4a8:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   4f4ac:	e0bfff17 	ldw	r2,-4(fp)
   4f4b0:	10840070 	cmpltui	r2,r2,4097
   4f4b4:	1000021e 	bne	r2,zero,4f4c0 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   4f4b8:	00840004 	movi	r2,4096
   4f4bc:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   4f4c0:	e0fffe17 	ldw	r3,-8(fp)
   4f4c4:	e0bfff17 	ldw	r2,-4(fp)
   4f4c8:	1885883a 	add	r2,r3,r2
   4f4cc:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   4f4d0:	e0bffe17 	ldw	r2,-8(fp)
   4f4d4:	e0bffc15 	stw	r2,-16(fp)
   4f4d8:	00000506 	br	4f4f0 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   4f4dc:	e0bffc17 	ldw	r2,-16(fp)
   4f4e0:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   4f4e4:	e0bffc17 	ldw	r2,-16(fp)
   4f4e8:	10800804 	addi	r2,r2,32
   4f4ec:	e0bffc15 	stw	r2,-16(fp)
   4f4f0:	e0fffc17 	ldw	r3,-16(fp)
   4f4f4:	e0bffd17 	ldw	r2,-12(fp)
   4f4f8:	18bff836 	bltu	r3,r2,4f4dc <__alt_data_end+0xfffe83dc>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   4f4fc:	e0bffe17 	ldw	r2,-8(fp)
   4f500:	108007cc 	andi	r2,r2,31
   4f504:	10000226 	beq	r2,zero,4f510 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   4f508:	e0bffc17 	ldw	r2,-16(fp)
   4f50c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   4f510:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   4f514:	0001883a 	nop
   4f518:	e037883a 	mov	sp,fp
   4f51c:	df000017 	ldw	fp,0(sp)
   4f520:	dec00104 	addi	sp,sp,4
   4f524:	f800283a 	ret

0004f528 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   4f528:	defffe04 	addi	sp,sp,-8
   4f52c:	df000115 	stw	fp,4(sp)
   4f530:	df000104 	addi	fp,sp,4
   4f534:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   4f538:	e0bfff17 	ldw	r2,-4(fp)
   4f53c:	10bffe84 	addi	r2,r2,-6
   4f540:	10c00428 	cmpgeui	r3,r2,16
   4f544:	18001a1e 	bne	r3,zero,4f5b0 <alt_exception_cause_generated_bad_addr+0x88>
   4f548:	100690ba 	slli	r3,r2,2
   4f54c:	00800174 	movhi	r2,5
   4f550:	10bd5804 	addi	r2,r2,-2720
   4f554:	1885883a 	add	r2,r3,r2
   4f558:	10800017 	ldw	r2,0(r2)
   4f55c:	1000683a 	jmp	r2
   4f560:	0004f5a0 	cmpeqi	zero,zero,5078
   4f564:	0004f5a0 	cmpeqi	zero,zero,5078
   4f568:	0004f5b0 	cmpltui	zero,zero,5078
   4f56c:	0004f5b0 	cmpltui	zero,zero,5078
   4f570:	0004f5b0 	cmpltui	zero,zero,5078
   4f574:	0004f5a0 	cmpeqi	zero,zero,5078
   4f578:	0004f5a8 	cmpgeui	zero,zero,5078
   4f57c:	0004f5b0 	cmpltui	zero,zero,5078
   4f580:	0004f5a0 	cmpeqi	zero,zero,5078
   4f584:	0004f5a0 	cmpeqi	zero,zero,5078
   4f588:	0004f5b0 	cmpltui	zero,zero,5078
   4f58c:	0004f5a0 	cmpeqi	zero,zero,5078
   4f590:	0004f5a8 	cmpgeui	zero,zero,5078
   4f594:	0004f5b0 	cmpltui	zero,zero,5078
   4f598:	0004f5b0 	cmpltui	zero,zero,5078
   4f59c:	0004f5a0 	cmpeqi	zero,zero,5078
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   4f5a0:	00800044 	movi	r2,1
   4f5a4:	00000306 	br	4f5b4 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   4f5a8:	0005883a 	mov	r2,zero
   4f5ac:	00000106 	br	4f5b4 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   4f5b0:	0005883a 	mov	r2,zero
  }
}
   4f5b4:	e037883a 	mov	sp,fp
   4f5b8:	df000017 	ldw	fp,0(sp)
   4f5bc:	dec00104 	addi	sp,sp,4
   4f5c0:	f800283a 	ret

0004f5c4 <atexit>:
   4f5c4:	200b883a 	mov	r5,r4
   4f5c8:	000f883a 	mov	r7,zero
   4f5cc:	000d883a 	mov	r6,zero
   4f5d0:	0009883a 	mov	r4,zero
   4f5d4:	004f68c1 	jmpi	4f68c <__register_exitproc>

0004f5d8 <exit>:
   4f5d8:	defffe04 	addi	sp,sp,-8
   4f5dc:	000b883a 	mov	r5,zero
   4f5e0:	dc000015 	stw	r16,0(sp)
   4f5e4:	dfc00115 	stw	ra,4(sp)
   4f5e8:	2021883a 	mov	r16,r4
   4f5ec:	004f7a40 	call	4f7a4 <__call_exitprocs>
   4f5f0:	00800174 	movhi	r2,5
   4f5f4:	1085d204 	addi	r2,r2,5960
   4f5f8:	11000017 	ldw	r4,0(r2)
   4f5fc:	20800f17 	ldw	r2,60(r4)
   4f600:	10000126 	beq	r2,zero,4f608 <exit+0x30>
   4f604:	103ee83a 	callr	r2
   4f608:	8009883a 	mov	r4,r16
   4f60c:	004f9240 	call	4f924 <_exit>

0004f610 <memcmp>:
   4f610:	01c000c4 	movi	r7,3
   4f614:	3980192e 	bgeu	r7,r6,4f67c <memcmp+0x6c>
   4f618:	2144b03a 	or	r2,r4,r5
   4f61c:	11c4703a 	and	r2,r2,r7
   4f620:	10000f26 	beq	r2,zero,4f660 <memcmp+0x50>
   4f624:	20800003 	ldbu	r2,0(r4)
   4f628:	28c00003 	ldbu	r3,0(r5)
   4f62c:	10c0151e 	bne	r2,r3,4f684 <memcmp+0x74>
   4f630:	31bfff84 	addi	r6,r6,-2
   4f634:	01ffffc4 	movi	r7,-1
   4f638:	00000406 	br	4f64c <memcmp+0x3c>
   4f63c:	20800003 	ldbu	r2,0(r4)
   4f640:	28c00003 	ldbu	r3,0(r5)
   4f644:	31bfffc4 	addi	r6,r6,-1
   4f648:	10c00e1e 	bne	r2,r3,4f684 <memcmp+0x74>
   4f64c:	21000044 	addi	r4,r4,1
   4f650:	29400044 	addi	r5,r5,1
   4f654:	31fff91e 	bne	r6,r7,4f63c <__alt_data_end+0xfffe853c>
   4f658:	0005883a 	mov	r2,zero
   4f65c:	f800283a 	ret
   4f660:	20c00017 	ldw	r3,0(r4)
   4f664:	28800017 	ldw	r2,0(r5)
   4f668:	18bfee1e 	bne	r3,r2,4f624 <__alt_data_end+0xfffe8524>
   4f66c:	31bfff04 	addi	r6,r6,-4
   4f670:	21000104 	addi	r4,r4,4
   4f674:	29400104 	addi	r5,r5,4
   4f678:	39bff936 	bltu	r7,r6,4f660 <__alt_data_end+0xfffe8560>
   4f67c:	303fe91e 	bne	r6,zero,4f624 <__alt_data_end+0xfffe8524>
   4f680:	003ff506 	br	4f658 <__alt_data_end+0xfffe8558>
   4f684:	10c5c83a 	sub	r2,r2,r3
   4f688:	f800283a 	ret

0004f68c <__register_exitproc>:
   4f68c:	defffa04 	addi	sp,sp,-24
   4f690:	dc000315 	stw	r16,12(sp)
   4f694:	04000174 	movhi	r16,5
   4f698:	8405d204 	addi	r16,r16,5960
   4f69c:	80c00017 	ldw	r3,0(r16)
   4f6a0:	dc400415 	stw	r17,16(sp)
   4f6a4:	dfc00515 	stw	ra,20(sp)
   4f6a8:	18805217 	ldw	r2,328(r3)
   4f6ac:	2023883a 	mov	r17,r4
   4f6b0:	10003726 	beq	r2,zero,4f790 <__register_exitproc+0x104>
   4f6b4:	10c00117 	ldw	r3,4(r2)
   4f6b8:	010007c4 	movi	r4,31
   4f6bc:	20c00e16 	blt	r4,r3,4f6f8 <__register_exitproc+0x6c>
   4f6c0:	1a000044 	addi	r8,r3,1
   4f6c4:	8800221e 	bne	r17,zero,4f750 <__register_exitproc+0xc4>
   4f6c8:	18c00084 	addi	r3,r3,2
   4f6cc:	18c7883a 	add	r3,r3,r3
   4f6d0:	18c7883a 	add	r3,r3,r3
   4f6d4:	12000115 	stw	r8,4(r2)
   4f6d8:	10c7883a 	add	r3,r2,r3
   4f6dc:	19400015 	stw	r5,0(r3)
   4f6e0:	0005883a 	mov	r2,zero
   4f6e4:	dfc00517 	ldw	ra,20(sp)
   4f6e8:	dc400417 	ldw	r17,16(sp)
   4f6ec:	dc000317 	ldw	r16,12(sp)
   4f6f0:	dec00604 	addi	sp,sp,24
   4f6f4:	f800283a 	ret
   4f6f8:	00800034 	movhi	r2,0
   4f6fc:	10800004 	addi	r2,r2,0
   4f700:	10002626 	beq	r2,zero,4f79c <__register_exitproc+0x110>
   4f704:	01006404 	movi	r4,400
   4f708:	d9400015 	stw	r5,0(sp)
   4f70c:	d9800115 	stw	r6,4(sp)
   4f710:	d9c00215 	stw	r7,8(sp)
   4f714:	00000000 	call	0 <__alt_mem_onchip_memory2-0x40000>
   4f718:	d9400017 	ldw	r5,0(sp)
   4f71c:	d9800117 	ldw	r6,4(sp)
   4f720:	d9c00217 	ldw	r7,8(sp)
   4f724:	10001d26 	beq	r2,zero,4f79c <__register_exitproc+0x110>
   4f728:	81000017 	ldw	r4,0(r16)
   4f72c:	10000115 	stw	zero,4(r2)
   4f730:	02000044 	movi	r8,1
   4f734:	22405217 	ldw	r9,328(r4)
   4f738:	0007883a 	mov	r3,zero
   4f73c:	12400015 	stw	r9,0(r2)
   4f740:	20805215 	stw	r2,328(r4)
   4f744:	10006215 	stw	zero,392(r2)
   4f748:	10006315 	stw	zero,396(r2)
   4f74c:	883fde26 	beq	r17,zero,4f6c8 <__alt_data_end+0xfffe85c8>
   4f750:	18c9883a 	add	r4,r3,r3
   4f754:	2109883a 	add	r4,r4,r4
   4f758:	1109883a 	add	r4,r2,r4
   4f75c:	21802215 	stw	r6,136(r4)
   4f760:	01800044 	movi	r6,1
   4f764:	12406217 	ldw	r9,392(r2)
   4f768:	30cc983a 	sll	r6,r6,r3
   4f76c:	4992b03a 	or	r9,r9,r6
   4f770:	12406215 	stw	r9,392(r2)
   4f774:	21c04215 	stw	r7,264(r4)
   4f778:	01000084 	movi	r4,2
   4f77c:	893fd21e 	bne	r17,r4,4f6c8 <__alt_data_end+0xfffe85c8>
   4f780:	11006317 	ldw	r4,396(r2)
   4f784:	218cb03a 	or	r6,r4,r6
   4f788:	11806315 	stw	r6,396(r2)
   4f78c:	003fce06 	br	4f6c8 <__alt_data_end+0xfffe85c8>
   4f790:	18805304 	addi	r2,r3,332
   4f794:	18805215 	stw	r2,328(r3)
   4f798:	003fc606 	br	4f6b4 <__alt_data_end+0xfffe85b4>
   4f79c:	00bfffc4 	movi	r2,-1
   4f7a0:	003fd006 	br	4f6e4 <__alt_data_end+0xfffe85e4>

0004f7a4 <__call_exitprocs>:
   4f7a4:	defff504 	addi	sp,sp,-44
   4f7a8:	df000915 	stw	fp,36(sp)
   4f7ac:	dd400615 	stw	r21,24(sp)
   4f7b0:	dc800315 	stw	r18,12(sp)
   4f7b4:	dfc00a15 	stw	ra,40(sp)
   4f7b8:	ddc00815 	stw	r23,32(sp)
   4f7bc:	dd800715 	stw	r22,28(sp)
   4f7c0:	dd000515 	stw	r20,20(sp)
   4f7c4:	dcc00415 	stw	r19,16(sp)
   4f7c8:	dc400215 	stw	r17,8(sp)
   4f7cc:	dc000115 	stw	r16,4(sp)
   4f7d0:	d9000015 	stw	r4,0(sp)
   4f7d4:	2839883a 	mov	fp,r5
   4f7d8:	04800044 	movi	r18,1
   4f7dc:	057fffc4 	movi	r21,-1
   4f7e0:	00800174 	movhi	r2,5
   4f7e4:	1085d204 	addi	r2,r2,5960
   4f7e8:	12000017 	ldw	r8,0(r2)
   4f7ec:	45005217 	ldw	r20,328(r8)
   4f7f0:	44c05204 	addi	r19,r8,328
   4f7f4:	a0001c26 	beq	r20,zero,4f868 <__call_exitprocs+0xc4>
   4f7f8:	a0800117 	ldw	r2,4(r20)
   4f7fc:	15ffffc4 	addi	r23,r2,-1
   4f800:	b8000d16 	blt	r23,zero,4f838 <__call_exitprocs+0x94>
   4f804:	14000044 	addi	r16,r2,1
   4f808:	8421883a 	add	r16,r16,r16
   4f80c:	8421883a 	add	r16,r16,r16
   4f810:	84402004 	addi	r17,r16,128
   4f814:	a463883a 	add	r17,r20,r17
   4f818:	a421883a 	add	r16,r20,r16
   4f81c:	e0001e26 	beq	fp,zero,4f898 <__call_exitprocs+0xf4>
   4f820:	80804017 	ldw	r2,256(r16)
   4f824:	e0801c26 	beq	fp,r2,4f898 <__call_exitprocs+0xf4>
   4f828:	bdffffc4 	addi	r23,r23,-1
   4f82c:	843fff04 	addi	r16,r16,-4
   4f830:	8c7fff04 	addi	r17,r17,-4
   4f834:	bd7ff91e 	bne	r23,r21,4f81c <__alt_data_end+0xfffe871c>
   4f838:	00800034 	movhi	r2,0
   4f83c:	10800004 	addi	r2,r2,0
   4f840:	10000926 	beq	r2,zero,4f868 <__call_exitprocs+0xc4>
   4f844:	a0800117 	ldw	r2,4(r20)
   4f848:	1000301e 	bne	r2,zero,4f90c <__call_exitprocs+0x168>
   4f84c:	a0800017 	ldw	r2,0(r20)
   4f850:	10003226 	beq	r2,zero,4f91c <__call_exitprocs+0x178>
   4f854:	a009883a 	mov	r4,r20
   4f858:	98800015 	stw	r2,0(r19)
   4f85c:	00000000 	call	0 <__alt_mem_onchip_memory2-0x40000>
   4f860:	9d000017 	ldw	r20,0(r19)
   4f864:	a03fe41e 	bne	r20,zero,4f7f8 <__alt_data_end+0xfffe86f8>
   4f868:	dfc00a17 	ldw	ra,40(sp)
   4f86c:	df000917 	ldw	fp,36(sp)
   4f870:	ddc00817 	ldw	r23,32(sp)
   4f874:	dd800717 	ldw	r22,28(sp)
   4f878:	dd400617 	ldw	r21,24(sp)
   4f87c:	dd000517 	ldw	r20,20(sp)
   4f880:	dcc00417 	ldw	r19,16(sp)
   4f884:	dc800317 	ldw	r18,12(sp)
   4f888:	dc400217 	ldw	r17,8(sp)
   4f88c:	dc000117 	ldw	r16,4(sp)
   4f890:	dec00b04 	addi	sp,sp,44
   4f894:	f800283a 	ret
   4f898:	a0800117 	ldw	r2,4(r20)
   4f89c:	80c00017 	ldw	r3,0(r16)
   4f8a0:	10bfffc4 	addi	r2,r2,-1
   4f8a4:	15c01426 	beq	r2,r23,4f8f8 <__call_exitprocs+0x154>
   4f8a8:	80000015 	stw	zero,0(r16)
   4f8ac:	183fde26 	beq	r3,zero,4f828 <__alt_data_end+0xfffe8728>
   4f8b0:	95c8983a 	sll	r4,r18,r23
   4f8b4:	a0806217 	ldw	r2,392(r20)
   4f8b8:	a5800117 	ldw	r22,4(r20)
   4f8bc:	2084703a 	and	r2,r4,r2
   4f8c0:	10000b26 	beq	r2,zero,4f8f0 <__call_exitprocs+0x14c>
   4f8c4:	a0806317 	ldw	r2,396(r20)
   4f8c8:	2088703a 	and	r4,r4,r2
   4f8cc:	20000c1e 	bne	r4,zero,4f900 <__call_exitprocs+0x15c>
   4f8d0:	89400017 	ldw	r5,0(r17)
   4f8d4:	d9000017 	ldw	r4,0(sp)
   4f8d8:	183ee83a 	callr	r3
   4f8dc:	a0800117 	ldw	r2,4(r20)
   4f8e0:	15bfbf1e 	bne	r2,r22,4f7e0 <__alt_data_end+0xfffe86e0>
   4f8e4:	98800017 	ldw	r2,0(r19)
   4f8e8:	153fcf26 	beq	r2,r20,4f828 <__alt_data_end+0xfffe8728>
   4f8ec:	003fbc06 	br	4f7e0 <__alt_data_end+0xfffe86e0>
   4f8f0:	183ee83a 	callr	r3
   4f8f4:	003ff906 	br	4f8dc <__alt_data_end+0xfffe87dc>
   4f8f8:	a5c00115 	stw	r23,4(r20)
   4f8fc:	003feb06 	br	4f8ac <__alt_data_end+0xfffe87ac>
   4f900:	89000017 	ldw	r4,0(r17)
   4f904:	183ee83a 	callr	r3
   4f908:	003ff406 	br	4f8dc <__alt_data_end+0xfffe87dc>
   4f90c:	a0800017 	ldw	r2,0(r20)
   4f910:	a027883a 	mov	r19,r20
   4f914:	1029883a 	mov	r20,r2
   4f918:	003fb606 	br	4f7f4 <__alt_data_end+0xfffe86f4>
   4f91c:	0005883a 	mov	r2,zero
   4f920:	003ffb06 	br	4f910 <__alt_data_end+0xfffe8810>

0004f924 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   4f924:	defffd04 	addi	sp,sp,-12
   4f928:	df000215 	stw	fp,8(sp)
   4f92c:	df000204 	addi	fp,sp,8
   4f930:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   4f934:	0001883a 	nop
   4f938:	e0bfff17 	ldw	r2,-4(fp)
   4f93c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   4f940:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   4f944:	10000226 	beq	r2,zero,4f950 <_exit+0x2c>
    ALT_SIM_FAIL();
   4f948:	002af070 	cmpltui	zero,zero,43969
   4f94c:	00000106 	br	4f954 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   4f950:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   4f954:	003fff06 	br	4f954 <__alt_data_end+0xfffe8854>
